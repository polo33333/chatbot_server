{"version":3,"sources":["./src/app/customer/bots/bots.component.ts","./src/app/customer/bots/bots.component.html","./src/app/customer/customer-routing.module.ts","./src/app/customer/customer.component.ts","./src/app/customer/customer.component.html","./src/app/customer/customer.module.ts","./src/app/customer/dialog/bot-create/bot-create.component.ts","./src/app/customer/dialog/bot-create/bot-create.component.html","./src/app/customer/dialog/bot-remove/bot-remove.component.ts","./src/app/customer/dialog/bot-remove/bot-remove.component.html","./src/app/customer/guides/guides.component.ts","./src/app/customer/guides/guides.component.html","./src/app/customer/overview/overview.component.ts","./src/app/customer/overview/overview.component.html","./src/app/customer/profiles/profiles.component.ts","./src/app/customer/profiles/profiles.component.html","./src/app/customer/supports/supports.component.ts","./src/app/customer/supports/supports.component.html","./src/app/shared/models/bots.model.ts"],"names":[],"mappings":"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","file":"customer-customer-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BotCreateComponent } from '../dialog/bot-create/bot-create.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BotService } from 'src/app/shared/services/bots.service';\nimport { BotRemoveComponent } from '../dialog/bot-remove/bot-remove.component';\nimport { Bot } from 'src/app/shared/models/bots.model';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-bots',\n  templateUrl: './bots.component.html',\n  styleUrls: ['./bots.component.css']\n})\nexport class BotsComponent implements OnInit {\n\n  loading = true;\n  //variable\n  bots: any = [];\n\n\n\n  constructor(\n    private botServer: BotService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar\n    ) { }\n\n  ngOnInit() {\n    this.getAllBot();\n  }\n\n  // reload data bot\n  refresh() {\n    this.getAllBot();\n  }\n\n  // opne diaglog create bot\n  diagCreateBot() {\n    this.createBot();\n  }\n  // opne diaglog remove bot\n  diagRemoveBot(data: any) {\n    this.removeBot(data);\n  }\n\n\n\n\n\n\n\n\n\n\n  //get all bot\n  getAllBot() {\n    this.botServer.getAllBots()\n      .subscribe(res => {\n\n        //this.connectFail = false;\n        this.bots = res['data'] as Bot[];\n        localStorage.setItem('tpsoftbot_client', JSON.stringify(this.bots));\n        setTimeout(() => {\n          this.loading = false;\n        }, 500);\n\n      },\n        error => {\n          this.loading = false;\n          this._snackBar.open('Đã có lỗi xảy ra', 'OK', {\n            duration: 1000\n          });\n          //this.connectFail = true;\n        }\n      );\n  }\n\n  //save localstorage data info bot\n  saveLocalStorageBot(data: any){\n    localStorage.setItem('tpsoftbot_client', JSON.stringify(data));\n  }\n\n  //create bot\n  createBot() {\n    const dialogRef = this.dialog.open(BotCreateComponent, {\n      data: null,\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.action === 1) {\n        this.botServer.createBots(result.data).subscribe(\n          res => {\n            if (res.status === 200) {\n              this.getAllBot();\n              this._snackBar.open('Thao tác thành công', 'OK', {\n                duration: 1000\n              });\n            } else {\n              this._snackBar.open('Thao tác không thành công', 'OK', {\n                duration: 1000\n              });\n            }\n          },\n          error => {\n            this._snackBar.open('Thao tác không thành công', 'OK', {\n              duration: 1000\n            });\n            //this.connectFail = true;\n          }\n        );\n      }\n    });\n\n  }\n\n  //remove bot\n  removeBot(bot:any) {\n    const dialogRef = this.dialog.open(BotRemoveComponent, {\n      data: bot,\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.action === 1) {\n        this.botServer.removeBot(bot.botId).subscribe(\n          res => {\n            if (res.status === 200) {\n              this.getAllBot();\n              this._snackBar.open('Thao tác thành công', 'OK', {\n                duration: 1000\n              });\n            } else {\n              this._snackBar.open('Thao tác không thành công', 'OK', {\n                duration: 1000\n              });\n            }\n          },\n          error => {\n            this._snackBar.open('Thao tác không thành công', 'OK', {\n              duration: 1000\n            });\n            //this.connectFail = true;\n          }\n        );\n      }\n    });\n  }\n\n}\n","<!-- Applying the mat-tyography class adds styles for native elements. -->\n<mat-toolbar>\n\n    <button mat-icon-button color=\"primary\" class=\"btn-back\">\n        <mat-icon>arrow_back_ios</mat-icon>\n    </button>\n    <span class=\"title-header\">QUẢN LÝ BOT</span>\n\n    <div class=\"right-header\">\n        <div class=\"func-header\">\n            <span class=\"btn-header\">\n                <button mat-button color=\"primary\" (click)=\"refresh()\">\n                    <mat-icon>refresh</mat-icon>\n                    LÀM MỚI\n                </button>\n            </span>\n            <span class=\"btn-header\">\n                <!-- <button mat-button color=\"primary\" (click)=\"diagCreateBot()\">\n                    <mat-icon>add</mat-icon>\n                    TẠO MỚI BOT\n                </button> -->\n            </span>\n        </div>\n    </div>\n\n</mat-toolbar>\n<div class=\"page-content_1\" *ngIf=\"loading else isloading\">\n    <div class=\"loading\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin:auto;background:transparent;display:block;\" width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <rect fill=\"#e91624\" x=\"55\" y=\"15\" width=\"30\" height=\"30\" rx=\"3\" ry=\"3\">\n            <animate attributeName=\"x\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"-1.8333333333333333s\"></animate>\n            <animate attributeName=\"y\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"-1.3333333333333333s\"></animate>\n            </rect><rect fill=\"#f0a65a\" x=\"15\" y=\"50.388\" width=\"30\" height=\"30\" rx=\"3\" ry=\"3\">\n            <animate attributeName=\"x\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"-1.1666666666666667s\"></animate>\n            <animate attributeName=\"y\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"-0.6666666666666666s\"></animate>\n            </rect><rect fill=\"#13d00d\" x=\"55\" y=\"55\" width=\"30\" height=\"30\" rx=\"3\" ry=\"3\">\n            <animate attributeName=\"x\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"-0.5s\"></animate>\n            <animate attributeName=\"y\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"0s\"></animate>\n            </rect>\n            </svg>\n    </div>\n</div>\n\n<ng-template #isloading>\n    \n    <div class=\"page-content_1\" *ngIf =\"(bots == undefined ||bots.length == 0)\">\n        <div class=\"container-fluid\">\n           <span class=\"lb-empty\"> Không có dữ liệu</span>\n        </div>\n        \n    </div>\n    \n    <div class=\"page-content\" *ngIf=\"!(bots == undefined ||bots.length == 0)\">\n        <!-- list-bot -->\n        <div class=\"container-fluid\" > \n            <div class=\"list-bot\">\n                <div class=\"row\">\n                    <div class=\"col col-md-3 item-bot\" *ngFor=\"let item of bots\">\n                        <mat-card class=\"example-card\">\n                            <mat-card-content>\n                                <div class=\"btn-bot-option\">\n                                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Setting\">\n                                        <mat-icon>more_vert</mat-icon>\n                                    </button>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button mat-menu-item *ngIf=\"item.isActive\">\n                                            <mat-icon>lock</mat-icon>\n                                            <span>Khóa Bot</span>\n                                        </button>\n                                        <button mat-menu-item *ngIf=\"!item.isActive\">\n                                            <mat-icon>lock_open</mat-icon>\n                                            <span>Mở khóa Bot</span>\n                                        </button>\n                                        <button mat-menu-item disabled>\n                                            <mat-icon>file_copy</mat-icon>\n                                            <span>Tạo bản sao</span>\n                                        </button>\n                                        <button mat-menu-item (click)=\"diagRemoveBot(item)\">\n                                            <mat-icon color=\"warn\">delete_sweep</mat-icon>\n                                            <span>Xóa bot</span>\n                                        </button>\n                                    </mat-menu>\n                                </div>\n                                <mat-list>\n                                    <mat-list-item class=\"mat-list-item-name\">\n                                        <mat-icon mat-list-icon>filter_center_focus</mat-icon>\n                                        <span mat-line class=\"item-bot-name\">{{item.name}}</span>\n                                    </mat-list-item>\n    \n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> ID: {{item.botId}} </p>\n                                        </mat-list-item>\n                                    </div>\n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> NGÔN NGỮ: {{item.lang== \"vi\"? \"Tiếng Việt\": \"Tiếng Anh\"}} </p>\n                                        </mat-list-item>\n                                    </div>\n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> Mô tả: {{item.desc}} </p>\n                                        </mat-list-item>\n                                    </div>\n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> NGÀY TẠO: {{item.createdAt}} </p>\n                                        </mat-list-item>\n                                    </div>\n    \n                                    <mat-divider></mat-divider>\n    \n                                </mat-list>\n    \n                                <button mat-button  [routerLink]=\"['../../bots',item.botId]\">\n                                    <mat-icon>arrow_forward</mat-icon><span>Đi đến Bot</span>\n                                </button>\n                            </mat-card-content>\n                        </mat-card>\n                    </div>\n                    <div class=\"col col-md-3 item-bot\">  \n                        <div class=\"card-add\" (click)=\"diagCreateBot()\">\n                            <mat-icon>add</mat-icon>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- end -->\n    \n    </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerComponent } from './customer.component';\nimport { BotsComponent } from './bots/bots.component';\nimport { OverviewComponent } from './overview/overview.component';\nimport { ProfilesComponent } from './profiles/profiles.component';\nimport { SupportsComponent } from './supports/supports.component';\nimport { GuidesComponent } from './guides/guides.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: CustomerComponent,\n    children: [\n\n      {\n        path: 'overviews', component: OverviewComponent\n      },\n      {\n        path: 'bots', component: BotsComponent\n      },\n      {\n        path: 'profiles', component: ProfilesComponent\n      },\n      {\n        path: 'supports', component: SupportsComponent\n      },\n      {\n        path: 'guides', component: GuidesComponent\n      },\n\n      // {\n      //   path: '', redirectTo: 'overviews', pathMatch: 'full'\n      // },\n      {\n        path: '', redirectTo: 'bots', pathMatch: 'full'\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Event as RouterEvent, Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  screenWidth: number;\n  loading = true;\n\n  constructor(private router: Router) {\n    // set screenWidth on page load\n    this.screenWidth = window.innerWidth;\n    window.onresize = () => {\n      // set screenWidth on screen size change\n      this.screenWidth = window.innerWidth;\n    };\n\n    router.events.subscribe((event: RouterEvent) => {\n      this.navigationInterceptor(event)\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  // Shows and hides the loading spinner during RouterEvent changes\n  navigationInterceptor(event: RouterEvent): void {\n    if (event instanceof NavigationStart) {\n      this.loading = true\n    }\n    if (event instanceof NavigationEnd) {\n      setTimeout(() => {\n        this.loading = false;\n      }, 500);\n    }\n\n    if (event instanceof NavigationCancel) {\n      this.loading = false\n    }\n    if (event instanceof NavigationError) {\n      this.loading = false\n    }\n  }\n\n}\n","<!-- Toolbar -->\n<mat-toolbar color=\"primary\">\n    <button  mat-icon-button aria-label=\"menu\">\n        <mat-icon>notes</mat-icon>\n    </button>\n    <span class=\"lb-logo\">AI - CHATCARE</span>\n\n    <div class=\"bar-right\">\n       \n        <button mat-icon-button *ngIf=\"loading\">\n            <mat-icon class=\"sysnc\">autorenew</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <mat-icon>help</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <mat-icon>notifications</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <mat-icon>more_vert</mat-icon>\n        </button>\n\n\n    </div>\n\n</mat-toolbar>\n<!-- <mat-progress-bar *ngIf=\"loading\" color=\"warn\" mode=\"indeterminate\"></mat-progress-bar> -->\n\n<mat-sidenav-container class=\"customers-page\">\n    <!-- Sidenav -->\n    <!-- <mat-sidenav #sidenav [opened]=\"screenWidth > 840\" [mode]=\"(screenWidth > 840) ? 'side' : 'over'\">\n        <mat-toolbar><span class=\"title-header\"> <span>\n                    <mat-icon>accessibility</mat-icon>\n                </span>KHÁCH HÀNG</span></mat-toolbar>\n        <mat-nav-list>\n            <a mat-list-item routerLink=\"/customers/bots\" routerLinkActive=\"active\">\n                <mat-icon>content_paste</mat-icon> Quản lý bot\n            </a>\n            <a mat-list-item routerLink=\"/customers/profiles\" routerLinkActive=\"active\">\n                <mat-icon>person</mat-icon> Tài khoản\n            </a>\n\n            <a mat-list-item routerLink=\"/customers/guides\" routerLinkActive=\"active\">\n                <mat-icon>books</mat-icon> Hướng dẫn\n            </a>\n            <a mat-list-item routerLink=\"/customers/supports\" routerLinkActive=\"active\">\n                <mat-icon>help</mat-icon> Trợ giúp\n            </a>\n        </mat-nav-list>\n    </mat-sidenav> -->\n\n    <!-- Main content -->\n    <mat-sidenav-content>\n        <div class=\"loading\"></div>\n        <router-outlet></router-outlet>\n\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CustomerRoutingModule } from './customer-routing.module';\nimport { CustomerComponent } from './customer.component';\nimport { BotsComponent } from './bots/bots.component';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { OverviewComponent } from './overview/overview.component';\nimport { SupportsComponent } from './supports/supports.component';\nimport { ProfilesComponent } from './profiles/profiles.component';\nimport { GuidesComponent } from './guides/guides.component';\nimport { BotCreateComponent } from './dialog/bot-create/bot-create.component';\nimport { BotRemoveComponent } from './dialog/bot-remove/bot-remove.component';\nimport { BotService } from '../shared/services/bots.service';\n\n\n@NgModule({\n  declarations: [\n    CustomerComponent,\n    BotsComponent,\n    OverviewComponent,\n    SupportsComponent,\n    ProfilesComponent,\n    GuidesComponent,\n    BotCreateComponent,\n    BotRemoveComponent\n  ],\n  imports: [\n    CommonModule,\n    CustomerRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatMenuModule,\n    MatSnackBarModule,\n  ],\n  providers: [\n    BotService,\n  ],\n  entryComponents: [\n    BotCreateComponent,\n    BotRemoveComponent,\n  ]\n})\nexport class CustomerModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { BotsComponent } from '../../bots/bots.component';\nimport { NgForm } from '@angular/forms';\nimport { Bot } from 'src/app/shared/models/bots.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-bot-create',\n  templateUrl: './bot-create.component.html',\n  styleUrls: ['./bot-create.component.css']\n})\nexport class BotCreateComponent implements OnInit {\n\n  langs = [{code: 'en', name:'Tiếng Anh'},{code: 'vi', name:'Tiếng Việt'} ];\n\n  model = new Bot(null, null,null, this.langs[0].code,null, null, true);\n\n  constructor(\n    //private botServer: BotService,\n    //private toastr: ToastrService,\n    public dialogRef: MatDialogRef<BotsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    ) { }\n\n  ngOnInit() {\n  }\n\n  newBot(f:NgForm) {\n    this.dialogRef.close({action: 1, data: f.value});\n  }\n\n}\n","<span class=\"lb-header\" mat-dialog-title>Thêm mới Bot</span>\n<mat-dialog-content class=\"mat-typography\">\n  <form  #botForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"name\">Tên bot</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"model.name\" name=\"name\" #name=\"ngModel\">\n      <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n        Tên bot không được trống\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lang\">Ngôn ngữ</label>\n      <select class=\"form-control\" id=\"lang\" required [(ngModel)]=\"model.lang\" name=\"lang\" #lang=\"ngModel\">\n        <option *ngFor=\"let la of langs\" [value]=\"la.code\">{{la.name}}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"desc\">Mô tả</label>\n      <textarea type=\"text\" class=\"form-control\" id=\"desc\" [(ngModel)]=\"model.desc\" name=\"desc\"\n        #desc=\"ngModel\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Hủy</button>\n  <button mat-button color=\"primary\" [disabled]=\"!botForm.form.valid\" [mat-dialog-close]=\"true\" (click)=\"newBot(botForm); botForm.reset()\">Thêm\n    mới</button>\n</mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { BotsComponent } from '../../bots/bots.component';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-bot-remove',\n  templateUrl: './bot-remove.component.html',\n  styleUrls: ['./bot-remove.component.css']\n})\nexport class BotRemoveComponent implements OnInit {\n\n  //variable\nname: string;\ncurrentBot: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<BotsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) { }\n\n  ngOnInit() {\n    this.currentBot= this.data.name;\n  }\n\n  removeBot(){\n    this.dialogRef.close({action: 1, data: null});\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>Xác nhận xóa Bot</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <form #botForm1=\"ngForm\" autocomplete=\"off\">\n<p>Bạn có chắc muốn xóa bot:  <span style=\"font-weight: 600; font-size: 16px;\">{{currentBot}}</span></p>\n<p>Hãy nhập tên bot để xác nhận XÓA</p>\n\n\n    <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" id=\"names\" required [(ngModel)]=\"name\" name=\"names\" #names=\"ngModel\"\n         placeholder=\"Nhập tên bot hiện tại\">\n      <!-- <div [hidden]=\"names.valid || names.pristine\" class=\"alert alert-danger\">\n        Tên bot không được trống\n      </div> -->\n      <!-- <div [hidden]=\"!(names.valid || names.pristine) && (names == currentBot)\" class=\"alert alert-danger\">\n        Tên bot không hợp lệ\n      </div> -->\n    </div>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Hủy</button>\n  <button mat-button color=\"warn\" [disabled]=\"!botForm1.form.valid || (name != currentBot)\" [mat-dialog-close]=\"true\" (click)=\"removeBot(); botForm1.reset()\">Xóa</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guides',\n  templateUrl: './guides.component.html',\n  styleUrls: ['./guides.component.css']\n})\nexport class GuidesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- Applying the mat-tyography class adds styles for native elements. -->\n<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\"><mat-icon>arrow_back_ios</mat-icon></button>\n    <span class=\"title-header\">HƯỚNG DẪN</span>\n<!-- <div class=\"right-header\">\n    <div class=\"func-header\">\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>refresh</mat-icon>\n                LÀM MỚI\n            </button>\n        </span>\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>add</mat-icon>\n                TẠO MỚI BOT\n            </button>\n        </span>\n    </div>\n</div> -->\n    \n</mat-toolbar>\n<div class=\"page-content\"></div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- Applying the mat-tyography class adds styles for native elements. -->\n<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\">\n        <mat-icon>arrow_back_ios</mat-icon>\n    </button>\n    <span class=\"title-header\">DASHBOARD</span>\n</mat-toolbar>\n<div class=\"page-content\">\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profiles',\n  templateUrl: './profiles.component.html',\n  styleUrls: ['./profiles.component.css']\n})\nexport class ProfilesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\"><mat-icon>arrow_back_ios</mat-icon></button>\n    <span class=\"title-header\">PROFILES</span>\n<!-- <div class=\"right-header\">\n    <div class=\"func-header\">\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>refresh</mat-icon>\n                LÀM MỚI\n            </button>\n        </span>\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>add</mat-icon>\n                TẠO MỚI BOT\n            </button>\n        </span>\n    </div>\n</div> -->\n    \n</mat-toolbar>\n<div class=\"page-content\"></div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-supports',\n  templateUrl: './supports.component.html',\n  styleUrls: ['./supports.component.css']\n})\nexport class SupportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\"><mat-icon>arrow_back_ios</mat-icon></button>\n    <span class=\"title-header\">TRỢ GIÚP</span>\n<!-- <div class=\"right-header\">\n    <div class=\"func-header\">\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>refresh</mat-icon>\n                LÀM MỚI\n            </button>\n        </span>\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>add</mat-icon>\n                TẠO MỚI BOT\n            </button>\n        </span>\n    </div>\n</div> -->\n    \n</mat-toolbar>\n<div class=\"page-content\"></div>","export class Bot {\r\n    constructor(\r\n        public _Id: string,\r\n        public name: string,\r\n        public desc: string,\r\n        public lang: string,\r\n        public appId: string,\r\n        public appToken: string,\r\n        public isActive?: boolean,\r\n    ) { };\r\n\r\n}"],"sourceRoot":"webpack:///"}