{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/keycodes.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/observers.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/cdk/fesm2015/cdk.js","webpack:///node_modules/@angular/cdk/fesm2015/coercion.js","webpack:///node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js","webpack:///node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/snack-bar.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","webpack:///src/app/shared/services/bots.service.ts"],"names":["ID_DELIMITER","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","some","existingId","trim","push","setAttribute","join","removeAriaReferencedId","filteredIds","filter","val","length","removeAttribute","getAttribute","match","RegisteredMessage","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","messageRegistry","Map","messagesContainer","AriaDescriber","_document","hostElement","message","_canBeDescribed","_setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","_deleteMessagesContainer","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","element","removeChild","preExistingContainer","getElementById","parentNode","style","display","body","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","ɵfac","AriaDescriber_Factory","t","ctorParameters","type","undefined","decorators","args","ɵprov","factory","token","providedIn","ListKeyManagerOption","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","changes","subscribe","newItems","itemArray","toArray","newIndex","predicate","shouldWrap","enabled","direction","_horizontal","keys","debounceInterval","getLabel","Error","unsubscribe","pipe","letter","inputString","items","_getItemsArray","index","toUpperCase","setActiveItem","previousIndex","updateActiveItem","next","event","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","key","toLocaleUpperCase","String","fromCharCode","preventDefault","_setActiveItemByIndex","setFirstItemActive","_setActiveItemByDelta","setLastItemActive","activeItem","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","Highlightable","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusableOption","FocusKeyManager","arguments","_origin","origin","focus","InteractivityChecker","_platform","hasAttribute","hasGeometry","getComputedStyle","visibility","isBrowser","frameElement","getFrameElement","getWindow","frameType","nodeName","toLowerCase","getTabIndexValue","BLINK","WEBKIT","isVisible","tabIndexValue","TRIDENT","FIREFOX","IOS","isPotentiallyTabbableIOS","tabIndex","isPotentiallyFocusable","isDisabled","InteractivityChecker_Factory","window","_a","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","node","ownerDocument","defaultView","FocusTrap","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","startAnchor","_startAnchor","endAnchor","_endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","insertBefore","nextSibling","Promise","resolve","_executeOnStable","focusInitialElement","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","isFocusable","_getRegionBoundary","root","isTabbable","children","tabbableChild","anchor","_toggleAnchorTabIndex","classList","add","isEnabled","fn","isStable","onStable","asObservable","value","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","CdkTrapFocus","_elementRef","_focusTrapFactory","_previouslyFocusedElement","focusTrap","create","nativeElement","destroy","autoCapture","activeElement","focusInitialElementWhenReady","hasAttached","_autoCapture","CdkTrapFocus_Factory","ɵdir","selectors","inputs","exportAs","propDecorators","selector","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","config","defer","register","deregister","preventFocus","toggleAnchors","allowFocus","closest","Node","curr","Element","hasNativeClosest","polyfillClosest","matches","prototype","EventListenerFocusTrapInertStrategy","_listener","e","_trapFocus","target","focusTrapRoot","contains","setTimeout","ConfigurableFocusTrapConfig","FOCUS_TRAP_INERT_STRATEGY","FocusTrapInertStrategy","ManagedFocusTrap","FocusTrapManager","_focusTrapStack","ft","stack","_disable","_enable","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LiveAnnouncerDefaultOptions","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","elementClass","previousElements","getElementsByClassName","liveEl","LiveAnnouncer_Factory","CdkAriaLive","_liveAnnouncer","_contentObserver","_politeness","_subscription","observe","elementText","_previousAnnouncedText","announce","CdkAriaLive_Factory","isFakeMousedownFromScreenReader","buttons","TOUCH_BUFFER_MS","FocusOptions","FocusMonitorDetectionMode","IMMEDIATE","EVENTUAL","FocusMonitorOptions","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","passive","capture","FocusMonitor","document","options","_windowFocused","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_documentKeydownListener","_lastTouchTarget","_setOriginForCurrentEventQueue","_documentMousedownListener","source","_documentTouchstartListener","_touchTimeoutId","getTarget","_windowFocusListener","_windowFocusTimeoutId","_rootNodeFocusAndBlurListener","handler","_onFocus","_onBlur","parentElement","call","_detectionMode","detectionMode","checkChildren","rootNode","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","elementInfo","complete","_setClasses","_removeGlobalListeners","forEach","_info","stopMonitoring","doc","className","shouldSet","remove","_lastFocusOrigin","_wasCausedByTouch","_toggleClass","_originTimeoutId","focusTarget","_getFocusOrigin","_emitOrigin","relatedTarget","run","rootNodeFocusListeners","_getWindow","FocusMonitor_Factory","composedPath","CdkMonitorFocus","_focusMonitor","cdkFocusChange","_monitorSubscription","monitor","emit","CdkMonitorFocus_Factory","outputs","HighContrastMode","NONE","BLACK_ON_WHITE","WHITE_ON_BLACK","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","bodyClasses","mode","getHighContrastMode","HighContrastModeDetector_Factory","A11yModule","highContrastModeDetector","_applyBodyHighContrastModeCssClasses","ɵmod","ɵinj","A11yModule_Factory","imports","ngJitMode","declarations","exports","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","Directionality","bodyDir","dir","htmlDir","documentElement","Directionality_Factory","Dir","_dir","_isInitialized","old","normalizedValue","_rawDir","Dir_Factory","hostVars","hostBindings","Dir_HostBindings","rf","ctx","features","provide","useExisting","providers","host","BidiModule","BidiModule_Factory","DataSource","isDataSource","connect","ArrayDataSource","_data","CollectionViewer","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","size","isEmpty","selected","_selected","sort","added","removed","getMultipleValuesInSingleSelectionError","Array","from","SelectionChange","UniqueSelectionDispatcher","_listeners","name","listener","registered","UniqueSelectionDispatcher_Factory","TreeDataNodeFlattener","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","hasModifierKey","altKey","shiftKey","ctrlKey","metaKey","LayoutModule","LayoutModule_Factory","mediaQueriesForWebkitCompatibility","mediaQueryStyleNode","MediaMatcher","_matchMedia","matchMedia","bind","noopMatchMedia","query","createEmptyStyleRule","MediaMatcher_Factory","head","sheet","insertRule","error","media","addListener","removeListener","BreakpointState","InternalBreakpointState","Query","BreakpointObserver","_mediaMatcher","_zone","_queries","_destroySubject","queries","splitQueries","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","breakpointStates","response","breakpoints","state","queryObservable","observer","nextMql","output","BreakpointObserver_Factory","split","reduce","a1","a2","concat","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","MutationObserverFactory","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","_","_cleanupObserver","elementOrRef","stream","_observeElement","subscription","_unobserveElement","mutations","characterData","childList","subtree","count","disconnect","ContentObserver_Factory","CdkObserveContent","_disabled","_currentSubscription","_subscribe","_unsubscribe","debounce","_debounce","CdkObserveContent_Factory","ObserversModule","ObserversModule_Factory","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","top","left","_isEnabled","_canBeEnabled","_previousScrollPosition","getViewportScrollPosition","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","ScrollStrategy","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategyConfig","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","disable","_overlayRef","detach","overlayRef","scrolled","threshold","_initialScrollPosition","scrollPosition","Math","abs","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategyConfig","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","block","reposition","ScrollStrategyOptions_Factory","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","OriginConnectionPosition","OverlayConnectionPosition","ConnectionPositionPair","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","overlays","_keydownEventSubscriptions","_keydownEvents","_isAttached","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","container","_containerElement","_createContainer","containerClass","oppositePlatformContainers","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_keydownEventsObservable","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","strategy","sizeConfig","assign","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","requestAnimationFrame","backdropToDetach","timeoutId","finishDetach","cssClasses","isAdd","cssClass","OverlaySizeConfig","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","offset","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","scrollable","getElementRef","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","currentValue","currentOverflow","axis","pair","Point","OverlayFit","FallbackPosition","BoundingBoxRect","FlexibleFit","ConnectedPosition","destination","hasOwnProperty","input","units","parseFloat","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","slice","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","_buildConfig","keydownEvents","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","_createOverlay","CdkConnectedOverlay_Factory","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OverlayModule_Factory","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","hasV8BreakIterator","Intl","v8BreakIterator","Platform","_platformId","EDGE","test","navigator","userAgent","chrome","CSS","ANDROID","SAFARI","Platform_Factory","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","normalizePassiveListenerOptions","RtlScrollAxisType","NORMAL","NEGATED","INVERTED","rtlScrollAxisType","supportsScrollBehavior","getRtlScrollAxisType","scrollContainer","containerStyle","overflow","content","contentStyle","scrollLeft","shadowDomIsSupported","_supportsShadowDom","createShadowRoot","attachShadow","_getShadowRoot","getRootNode","ShadowRoot","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","ComponentType","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","TemplatePortal","template","context","DomPortal","PortalOutlet","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","CdkPortalOutlet","_viewContainerRef","attached","_getRootNode","_attachedRef","ref","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","VirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","startBuffer","expandStart","ceil","endBuffer","expandEnd","floor","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","ancestors","getAncestorScrollContainers","scrollingContainers","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","_applyScrollToOptions","scrollTo","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportScrollPosition","ViewportRuler","_change","_invalidateCache","_updateViewportSize","_viewportSize","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","then","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","to","isHorizontal","orientation","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","_t","first","hostAttrs","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","encapsulation","changeDetection","None","OnPush","getSize","rect","CdkVirtualForOf","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","view","j","diff","_renderedItems","_updateContext","_applyChanges","find","cdkVirtualForTrackBy","oldDs","newDs","_updateComputedContextProperties","forEachOperation","record","adjustedPreviousIndex","currentIndex","_insertViewForNewItem","$implicit","_cacheView","_detachView","move","forEachIdentityChange","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory","VERSION","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","coerceArray","isArray","coerceCssPixelValue","coerceElement","HttpHandler","HttpBackend","Update","HttpHeaders","headers","normalizedNames","lazyUpdate","lazyInit","line","maybeSetNormalizedName","init","clone","op","lcName","copyFrom","update","applyUpdate","other","base","toDelete","existing","HttpParameterCodec","HttpUrlEncodingCodec","standardEncoding","decodeURIComponent","paramParser","rawParams","codec","params","param","eqIdx","decodeKey","decodeValue","list","v","encodeURIComponent","Update$1","HttpParamsOptions","HttpParams","updates","cloneFrom","encoder","fromString","fromObject","res","eKey","encodeKey","encodeValue","idx","HttpRequestInit","mightHaveBody","method","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","HttpRequest","url","third","fourth","reportProgress","withCredentials","responseType","urlWithParams","toString","qIdx","sep","JSON","stringify","setHeaders","setParams","HttpEventType","Sent","UploadProgress","ResponseHeader","DownloadProgress","Response","User","HttpProgressEvent","HttpDownloadProgressEvent","HttpUploadProgressEvent","HttpSentEvent","HttpUserEvent","HttpJsonParseError","HttpResponseBase","defaultStatus","defaultStatusText","status","statusText","ok","HttpHeaderResponse","HttpResponse","HttpErrorResponse","addBody","HttpClient","req","events$","handle","res$","request","callbackParam","append","HttpClient_Factory","HttpInterceptor","HttpInterceptorHandler","interceptor","intercept","HTTP_INTERCEPTORS","NoopInterceptor","NoopInterceptor_Factory","nextRequestId","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONP_ERR_WRONG_RESPONSE_TYPE","JsonpCallbackContext","JsonpClientBackend","callbackMap","nextCallback","src","finished","cancelled","cleanup","onLoad","onError","JsonpClientBackend_Factory","JsonpInterceptor","jsonp","JsonpInterceptor_Factory","XSSI_PREFIX","getResponseUrl","xhr","responseURL","getAllResponseHeaders","getResponseHeader","XhrFactory","BrowserXhr","XMLHttpRequest","BrowserXhr_Factory","PartialResponse","HttpXhrBackend","xhrFactory","build","setRequestHeader","detectedType","detectContentTypeHeader","reqBody","serializeBody","headerResponse","partialFromXhr","responseText","originalBody","parse","text","sentHeaders","onDownProgress","progressEvent","loaded","lengthComputable","total","partialText","onUpProgress","progress","upload","send","abort","HttpXhrBackend_Factory","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","HttpXsrfCookieExtractor","cookieName","lastCookieString","lastToken","parseCount","cookieString","cookie","HttpXsrfCookieExtractor_Factory","HttpXsrfInterceptor","tokenService","headerName","lcUrl","startsWith","getToken","HttpXsrfInterceptor_Factory","HttpInterceptingHandler","backend","chain","interceptors","reduceRight","HttpInterceptingHandler_Factory","interceptingHandler","jsonpCallbackContext","HttpClientXsrfModule","ngModule","useClass","useValue","HttpClientXsrfModule_Factory","multi","HttpClientModule","HttpClientModule_Factory","withOptions","HttpClientJsonpModule","HttpClientJsonpModule_Factory","ControlValueAccessor","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","CheckboxControlValueAccessor","_renderer","onChange","onTouched","setProperty","CheckboxControlValueAccessor_Factory","CheckboxControlValueAccessor_HostBindings","CheckboxControlValueAccessor_change_HostBindingHandler","$event","checked","CheckboxControlValueAccessor_blur_HostBindingHandler","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","_isAndroid","getUserAgent","COMPOSITION_BUFFER_MODE","_compositionMode","_composing","DefaultValueAccessor_Factory","DefaultValueAccessor_HostBindings","DefaultValueAccessor_input_HostBindingHandler","_handleInput","DefaultValueAccessor_blur_HostBindingHandler","DefaultValueAccessor_compositionstart_HostBindingHandler","_compositionStart","DefaultValueAccessor_compositionend_HostBindingHandler","_compositionEnd","Boolean","AbstractControlDirective","control","reset","errorCode","path","hasError","getError","valid","invalid","pending","errors","pristine","dirty","touched","untouched","statusChanges","valueChanges","AbstractControlDirective_Factory","ControlContainer","ControlContainer_Factory","ɵControlContainer_BaseFactory","unimplemented","NgControl","_parent","valueAccessor","_rawValidators","_rawAsyncValidators","AbstractControlStatus","cd","_cd","ngControlStatusHost","NgControlStatus","NgControlStatus_Factory","NgControlStatus_HostBindings","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","NgControlStatusGroup","NgControlStatusGroup_Factory","NgControlStatusGroup_HostBindings","isEmptyInputValue","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","minLength","maxLength","pattern","nullValidator","regex","regexStr","charAt","RegExp","validators","presentValidators","isPresent","_mergeErrors","_executeValidators","_executeAsyncValidators","toObservable","o","r","obs","arrayOfErrors","normalizeValidator","validator","validate","c","normalizeAsyncValidator","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","NumberValueAccessor_Factory","NumberValueAccessor_HostBindings","NumberValueAccessor_change_HostBindingHandler","NumberValueAccessor_input_HostBindingHandler","NumberValueAccessor_blur_HostBindingHandler","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","RadioControlRegistry","_accessors","accessor","_isSameGroup","fireUncheck","controlPair","_control","RadioControlRegistry_Factory","_registry","_checkName","_state","_fn","writeValue","formControlName","_throwNameError","RadioControlValueAccessor_Factory","RadioControlValueAccessor_HostBindings","RadioControlValueAccessor_change_HostBindingHandler","RadioControlValueAccessor_blur_HostBindingHandler","RANGE_VALUE_ACCESSOR","RangeValueAccessor","RangeValueAccessor_Factory","RangeValueAccessor_HostBindings","RangeValueAccessor_change_HostBindingHandler","RangeValueAccessor_input_HostBindingHandler","RangeValueAccessor_blur_HostBindingHandler","FormErrorExamples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","ReactiveErrors","directiveName","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_buildValueString","_extractId","valueString","_optionMap","_idCounter","_compareWith","_getOptionId","_getOptionValue","SelectControlValueAccessor_Factory","SelectControlValueAccessor_HostBindings","SelectControlValueAccessor_change_HostBindingHandler","SelectControlValueAccessor_blur_HostBindingHandler","compareWith","NgSelectOption","_select","_registerOption","_setElementValue","NgSelectOption_Factory","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString$1","_extractId$1","HTMLOption","HTMLCollection","optionSelectedStateSetter","opt","_setSelected","selectedOptions","_value","SelectMultipleControlValueAccessor_Factory","SelectMultipleControlValueAccessor_HostBindings","SelectMultipleControlValueAccessor_change_HostBindingHandler","SelectMultipleControlValueAccessor_blur_HostBindingHandler","ɵNgSelectMultipleOption","ɵNgSelectMultipleOption_Factory","controlPath","setUpControl","_throwError","compose","asyncValidator","composeAsync","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setDisabledState","registerOnDisabledChange","registerOnValidatorChange","updateValueAndValidity","cleanUpControl","registerOnChange","_noControlError","registerOnTouched","_clearChangeFns","newValue","_pendingValue","_pendingChange","_pendingDirty","updateOn","updateControl","_pendingTouched","markAsTouched","markAsDirty","setValue","emitModelToViewChange","viewToModelUpdate","emitModelEvent","setUpFormContainer","messageEnd","composeValidators","composeAsyncValidators","isPropertyUpdated","viewModel","isFirstChange","BUILTIN_ACCESSORS","isBuiltInAccessor","a","constructor","syncPendingControls","form","directives","_syncPendingControls","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","removeDir","_ngModelWarning","instance","warningConfig","_ngModelWarningSentOnce","_ngModelWarningSent","ngModelWarning","VALID","INVALID","PENDING","DISABLED","_find","delimiter","controlToFind","FormGroup","controls","FormArray","at","coerceToValidator","validatorOrOpts","isOptionsObj","coerceToAsyncValidator","origAsyncValidator","asyncValidators","AbstractControlOptions","AbstractControl","_onCollectionChange","_onDisabledChange","newValidator","opts","onlySelf","_forEachChild","markAllAsTouched","markAsUntouched","_updateTouched","markAsPristine","_updatePristine","emitEvent","markAsPending","skipPristineCheck","_parentMarkedDirty","_updateValue","_updateAncestors","changeFn","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","ctrl","_updateTreeValidity","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","formState","_updateOn","parentDirty","FormControl","_onChange","_applyFormState","_setUpdateStrategy","_initObservables","emitViewToModelChange","condition","cb","_isBoxedValue","_setUpControls","setParent","_registerOnCollectionChange","registerControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","patchValue","_reduceChildren","acc","getRawValue","subtreeUpdated","updated","child","k","_reduceValue","initValue","_registerControl","formDirectiveProvider","NgForm","ɵ0","resolvedPromise","submitted","_directives","ngSubmit","_findContainer","removeControl","group","resetForm","NgForm_Factory","NgForm_HostBindings","NgForm_submit_HostBindingHandler","onSubmit","NgForm_reset_HostBindingHandler","onReset","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","AbstractFormGroupDirective_Factory","ɵAbstractFormGroupDirective_BaseFactory","TemplateDrivenErrors","modelGroupProvider","NgModelGroup","modelGroupParentException","NgModelGroup_Factory","formControlBinding","NgModel","ɵ0$1","resolvedPromise$1","_registered","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","addControl","standalone","formGroupNameException","modelParentException","missingNameException","disabledValue","NgModel_Factory","ɵNgNoValidate","ɵNgNoValidate_Factory","NG_MODEL_WITH_FORM_CONTROL_WARNING","formControlBinding$1","FormControlDirective","_ngModelWarningConfig","_isControlChanged","disabledAttrWarning","FormControlDirective_Factory","formDirectiveProvider$1","FormGroupDirective","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","newCtrl","_oldForm","sync","async","missingFormException","FormGroupDirective_Factory","FormGroupDirective_HostBindings","FormGroupDirective_submit_HostBindingHandler","FormGroupDirective_reset_HostBindingHandler","formGroupNameProvider","FormGroupName","_hasInvalidParent","groupParentException","FormGroupName_Factory","formArrayNameProvider","FormArrayName","addFormArray","removeFormArray","arrayParentException","getFormArray","FormArrayName_Factory","controlNameBinding","FormControlName","_added","updateModel","ngModelGroupException","controlParentException","FormControlName_Factory","Validator","AsyncValidator","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","required","_required","RequiredValidator_Factory","RequiredValidator_HostBindings","requiredTrue","CheckboxRequiredValidator_Factory","ɵCheckboxRequiredValidator_BaseFactory","CheckboxRequiredValidator_HostBindings","EMAIL_VALIDATOR","EmailValidator","email","EmailValidator_Factory","ValidatorFn","AsyncValidatorFn","MIN_LENGTH_VALIDATOR","MinLengthValidator","_createValidator","minlength","_validator","MinLengthValidator_Factory","MinLengthValidator_HostBindings","MAX_LENGTH_VALIDATOR","MaxLengthValidator","maxlength","MaxLengthValidator_Factory","MaxLengthValidator_HostBindings","PATTERN_VALIDATOR","PatternValidator","PatternValidator_Factory","PatternValidator_HostBindings","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","ɵInternalFormsSharedModule","ɵInternalFormsSharedModule_Factory","isAbstractControlOptions","FormBuilder","controlsConfig","_reduceControls","_createControl","controlConfig","FormBuilder_Factory","FormsModule","FormsModule_Factory","ReactiveFormsModule","warnOnNgModelWithFormControl","ReactiveFormsModule_Factory","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_MatButtonMixinBase","MatButton","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","_getHostElement","color","focusVia","disableRipple","attributes","attribute","MatButton_Factory","MatButton_Query","ripple","MatButton_HostBindings","attrs","MatButton_Template","_isRippleDisabled","MatAnchor","focusMonitor","animationMode","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","_haltDisabledEvents","MatAnchor_Template","MatButtonModule","MatButtonModule_Factory","_c2","_c3","_c4","_c5","MatCardContent","MatCardContent_Factory","MatCardTitle","MatCardTitle_Factory","MatCardSubtitle","MatCardSubtitle_Factory","MatCardActions","align","MatCardActions_Factory","MatCardActions_HostBindings","MatCardFooter","MatCardFooter_Factory","MatCardImage","MatCardImage_Factory","MatCardSmImage","MatCardSmImage_Factory","MatCardMdImage","MatCardMdImage_Factory","MatCardLgImage","MatCardLgImage_Factory","MatCardXlImage","MatCardXlImage_Factory","MatCardAvatar","MatCardAvatar_Factory","MatCard","MatCard_Factory","MatCard_HostBindings","MatCard_Template","MatCardHeader","MatCardHeader_Factory","MatCardHeader_Template","MatCardTitleGroup","MatCardTitleGroup_Factory","MatCardTitleGroup_Template","MatCardModule","MatCardModule_Factory","MatOption_mat_pseudo_checkbox_0_Template","ctx_r0","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","GranularSanityChecks","MatCommonModule","sanityChecks","_hasDoneGlobalChecks","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","win","_isTestEnv","_checksAreEnabled","doctype","theme","version","full","MatCommonModule_Factory","CanDisable","mixinDisabled","CanColor","HasElementRef","mixinColor","defaultColor","_color","colorPalette","CanDisableRipple","mixinDisableRipple","_disableRipple","HasTabIndex","mixinTabIndex","defaultTabIndex","_tabIndex","CanUpdateErrorState","HasErrorState","mixinErrorState","errorState","stateChanges","oldState","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","ngControl","newState","isErrorState","HasInitialized","mixinInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","DateAdapter","_localeChanges","isDateInstance","isValid","locale","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","MAT_DATE_FORMATS","SUPPORTS_INTL_API","DEFAULT_MONTH_NAMES","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","NativeDateAdapter","matDateLocale","useUtcForDisplay","_clampDate","getFullYear","getDay","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","result","displayFormat","setFullYear","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","obj","NaN","n","str","d","UTC","getHours","getMinutes","getSeconds","getMilliseconds","format","NativeDateAdapter_Factory","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","MatNativeDateModule","MatNativeDateModule_Factory","ShowOnDirtyErrorStateMatcher","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","ErrorStateMatcher_Factory","HammerInput","HammerStatic","Recognizer","RecognizerStatic","HammerInstance","HammerManager","HammerOptions","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ0$2","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","_commonModule","events","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","longpress","time","recognizeWith","recognizer","inheritances","GestureConfig_Factory","MatLine","MatLine_Factory","setLines","lines","prefix","setClass","MatLineSetter","MatLineModule","MatLineModule_Factory","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","fadeOutRipple","RippleAnimationConfig","RippleTarget","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","elementOrElementRef","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","containerRect","_containerRect","animationConfig","animation","centered","radius","distanceToFurthestCorner","transitionDuration","enforceStyleRecalculation","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","fadeOut","wasActive","rippleEl","opacity","_triggerElement","_removeTriggerEvents","_registerEvents","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","touches","changedTouches","terminateOnPointerUp","delay","eventTypes","getPropertyValue","distX","distY","sqrt","RippleGlobalOptions","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","globalOptions","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","fadeOutAll","setupTriggerEvents","trigger","configOrX","_trigger","MatRipple_Factory","MatRipple_HostBindings","unbounded","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","MatPseudoCheckbox_HostBindings","MatPseudoCheckbox_Template","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","_labelId","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","label","MatOptgroup_Template","_uniqueIdCounter","MatOptionSelectionChange","isUserInput","MatOptionParentComponent","MAT_OPTION_PARENT_COMPONENT","MatOption","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","_emitSelectionChangeEvent","viewValue","_selectViaInteraction","multiple","MatOption_Factory","MatOption_HostBindings","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","_handleKeydown","_getTabIndex","_getAriaSelected","active","MatOption_Template","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","LabelOptions","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","MatDialogContainer_ng_template_0_Template","DialogPosition","MatDialogConfig","role","disableClose","ariaDescribedBy","ariaLabelledBy","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","throwMatDialogContentAlreadyAttachedError","MatDialogContainer","_elementFocusedBeforeDialogWasOpened","_animationStateChanged","_savePreviouslyFocusedElement","_ariaLabelledBy","_containsFocus","focusWasTrapped","_getFocusTrap","toFocus","_focusTrap","toState","_restoreFocus","MatDialogContainer_Factory","MatDialogContainer_Query","MatDialogContainer_HostBindings","MatDialogContainer_animation_dialogContainer_start_HostBindingHandler","_onAnimationStart","MatDialogContainer_animation_dialogContainer_done_HostBindingHandler","_onAnimationDone","_id","MatDialogContainer_Template","Default","animations","uniqueId","MatDialogState","OPEN","CLOSING","CLOSED","MatDialogRef","_containerInstance","_afterOpened","_afterClosed","_beforeClosed","phaseName","_closeFallbackTimeout","_finishDialogClose","detachments","_result","componentInstance","_recaptureFocus","dialogResult","totalTime","_startExitAnimation","_getPositionStrategy","centerHorizontally","centerVertically","addPanelClass","removePanelClass","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","MatDialog","_parentDialog","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","afterAllClosed","openDialogs","_afterAllClosed","componentOrTemplateRef","_applyConfigDefaults","getDialogById","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","afterClosed","_removeOpenDialog","afterOpened","_closeDialogs","dialog","_getOverlayConfig","dialogConfig","global","userInjector","containerPortal","containerRef","_createInjector","contentRef","previousValue","siblings","sibling","dialogs","MatDialog_Factory","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","proxiedChange","MatDialogClose_Factory","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","_matDialogClose","MatDialogTitle","_dialogRef","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","MatDialogActions_Factory","MatDialogModule","MatDialogModule_Factory","entryComponents","MatDivider","_inset","MatDivider_Factory","MatDivider_HostBindings","vertical","inset","MatDivider_Template","MatDividerModule","MatDividerModule_Factory","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","getMatIconFailedToSanitizeLiteralError","literal","IconOptions","SvgIconConfig","svgElement","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","sanitizedLiteral","sanitize","HTML","_createSvgElementForSingleIcon","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","_svgElementFromString","alias","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","iconKey","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","handleError","foundIcon","_extractSvgIconFromSet","_fetchUrl","svgText","_setSvgAttributes","iconSet","iconSource","iconElement","cloneNode","_toSvgElement","div","innerHTML","viewBox","inProgressFetch","configNamespace","MatIconRegistry_Factory","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","MatIconBase","_MatIconMixinBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","MatIconLocation","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","parts","svgIconChanges","svgIcon","_splitIconName","getNamedSvgIcon","_setSvgElement","_clearSvgElement","_usingFontIcon","_updateFontIconClasses","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","styleTags","_cacheChildrenWithExternalReferences","layoutElement","childCount","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","fontIcon","_previousFontIconClass","elementsWithFuncIri","elementWithReference","inline","_fontSet","_cleanupFontValue","_fontIcon","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIconModule","MatIconModule_Factory","MatListOption_mat_pseudo_checkbox_2_Template","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MatNavList","MatNavList_Factory","ɵMatNavList_BaseFactory","MatNavList_Template","MatList","_getListType","MatList_Factory","MatList_Template","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","navList","_isInteractiveList","_list","_lines","MatListItem_Factory","contentQueries","MatListItem_ContentQueries","dirIndex","_avatar","_icon","MatListItem_HostBindings","MatListItem_Template","descendants","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","MatSelectionListChange","option","MatListOption","_changeDetector","selectionList","_hasFocus","checkboxPosition","_inputsInitialized","wasSelected","hadFocus","newActiveItem","_removeOptionFromList","_text","toggle","_setFocusedOption","_onTouched","_reportValueChange","MatListOption_Factory","MatListOption_ContentQueries","MatListOption_Query","MatListOption_HostBindings","MatListOption_focus_HostBindingHandler","_handleFocus","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","_handleClick","MatListOption_Template","_contentInitialized","selectionChange","_keyManager","withWrap","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","_allowFocusEscape","_updateTabIndex","disableRippleChanges","colorChanges","firstChange","_markOptionsForCheck","_isDestroyed","_setAllOptionsSelected","_getOptionIndex","activeItemIndex","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","shouldSelect","onKeydown","_getSelectedOptionValues","activeIndex","correspondingOption","focusedIndex","_isValidIndex","focusedOption","skipDisabled","hasChanged","_markForCheck","MatSelectionList_Factory","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_focus_HostBindingHandler","MatSelectionList_blur_HostBindingHandler","MatSelectionList_keydown_HostBindingHandler","_keydown","MatSelectionList_Template","MatListModule","MatListModule_Factory","_MatMenu_ng_template_0_Template","_r2","_MatMenu_ng_template_0_Template_div_keydown_0_listener","ctx_r1","_MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r3","closed","_MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r4","_MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r5","panelId","_classList","_panelAnimationState","ariaLabelledby","ariaDescribedby","matMenuAnimations","transformMenu","fadeInItems","MatMenuContent","_attached","_portal","_outlet","MatMenuContent_Factory","throwMatMenuMissingError","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_PANEL","MatMenuPanel","MatMenuItemBase","_MatMenuItemMixinBase","MatMenuItem","_parentMenu","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","removeItem","stopPropagation","textNodeType","TEXT_NODE","MatMenuItem_Factory","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","_checkDisabled","MatMenuItem_mouseenter_HostBindingHandler","_handleMouseEnter","MatMenuItem_Template","MatMenuDefaultOptions","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","MAT_MENU_BASE_ELEVATION","menuPanelUid","_MatMenuBase","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_animationDone","_overlapTrigger","setPositionClasses","_updateDirectDescendants","focusedItem","itemChanges","_item","parentMenu","setFocusOrigin","lazyContent","_focusFirstItem","depth","elevation","newElevation","customElevation","_previousElevation","posX","posY","_isAnimating","_allItems","notifyOnChanges","previousPanelClass","_previousPanelClass","_MatMenuBase_Factory","_MatMenuBase_ContentQueries","_MatMenuBase_Query","MatMenu","MatMenu_Factory","ɵMatMenu_BaseFactory","_MatMenu","_MatMenu_Factory","_MatMenu_Template","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","MatMenuTrigger","_menuItemInstance","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","menuOpened","onMenuOpen","menuClosed","onMenuClose","triggersSubmenu","_checkMenu","_handleHover","closeMenu","openMenu","_setPosition","menu","_getPortal","menuData","_menuClosingActions","_initMenu","_startAnimation","menuOpen","_resetAnimation","_setIsMenuOpen","_setMenuElevation","focusFirstItem","setElevation","isOpen","_subscribeToPositions","originFallbackX","overlayFallbackY","originFallbackY","overlayFallbackX","backdrop","parentClose","hover","button","toggleMenu","_menu","reason","_destroyMenu","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","_handleMousedown","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","_MatMenuDirectivesModule_Factory","MatMenuModule","MatMenuModule_Factory","ProgressAnimationEnd","MatProgressBarBase","_MatProgressBarMixinBase","MAT_PROGRESS_BAR_LOCATION","MAT_PROGRESS_BAR_LOCATION_FACTORY","MatProgressBarLocation","progressbarId","MatProgressBar","_isNoopAnimation","_bufferValue","animationEnd","_animationEndSubscription","_rectangleFillValue","scale","bufferValue","_primaryValueBar","clamp","MatProgressBar_Factory","MatProgressBar_Query","MatProgressBar_HostBindings","MatProgressBar_Template","_bufferTransform","_primaryTransform","MatProgressBarModule","MatProgressBarModule_Factory","MatProgressSpinner__svg_circle_1_Template","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","_circleRadius","MatProgressSpinner__svg_circle_2_Template","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MatProgressSpinnerDefaultOptions","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","defaults","_diameter","_fallbackAnimation","trackedDiameters","_diameters","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","animationClass","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","_strokeWidth","PI","MatProgressSpinner_Factory","MatProgressSpinner_HostBindings","MatProgressSpinner_Template","_viewBox","WeakMap","MatSpinner","MatSpinner_Factory","MatSpinner_HostBindings","MatSpinner_Template","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","MatDrawerContainer_div_0_Template","_r3","MatDrawerContainer_div_0_Template_div_click_0_listener","ctx_r2","_onBackdropClicked","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","_contentMarginChanges","MatDrawerContent_Factory","MatDrawerContainer","MatDrawerContent_HostBindings","_contentMargins","MatDrawerContent_Template","MatDrawer","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","onPositionChanged","_modeChanged","opened","_takeFocus","fromState","hasMovedFocus","activeEl","_openedVia","blur","_updateFocusTrapState","openedVia","_autoFocus","MatDrawer_Factory","MatDrawer_HostBindings","MatDrawer_animation_transform_start_HostBindingHandler","_animationStartListener","MatDrawer_animation_transform_done_HostBindingHandler","_animationDoneListener","_openedStream","openedStart","_closedStream","closedStart","MatDrawer_Template","defaultAutosize","_drawers","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_start","_end","_left","_right","_setContainerClass","onMicrotaskEmpty","_closeModalDrawer","_canHaveBackdrop","_backdropOverride","_userContent","_content","MatDrawerContainer_Factory","MatDrawerContainer_ContentQueries","MatDrawerContainer_Query","MatDrawerContainer_HostBindings","autosize","MatDrawerContainer_Template","MatSidenavContent","changeDetectorRef","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","MatSidenav_Factory","ɵMatSidenav_BaseFactory","MatSidenav_HostBindings","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenav_Template","MatSidenavContainer_Factory","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","SimpleSnackBar_div_2_Template","SimpleSnackBar_div_2_Template_button_click_1_listener","action","MatSnackBarContainer_ng_template_0_Template","MatSnackBarDismiss","MAX_TIMEOUT","pow","MatSnackBarRef","containerInstance","_afterDismissed","_onAction","_dismissedByAction","onAction","dismiss","_onExit","_finishDismiss","exit","_durationTimeoutId","dismissWithAction","dismissedByAction","_onEnter","MAT_SNACK_BAR_DATA","MatSnackBarConfig","announcementMessage","horizontalPosition","verticalPosition","SimpleSnackBar","snackBarRef","SimpleSnackBar_Factory","SimpleSnackBar_Template","hasAction","matSnackBarAnimations","snackBarState","MatSnackBarContainer","snackBarConfig","_assertNotAttached","_applySnackBarClasses","_role","_completeExit","onEnter","panelClasses","MatSnackBarContainer_Factory","MatSnackBarContainer_Query","MatSnackBarContainer_HostBindings","MatSnackBarContainer_animation_state_done_HostBindingHandler","onAnimationEnd","MatSnackBarContainer_Template","MatSnackBarModule","MatSnackBarModule_Factory","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBar","_live","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","_attach","openFromComponent","_openedSnackBarRef","userConfig","_attachSnackBarContainer","_animateSnackBar","afterDismissed","enter","_dismissAfter","isLeft","isRight","MatSnackBar_Factory","MatToolbarBase","_MatToolbarMixinBase","MatToolbarRow","MatToolbarRow_Factory","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","COMMENT_NODE","throwToolbarMixedModesError","MatToolbar_Factory","MatToolbar_ContentQueries","MatToolbar_HostBindings","MatToolbar_Template","MatToolbarModule","MatToolbarModule_Factory","httpOptions","BotService","http","baseUrl","apiEndpoint","getAllBots","getById","botId","createBots","post","removeBot"],"mappings":"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","file":"default~bot-bot-module~customer-customer-module-es5.js","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Injectable, Inject, ɵɵdefineInjectable, ɵɵinject, QueryList, isDevMode, NgZone, Directive, ElementRef, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Platform, normalizePassiveListenerOptions, _getShadowRoot, PlatformModule } from '@angular/cdk/platform';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/aria-describer/aria-reference.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * IDs are delimited by an empty space, as per the spec.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/observers';\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some((/**\n     * @param {?} existingId\n     * @return {?}\n     */\n    existingId => existingId.trim() == id.trim()))) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    const filteredIds = ids.filter((/**\n     * @param {?} val\n     * @return {?}\n     */\n    val => val != id.trim()));\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/aria-describer/aria-describer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to register message elements and keep a count of how many registrations have\n * the same message and the reference to the message element used for the `aria-describedby`.\n * @record\n */\nfunction RegisteredMessage() { }\nif (false) {\n    /**\n     * The element containing the message.\n     * @type {?}\n     */\n    RegisteredMessage.prototype.messageElement;\n    /**\n     * The number of elements that reference this message element via `aria-describedby`.\n     * @type {?}\n     */\n    RegisteredMessage.prototype.referenceCount;\n}\n/**\n * ID used for the body container where all messages are appended.\n * @type {?}\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n * @type {?}\n */\nconst messageRegistry = new Map();\n/**\n * Container for all registered messages.\n * @type {?}\n */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    removeDescription(hostElement, message) {\n        if (!this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            /** @type {?} */\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _createMessageElement(message) {\n        /** @type {?} */\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        (/** @type {?} */ (messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /**\n     * Assigns a unique ID to an element, if it doesn't have one already.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _deleteMessageElement(message) {\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            /** @type {?} */\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                (/** @type {?} */ (preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        /** @type {?} */\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter((/**\n         * @param {?} id\n         * @return {?}\n         */\n        id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0));\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _addMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _removeMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _isElementDescribedByMessage(element, message) {\n        /** @type {?} */\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        /** @type {?} */\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        /** @type {?} */\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /**\n     * Checks whether a node is an Element node.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = function AriaDescriber_Factory(t) { return new (t || AriaDescriber)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ AriaDescriber.ɵprov = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AriaDescriber, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AriaDescriber.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/list-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This interface is for items that can be passed to a ListKeyManager.\n * @record\n */\nfunction ListKeyManagerOption() { }\nif (false) {\n    /**\n     * Whether the option is disabled.\n     * @type {?|undefined}\n     */\n    ListKeyManagerOption.prototype.disabled;\n    /**\n     * Gets the label for this option.\n     * @return {?}\n     */\n    ListKeyManagerOption.prototype.getLabel = function () { };\n}\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nclass ListKeyManager {\n    /**\n     * @param {?} _items\n     */\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.disabled);\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((/**\n             * @param {?} newItems\n             * @return {?}\n             */\n            (newItems) => {\n                if (this._activeItem) {\n                    /** @type {?} */\n                    const itemArray = newItems.toArray();\n                    /** @type {?} */\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    skipPredicate(predicate) {\n        (/** @type {?} */ (this))._skipPredicateFn = predicate;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    withWrap(shouldWrap = true) {\n        (/** @type {?} */ (this))._wrap = shouldWrap;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    withVerticalOrientation(enabled = true) {\n        (/** @type {?} */ (this))._vertical = enabled;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    withHorizontalOrientation(direction) {\n        (/** @type {?} */ (this))._horizontal = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    withAllowedModifierKeys(keys) {\n        (/** @type {?} */ (this))._allowedModifierKeys = keys;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((/** @type {?} */ (this))._items.length && (/** @type {?} */ (this))._items.some((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        (/** @type {?} */ (this))._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        (/** @type {?} */ (this))._typeaheadSubscription = (/** @type {?} */ (this))._letterKeyStream.pipe(tap((/**\n         * @param {?} letter\n         * @return {?}\n         */\n        letter => (/** @type {?} */ (this))._pressedLetters.push(letter))), debounceTime(debounceInterval), filter((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.length > 0)), map((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.join('')))).subscribe((/**\n         * @param {?} inputString\n         * @return {?}\n         */\n        inputString => {\n            /** @type {?} */\n            const items = (/** @type {?} */ (this))._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                const index = ((/** @type {?} */ (this))._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                const item = items[index];\n                if (!(/** @type {?} */ (this))._skipPredicateFn(item) &&\n                    (/** @type {?} */ (item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    (/** @type {?} */ (this)).setActiveItem(index);\n                    break;\n                }\n            }\n            (/** @type {?} */ (this))._pressedLetters = [];\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        /** @type {?} */\n        const previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    onKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        /** @type {?} */\n        const isModifierAllowed = modifiers.every((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        }));\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /**\n     * Index of the currently active item.\n     * @return {?}\n     */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /**\n     * The active item.\n     * @return {?}\n     */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /**\n     * Gets whether the user is currently typing into the manager using the typeahead feature.\n     * @return {?}\n     */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    updateActiveItem(item) {\n        /** @type {?} */\n        const itemArray = this._getItemsArray();\n        /** @type {?} */\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        /** @type {?} */\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInWrapMode(delta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._activeItemIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._activeItem;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._wrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._letterKeyStream;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._typeaheadSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._horizontal;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._allowedModifierKeys;\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._skipPredicateFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._pressedLetters;\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     * @type {?}\n     */\n    ListKeyManager.prototype.tabOut;\n    /**\n     * Stream that emits whenever the active item of the list manager changes.\n     * @type {?}\n     */\n    ListKeyManager.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._items;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/activedescendant-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n * @record\n */\nfunction Highlightable() { }\nif (false) {\n    /**\n     * Applies the styles for an active item to this item.\n     * @return {?}\n     */\n    Highlightable.prototype.setActiveStyles = function () { };\n    /**\n     * Applies the styles for an inactive item to this item.\n     * @return {?}\n     */\n    Highlightable.prototype.setInactiveStyles = function () { };\n}\n/**\n * @template T\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/focus-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply its label.\n * @record\n */\nfunction FocusableOption() { }\nif (false) {\n    /**\n     * Focuses the `FocusableOption`.\n     * @param {?=} origin\n     * @return {?}\n     */\n    FocusableOption.prototype.focus = function (origin) { };\n}\n/**\n * @template T\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    setFocusOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusKeyManager.prototype._origin;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/interactivity-checker/interactivity-checker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            const frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        let nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    isFocusable(element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    }\n}\nInteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) { return new (t || InteractivityChecker)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ InteractivityChecker.ɵprov = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InteractivityChecker, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    InteractivityChecker.prototype._platform;\n}\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return (/** @type {?} */ (window.frameElement));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    /** @type {?} */\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    let inputType = nodeName === 'input' && ((/** @type {?} */ (element))).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * \\@breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} deferAnchors\n     */\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusLastTabbableElement());\n        this.endAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusFirstTabbableElement());\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    destroy() {\n        /** @type {?} */\n        const startAnchor = this._startAnchor;\n        /** @type {?} */\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                (/** @type {?} */ (this._startAnchor)).addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                (/** @type {?} */ (this._endAnchor)).addEventListener('focus', this.endAnchorListener);\n            }\n        }));\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusInitialElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusFirstTabbableElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusLastTabbableElement())));\n        }));\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        let markers = (/** @type {?} */ (this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`)));\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        const redirectToElement = (/** @type {?} */ (this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`)));\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    _createAnchor() {\n        /** @type {?} */\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @protected\n     * @param {?} enabled\n     * @return {?}\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._startAnchor;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._endAnchor;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._hasAttached;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype.startAnchorListener;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype.endAnchorListener;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype._enabled;\n    /** @type {?} */\n    FocusTrap.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._checker;\n    /** @type {?} */\n    FocusTrap.prototype._ngZone;\n    /** @type {?} */\n    FocusTrap.prototype._document;\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * \\@breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) { return new (t || FocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ FocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._checker;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._ngZone;\n}\n/**\n * Directive for trapping focus within a region.\n */\nclass CdkTrapFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _document\n     */\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this.focusTrap.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     * @return {?}\n     */\n    get autoCapture() { return this._autoCapture; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = (/** @type {?} */ (this._document.activeElement));\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n}\nCdkTrapFocus.ɵfac = function CdkTrapFocus_Factory(t) { return new (t || CdkTrapFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkTrapFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTrapFocus, selectors: [[\"\", \"cdkTrapFocus\", \"\"]], inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"] });\n/** @nocollapse */\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTrapFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { enabled: [{\n            type: Input,\n            args: ['cdkTrapFocus']\n        }], autoCapture: [{\n            type: Input,\n            args: ['cdkTrapFocusAutoCapture']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTrapFocus.ngAcceptInputType_enabled;\n    /** @type {?} */\n    CdkTrapFocus.ngAcceptInputType_autoCapture;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._document;\n    /**\n     * Underlying FocusTrap instance.\n     * @type {?}\n     */\n    CdkTrapFocus.prototype.focusTrap;\n    /**\n     * Previously focused element to restore focus to upon destroy when using autoCapture.\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._previouslyFocusedElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._autoCapture;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._focusTrapFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _focusTrapManager\n     * @param {?} _inertStrategy\n     * @param {?} config\n     */\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /**\n     * Whether the FocusTrap is enabled.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /**\n     * Notifies the FocusTrapManager that this FocusTrap will be destroyed.\n     * @return {?}\n     */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /**\n     * \\@docs-private Implemented as part of ManagedFocusTrap.\n     * @return {?}\n     */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /**\n     * \\@docs-private Implemented as part of ManagedFocusTrap.\n     * @return {?}\n     */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrap.prototype._focusTrapManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrap.prototype._inertStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/polyfill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * IE 11 compatible closest implementation that is able to start from non-Element Nodes.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction closest(element, selector) {\n    if (!(element instanceof Node)) {\n        return null;\n    }\n    /** @type {?} */\n    let curr = element;\n    while (curr != null && !(curr instanceof Element)) {\n        curr = curr.parentNode;\n    }\n    return curr && (/** @type {?} */ ((hasNativeClosest ?\n        curr.closest(selector) : polyfillClosest(curr, selector))));\n}\n/**\n * Polyfill for browsers without Element.closest.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction polyfillClosest(element, selector) {\n    /** @type {?} */\n    let curr = element;\n    while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n        curr = curr.parentNode;\n    }\n    return (/** @type {?} */ ((curr || null)));\n}\n/** @type {?} */\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n/**\n * IE 11 compatible matches implementation.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction matches(element, selector) {\n    return element.matches ?\n        element.matches(selector) :\n        ((/** @type {?} */ (element)))['msMatchesSelector'](selector);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/event-listener-inert-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /**\n         * Focus event handler.\n         */\n        this._listener = null;\n    }\n    /**\n     * Adds a document event listener that keeps focus inside the FocusTrap.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        }\n        this._listener = (/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => this._trapFocus(focusTrap, e));\n        focusTrap._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            focusTrap._document.addEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        }));\n    }\n    /**\n     * Removes the event listener added in preventFocus.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     * @private\n     * @param {?} focusTrap\n     * @param {?} event\n     * @return {?}\n     */\n    _trapFocus(focusTrap, event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            }));\n        }\n    }\n}\nif (false) {\n    /**\n     * Focus event handler.\n     * @type {?}\n     * @private\n     */\n    EventListenerFocusTrapInertStrategy.prototype._listener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nclass ConfigurableFocusTrapConfig {\n    constructor() {\n        /**\n         * Whether to defer the creation of FocusTrap elements to be\n         * done manually by the user. Default is to create them\n         * automatically.\n         */\n        this.defer = false;\n    }\n}\nif (false) {\n    /**\n     * Whether to defer the creation of FocusTrap elements to be\n     * done manually by the user. Default is to create them\n     * automatically.\n     * @type {?}\n     */\n    ConfigurableFocusTrapConfig.prototype.defer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap-inert-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the inert strategy.\n * @type {?}\n */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n/**\n * A strategy that dictates how FocusTrap should prevent elements\n * outside of the FocusTrap from being focused.\n * @record\n */\nfunction FocusTrapInertStrategy() { }\nif (false) {\n    /**\n     * Makes all elements outside focusTrap unfocusable.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    FocusTrapInertStrategy.prototype.preventFocus = function (focusTrap) { };\n    /**\n     * Reverts elements made unfocusable by preventFocus to their previous state.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    FocusTrapInertStrategy.prototype.allowFocus = function (focusTrap) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A FocusTrap managed by FocusTrapManager.\n * Implemented by ConfigurableFocusTrap to avoid circular dependency.\n * @record\n */\nfunction ManagedFocusTrap() { }\nif (false) {\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype._enable = function () { };\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype._disable = function () { };\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype.focusInitialElementWhenReady = function () { };\n}\n/**\n * Injectable that ensures only the most recently enabled FocusTrap is active.\n */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter((/**\n         * @param {?} ft\n         * @return {?}\n         */\n        (ft) => ft !== focusTrap));\n        /** @type {?} */\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        /** @type {?} */\n        const stack = this._focusTrapStack;\n        /** @type {?} */\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = function FocusTrapManager_Factory(t) { return new (t || FocusTrapManager)(); };\n/** @nocollapse */ FocusTrapManager.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapManager_Factory() { return new FocusTrapManager(); }, token: FocusTrapManager, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapManager, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapManager.prototype._focusTrapStack;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap-factory.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that allows easy instantiation of configurable focus traps.\n */\nclass ConfigurableFocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _focusTrapManager\n     * @param {?} _document\n     * @param {?=} _inertStrategy\n     */\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    /**\n     * @param {?} element\n     * @param {?=} config\n     * @return {?}\n     */\n    create(element, config = new ConfigurableFocusTrapConfig()) {\n        /** @type {?} */\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = new ConfigurableFocusTrapConfig();\n            configObject.defer = config;\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) { return new (t || ConfigurableFocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(FocusTrapManager), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); };\n/** @nocollapse */\nConfigurableFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: FocusTrapManager },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_TRAP_INERT_STRATEGY,] }] }\n];\n/** @nocollapse */ ConfigurableFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function ConfigurableFocusTrapFactory_Factory() { return new ConfigurableFocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(FocusTrapManager), ɵɵinject(DOCUMENT), ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); }, token: ConfigurableFocusTrapFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConfigurableFocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_TRAP_INERT_STRATEGY]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._inertStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._checker;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._focusTrapManager;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/live-announcer/live-announcer-tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/**\n * Object that can be used to configure the default options for the LiveAnnouncer.\n * @record\n */\nfunction LiveAnnouncerDefaultOptions() { }\nif (false) {\n    /**\n     * Default politeness for the announcements.\n     * @type {?|undefined}\n     */\n    LiveAnnouncerDefaultOptions.prototype.politeness;\n    /**\n     * Default duration for the announcement messages.\n     * @type {?|undefined}\n     */\n    LiveAnnouncerDefaultOptions.prototype.duration;\n}\n/**\n * Injection token that can be used to configure the default options for the LiveAnnouncer.\n * @type {?}\n */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/live-announcer/live-announcer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LiveAnnouncer {\n    /**\n     * @param {?} elementToken\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} _defaultOptions\n     */\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    announce(message, ...args) {\n        /** @type {?} */\n        const defaultOptions = this._defaultOptions;\n        /** @type {?} */\n        let politeness;\n        /** @type {?} */\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => this.clear()), duration);\n                    }\n                }), 100);\n            }));\n        }));\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = (/** @type {?} */ (null));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLiveElement() {\n        /** @type {?} */\n        const elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        /** @type {?} */\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            (/** @type {?} */ (previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = function LiveAnnouncer_Factory(t) { return new (t || LiveAnnouncer)(ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); };\n/** @nocollapse */\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ LiveAnnouncer.ɵprov = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LiveAnnouncer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._liveElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._previousTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._defaultOptions;\n}\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _liveAnnouncer\n     * @param {?} _contentObserver\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    /**\n     * The aria-live politeness level to use when announcing messages.\n     * @return {?}\n     */\n    get politeness() { return this._politeness; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set politeness(value) {\n        this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    /** @type {?} */\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                }));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = function CdkAriaLive_Factory(t) { return new (t || CdkAriaLive)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkAriaLive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAriaLive, selectors: [[\"\", \"cdkAriaLive\", \"\"]], inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"] });\n/** @nocollapse */\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAriaLive, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: LiveAnnouncer }, { type: ɵngcc2.ContentObserver }, { type: ɵngcc0.NgZone }]; }, { politeness: [{\n            type: Input,\n            args: ['cdkAriaLive']\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._politeness;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._previousAnnouncedText;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._subscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._liveAnnouncer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._contentObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/fake-mousedown.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-monitor/focus-monitor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\n/** @type {?} */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Corresponds to the options that can be passed to the native `focus` event.\n * via https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\n * @record\n */\nfunction FocusOptions() { }\nif (false) {\n    /**\n     * Whether the browser should scroll to the element when it is focused.\n     * @type {?|undefined}\n     */\n    FocusOptions.prototype.preventScroll;\n}\n/** @enum {number} */\nconst FocusMonitorDetectionMode = {\n    /**\n     * Any mousedown, keydown, or touchstart event that happened in the previous\n     * tick or the current tick will be used to assign a focus event's origin (to\n     * either mouse, keyboard, or touch). This is the default option.\n     */\n    IMMEDIATE: 0,\n    /**\n     * A focus event's origin is always attributed to the last corresponding\n     * mousedown, keydown, or touchstart event, no matter how long ago it occured.\n     */\n    EVENTUAL: 1,\n};\n/**\n * Injectable service-level options for FocusMonitor.\n * @record\n */\nfunction FocusMonitorOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FocusMonitorOptions.prototype.detectionMode;\n}\n/**\n * InjectionToken for FocusMonitorOptions.\n * @type {?}\n */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n * @type {?}\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nclass FocusMonitor {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} document\n     * @param {?} options\n     */\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        });\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                // In some cases screen readers fire fake `mousedown` events instead of `keydown`.\n                // Resolve the focus source to `keyboard` if we detect one of them.\n                /** @type {?} */\n                const source = isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse';\n                this._setOriginForCurrentEventQueue(source);\n            }\n        });\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            this._lastTouchTarget = getTarget(event);\n            this._touchTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._lastTouchTarget = null), TOUCH_BUFFER_MS);\n        });\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = (/**\n         * @return {?}\n         */\n        () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._windowFocused = false));\n        });\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const target = getTarget(event);\n            /** @type {?} */\n            const handler = event.type === 'focus' ? this._onFocus : this._onBlur;\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                handler.call(this, (/** @type {?} */ (event)), element);\n            }\n        });\n        this._document = document;\n        this._detectionMode = (options === null || options === void 0 ? void 0 : options.detectionMode) || 0 /* IMMEDIATE */;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    monitor(element, checkChildren = false) {\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        /** @type {?} */\n        const rootNode = ((/** @type {?} */ (_getShadowRoot(nativeElement)))) || this._getDocument();\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(nativeElement)) {\n            /** @type {?} */\n            const cachedInfo = (/** @type {?} */ (this._elementInfo.get(nativeElement)));\n            cachedInfo.checkChildren = checkChildren;\n            return cachedInfo.subject.asObservable();\n        }\n        // Create monitored element info.\n        /** @type {?} */\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject.asObservable();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    stopMonitoring(element) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focusVia(element, origin, options) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            ((/** @type {?} */ (nativeElement))).focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._elementInfo.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _getFocusOrigin(event) {\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        if (this._origin) {\n            return this._origin;\n        }\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        else if (this._wasCausedByTouch(event)) {\n            return 'touch';\n        }\n        else {\n            return 'program';\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    _setClasses(element, origin) {\n        this._toggleClass(element, 'cdk-focused', !!origin);\n        this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n        this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n        this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n        this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * If the detection mode is 'eventual', the origin is never cleared.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._origin = origin;\n            if (this._detectionMode === 0 /* IMMEDIATE */) {\n                // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n                // tick after the interaction event fired. To ensure the focus origin is always correct,\n                // the focus origin will be determined at the beginning of the next tick.\n                this._originTimeoutId = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._origin = null), 1);\n            }\n        }));\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        /** @type {?} */\n        const focusTarget = getTarget(event);\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== getTarget(event))) {\n            return;\n        }\n        /** @type {?} */\n        const origin = this._getFocusOrigin(event);\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    _emitOrigin(subject, origin) {\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => subject.next(origin)));\n    }\n    /**\n     * @private\n     * @param {?} elementInfo\n     * @return {?}\n     */\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const rootNode = elementInfo.rootNode;\n        /** @type {?} */\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            }));\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const document = this._getDocument();\n                /** @type {?} */\n                const window = this._getWindow();\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @param {?} elementInfo\n     * @return {?}\n     */\n    _removeGlobalListeners(elementInfo) {\n        /** @type {?} */\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            /** @type {?} */\n            const rootNodeFocusListeners = (/** @type {?} */ (this._rootNodeFocusListenerCount.get(rootNode)));\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            /** @type {?} */\n            const document = this._getDocument();\n            /** @type {?} */\n            const window = this._getWindow();\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.ɵfac = function FocusMonitor_Factory(t) { return new (t || FocusMonitor)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); };\n/** @nocollapse */\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_MONITOR_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ FocusMonitor.ɵprov = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8), ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8)); }, token: FocusMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * The focus origin that the next focus event is a result of.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._origin;\n    /**\n     * The FocusOrigin of the last focus event tracked by the FocusMonitor.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._lastFocusOrigin;\n    /**\n     * Whether the window has just been focused.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocused;\n    /**\n     * The target of the last touch event.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._lastTouchTarget;\n    /**\n     * The timeout id of the touch timeout, used to cancel timeout later.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._touchTimeoutId;\n    /**\n     * The timeout id of the window focus timeout.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocusTimeoutId;\n    /**\n     * The timeout id of the origin clearing timeout.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._originTimeoutId;\n    /**\n     * Map of elements being monitored to their info.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._elementInfo;\n    /**\n     * The number of elements currently being monitored.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._monitoredElementCount;\n    /**\n     * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n     * as well as the number of monitored elements that they contain. We have to treat focus/blur\n     * handlers differently from the rest of the events, because the browser won't emit events\n     * to the document when focus moves inside of a shadow root.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._rootNodeFocusListenerCount;\n    /**\n     * The specified detection mode, used for attributing the origin of a focus\n     * event.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._detectionMode;\n    /**\n     * Event listener for `keydown` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentKeydownListener;\n    /**\n     * Event listener for `mousedown` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentMousedownListener;\n    /**\n     * Event listener for `touchstart` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentTouchstartListener;\n    /**\n     * Event listener for `focus` events on the window.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocusListener;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    FocusMonitor.prototype._document;\n    /**\n     * Event listener for `focus` and 'blur' events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._rootNodeFocusAndBlurListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._platform;\n}\n/**\n * Gets the target of an event, accounting for Shadow DOM.\n * @param {?} event\n * @return {?}\n */\nfunction getTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (/** @type {?} */ ((event.composedPath ? event.composedPath()[0] : event.target)));\n}\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     */\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => this.cdkFocusChange.emit(origin)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    }\n}\nCdkMonitorFocus.ɵfac = function CdkMonitorFocus_Factory(t) { return new (t || CdkMonitorFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); };\nCdkMonitorFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkMonitorFocus, selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]], outputs: { cdkFocusChange: \"cdkFocusChange\" } });\n/** @nocollapse */\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkMonitorFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusMonitor }]; }, { cdkFocusChange: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._monitorSubscription;\n    /** @type {?} */\n    CdkMonitorFocus.prototype.cdkFocusChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/high-contrast-mode/high-contrast-mode-detector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HighContrastMode = {\n    NONE: 0,\n    BLACK_ON_WHITE: 1,\n    WHITE_ON_BLACK: 2,\n};\n/**\n * CSS class applied to the document body when in black-on-white high-contrast mode.\n * @type {?}\n */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/**\n * CSS class applied to the document body when in white-on-black high-contrast mode.\n * @type {?}\n */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/**\n * CSS class applied to the document body when in high-contrast mode.\n * @type {?}\n */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    /**\n     * @param {?} _platform\n     * @param {?} document\n     */\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * Gets the current high-contrast-mode for the page.\n     * @return {?}\n     */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        /** @type {?} */\n        const documentWindow = this._document.defaultView || window;\n        /** @type {?} */\n        const computedStyle = (documentWindow && documentWindow.getComputedStyle) ?\n            documentWindow.getComputedStyle(testElement) : null;\n        /** @type {?} */\n        const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n        this._document.body.removeChild(testElement);\n        switch (computedColor) {\n            case 'rgb(0,0,0)': return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)': return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /**\n     * Applies CSS classes indicating high-contrast mode to document body (browser-only).\n     * @return {?}\n     */\n    _applyBodyHighContrastModeCssClasses() {\n        if (this._platform.isBrowser && this._document.body) {\n            /** @type {?} */\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            /** @type {?} */\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = function HighContrastModeDetector_Factory(t) { return new (t || HighContrastModeDetector)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nHighContrastModeDetector.ctorParameters = () => [\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ HighContrastModeDetector.ɵprov = ɵɵdefineInjectable({ factory: function HighContrastModeDetector_Factory() { return new HighContrastModeDetector(ɵɵinject(Platform), ɵɵinject(DOCUMENT)); }, token: HighContrastModeDetector, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HighContrastModeDetector, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HighContrastModeDetector.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    HighContrastModeDetector.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/a11y-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass A11yModule {\n    /**\n     * @param {?} highContrastModeDetector\n     */\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: A11yModule });\nA11yModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function A11yModule_Factory(t) { return new (t || A11yModule)(ɵngcc0.ɵɵinject(HighContrastModeDetector)); }, imports: [[PlatformModule, ObserversModule]] });\n/** @nocollapse */\nA11yModule.ctorParameters = () => [\n    { type: HighContrastModeDetector }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(A11yModule, { declarations: function () { return [CdkAriaLive,\n        CdkTrapFocus,\n        CdkMonitorFocus]; }, imports: function () { return [PlatformModule, ObserversModule]; }, exports: function () { return [CdkAriaLive,\n        CdkTrapFocus,\n        CdkMonitorFocus]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(A11yModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]\n            }]\n    }], function () { return [{ type: HighContrastModeDetector }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, InteractivityChecker, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, TOUCH_BUFFER_MS, isFakeMousedownFromScreenReader, FocusTrapManager as ɵangular_material_src_cdk_a11y_a11y_a, ConfigurableFocusTrapConfig as ɵangular_material_src_cdk_a11y_a11y_b };\n\n//# sourceMappingURL=a11y.js.map","import { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/dir-document-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/directionality.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * The current 'ltr' or 'rtl' value.\n     * @type {?}\n     */\n    Directionality.prototype.value;\n    /**\n     * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n     * @type {?}\n     */\n    Directionality.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/dir.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Normalized direction that accounts for invalid/unsupported values.\n     * @type {?}\n     * @private\n     */\n    Dir.prototype._dir;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    Dir.prototype._isInitialized;\n    /**\n     * Direction as passed in by the consumer.\n     * @type {?}\n     */\n    Dir.prototype._rawDir;\n    /**\n     * Event emitted when the direction changes.\n     * @type {?}\n     */\n    Dir.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/bidi-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BidiModule_Factory(t) { return new (t || BidiModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\n\n//# sourceMappingURL=bidi.js.map","import { isObservable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\nif (false) {\n    /**\n     * Connects a collection viewer (such as a data-table) to this data source. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    DataSource.prototype.connect = function (collectionViewer) { };\n    /**\n     * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n     * to perform any clean-up or tear-down operations when a view is being destroyed.\n     *\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?}\n     */\n    DataSource.prototype.disconnect = function (collectionViewer) { };\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/array-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ArrayDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/collection-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n * @record\n */\nfunction CollectionViewer() { }\nif (false) {\n    /**\n     * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n     * data. The `start` index is inclusive, while the `end` is exclusive.\n     * @type {?}\n     */\n    CollectionViewer.prototype.viewChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\nif (false) {\n    /**\n     * Currently-selected values.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selection;\n    /**\n     * Keeps track of the deselected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._deselectedToEmit;\n    /**\n     * Keeps track of the selected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selectedToEmit;\n    /**\n     * Cache for the array value of the selected items.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selected;\n    /**\n     * Event emitted when the value has changed.\n     * @type {?}\n     */\n    SelectionModel.prototype.changed;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._emitChanges;\n}\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction SelectionChange() { }\nif (false) {\n    /**\n     * Model that dispatched the event.\n     * @type {?}\n     */\n    SelectionChange.prototype.source;\n    /**\n     * Options that were added to the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.added;\n    /**\n     * Options that were removed from the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.removed;\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/unique-selection-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\n/** @nocollapse */ UniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/tree-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n * @record\n * @template T\n */\nfunction TreeDataNodeFlattener() { }\nif (false) {\n    /**\n     * Transforms a set of hierarchical structured data into a flattened data array.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.flattenNodes = function (structuredData) { };\n    /**\n     * Expands a flattened array of data into its hierarchical form using the provided expansion\n     * model.\n     * @param {?} nodes\n     * @param {?} expansionModel\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.expandFlattenedNodes = function (nodes, expansionModel) { };\n    /**\n     * Put node descendants of node in array.\n     * If `onlyExpandable` is true, then only process expandable descendants.\n     * @param {?} node\n     * @param {?} nodes\n     * @param {?} onlyExpandable\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.nodeDescendents = function (node, nodes, onlyExpandable) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/keycodes.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAC_ENTER = 3;\n/** @type {?} */\nconst BACKSPACE = 8;\n/** @type {?} */\nconst TAB = 9;\n/** @type {?} */\nconst NUM_CENTER = 12;\n/** @type {?} */\nconst ENTER = 13;\n/** @type {?} */\nconst SHIFT = 16;\n/** @type {?} */\nconst CONTROL = 17;\n/** @type {?} */\nconst ALT = 18;\n/** @type {?} */\nconst PAUSE = 19;\n/** @type {?} */\nconst CAPS_LOCK = 20;\n/** @type {?} */\nconst ESCAPE = 27;\n/** @type {?} */\nconst SPACE = 32;\n/** @type {?} */\nconst PAGE_UP = 33;\n/** @type {?} */\nconst PAGE_DOWN = 34;\n/** @type {?} */\nconst END = 35;\n/** @type {?} */\nconst HOME = 36;\n/** @type {?} */\nconst LEFT_ARROW = 37;\n/** @type {?} */\nconst UP_ARROW = 38;\n/** @type {?} */\nconst RIGHT_ARROW = 39;\n/** @type {?} */\nconst DOWN_ARROW = 40;\n/** @type {?} */\nconst PLUS_SIGN = 43;\n/** @type {?} */\nconst PRINT_SCREEN = 44;\n/** @type {?} */\nconst INSERT = 45;\n/** @type {?} */\nconst DELETE = 46;\n/** @type {?} */\nconst ZERO = 48;\n/** @type {?} */\nconst ONE = 49;\n/** @type {?} */\nconst TWO = 50;\n/** @type {?} */\nconst THREE = 51;\n/** @type {?} */\nconst FOUR = 52;\n/** @type {?} */\nconst FIVE = 53;\n/** @type {?} */\nconst SIX = 54;\n/** @type {?} */\nconst SEVEN = 55;\n/** @type {?} */\nconst EIGHT = 56;\n/** @type {?} */\nconst NINE = 57;\n/** @type {?} */\nconst FF_SEMICOLON = 59;\n// Firefox (Gecko) fires this for semicolon instead of 186\n/** @type {?} */\nconst FF_EQUALS = 61;\n// Firefox (Gecko) fires this for equals instead of 187\n/** @type {?} */\nconst QUESTION_MARK = 63;\n/** @type {?} */\nconst AT_SIGN = 64;\n/** @type {?} */\nconst A = 65;\n/** @type {?} */\nconst B = 66;\n/** @type {?} */\nconst C = 67;\n/** @type {?} */\nconst D = 68;\n/** @type {?} */\nconst E = 69;\n/** @type {?} */\nconst F = 70;\n/** @type {?} */\nconst G = 71;\n/** @type {?} */\nconst H = 72;\n/** @type {?} */\nconst I = 73;\n/** @type {?} */\nconst J = 74;\n/** @type {?} */\nconst K = 75;\n/** @type {?} */\nconst L = 76;\n/** @type {?} */\nconst M = 77;\n/** @type {?} */\nconst N = 78;\n/** @type {?} */\nconst O = 79;\n/** @type {?} */\nconst P = 80;\n/** @type {?} */\nconst Q = 81;\n/** @type {?} */\nconst R = 82;\n/** @type {?} */\nconst S = 83;\n/** @type {?} */\nconst T = 84;\n/** @type {?} */\nconst U = 85;\n/** @type {?} */\nconst V = 86;\n/** @type {?} */\nconst W = 87;\n/** @type {?} */\nconst X = 88;\n/** @type {?} */\nconst Y = 89;\n/** @type {?} */\nconst Z = 90;\n/** @type {?} */\nconst META = 91;\n// WIN_KEY_LEFT\n/** @type {?} */\nconst MAC_WK_CMD_LEFT = 91;\n/** @type {?} */\nconst MAC_WK_CMD_RIGHT = 93;\n/** @type {?} */\nconst CONTEXT_MENU = 93;\n/** @type {?} */\nconst NUMPAD_ZERO = 96;\n/** @type {?} */\nconst NUMPAD_ONE = 97;\n/** @type {?} */\nconst NUMPAD_TWO = 98;\n/** @type {?} */\nconst NUMPAD_THREE = 99;\n/** @type {?} */\nconst NUMPAD_FOUR = 100;\n/** @type {?} */\nconst NUMPAD_FIVE = 101;\n/** @type {?} */\nconst NUMPAD_SIX = 102;\n/** @type {?} */\nconst NUMPAD_SEVEN = 103;\n/** @type {?} */\nconst NUMPAD_EIGHT = 104;\n/** @type {?} */\nconst NUMPAD_NINE = 105;\n/** @type {?} */\nconst NUMPAD_MULTIPLY = 106;\n/** @type {?} */\nconst NUMPAD_PLUS = 107;\n/** @type {?} */\nconst NUMPAD_MINUS = 109;\n/** @type {?} */\nconst NUMPAD_PERIOD = 110;\n/** @type {?} */\nconst NUMPAD_DIVIDE = 111;\n/** @type {?} */\nconst F1 = 112;\n/** @type {?} */\nconst F2 = 113;\n/** @type {?} */\nconst F3 = 114;\n/** @type {?} */\nconst F4 = 115;\n/** @type {?} */\nconst F5 = 116;\n/** @type {?} */\nconst F6 = 117;\n/** @type {?} */\nconst F7 = 118;\n/** @type {?} */\nconst F8 = 119;\n/** @type {?} */\nconst F9 = 120;\n/** @type {?} */\nconst F10 = 121;\n/** @type {?} */\nconst F11 = 122;\n/** @type {?} */\nconst F12 = 123;\n/** @type {?} */\nconst NUM_LOCK = 144;\n/** @type {?} */\nconst SCROLL_LOCK = 145;\n/** @type {?} */\nconst FIRST_MEDIA = 166;\n/** @type {?} */\nconst FF_MINUS = 173;\n/** @type {?} */\nconst MUTE = 173;\n// Firefox (Gecko) fires 181 for MUTE\n/** @type {?} */\nconst VOLUME_DOWN = 174;\n// Firefox (Gecko) fires 182 for VOLUME_DOWN\n/** @type {?} */\nconst VOLUME_UP = 175;\n// Firefox (Gecko) fires 183 for VOLUME_UP\n/** @type {?} */\nconst FF_MUTE = 181;\n/** @type {?} */\nconst FF_VOLUME_DOWN = 182;\n/** @type {?} */\nconst LAST_MEDIA = 183;\n/** @type {?} */\nconst FF_VOLUME_UP = 183;\n/** @type {?} */\nconst SEMICOLON = 186;\n// Firefox (Gecko) fires 59 for SEMICOLON\n/** @type {?} */\nconst EQUALS = 187;\n// Firefox (Gecko) fires 61 for EQUALS\n/** @type {?} */\nconst COMMA = 188;\n/** @type {?} */\nconst DASH = 189;\n// Firefox (Gecko) fires 173 for DASH/MINUS\n/** @type {?} */\nconst SLASH = 191;\n/** @type {?} */\nconst APOSTROPHE = 192;\n/** @type {?} */\nconst TILDE = 192;\n/** @type {?} */\nconst OPEN_SQUARE_BRACKET = 219;\n/** @type {?} */\nconst BACKSLASH = 220;\n/** @type {?} */\nconst CLOSE_SQUARE_BRACKET = 221;\n/** @type {?} */\nconst SINGLE_QUOTE = 222;\n/** @type {?} */\nconst MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/modifiers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param {?} event Event to be checked.\n * @param {...?} modifiers\n * @return {?}\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => event[modifier]));\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n\n//# sourceMappingURL=keycodes.js.map","import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/layout-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/media-matcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._matchMedia;\n    /**\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => { }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => { })\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction BreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     * @type {?}\n     */\n    BreakpointState.prototype.breakpoints;\n}\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction InternalBreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.matches;\n    /**\n     * The media query being to be matched\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.query;\n}\n/**\n * @record\n */\nfunction Query() { }\nif (false) {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} _mediaMatcher\n     * @param {?} _zone\n     */\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some((/**\n         * @param {?} mediaQuery\n         * @return {?}\n         */\n        mediaQuery => this._registerQuery(mediaQuery).mql.matches));\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => this._registerQuery(query).observable));\n        /** @type {?} */\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((/**\n         * @param {?} breakpointStates\n         * @return {?}\n         */\n        (breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            }));\n            return response;\n        })));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        const queryObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            /** @type {?} */\n            const handler = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this._zone.run((/**\n             * @return {?}\n             */\n            () => observer.next(e))));\n            mql.addListener(handler);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                mql.removeListener(handler);\n            });\n        })).pipe(startWith(mql), map((/**\n         * @param {?} nextMql\n         * @return {?}\n         */\n        (nextMql) => ({ query, matches: nextMql.matches }))), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._mediaMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._zone;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Injectable, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, NgZone, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/observers/observe-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\n/** @nocollapse */ MutationObserverFactory.ɵprov = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new Subject();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.ɵprov = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\nif (false) {\n    /**\n     * Keeps track of the existing MutationObservers so they can be reused.\n     * @type {?}\n     * @private\n     */\n    ContentObserver.prototype._observedElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentObserver.prototype._mutationObserverFactory;\n}\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkObserveContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent'\n            }]\n    }], function () { return [{ type: ContentObserver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\n            type: Output,\n            args: ['cdkObserveContent']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkObserveContentDisabled']\n        }], debounce: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkObserveContent.ngAcceptInputType_disabled;\n    /** @type {?} */\n    CdkObserveContent.ngAcceptInputType_debounce;\n    /**\n     * Event emitted for each change in the element's content.\n     * @type {?}\n     */\n    CdkObserveContent.prototype.event;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._debounce;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._currentSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._contentObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._ngZone;\n}\nclass ObserversModule {\n}\nObserversModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\nObserversModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ObserversModule_Factory(t) { return new (t || ObserversModule)(); }, providers: [MutationObserverFactory] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/observers/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n\n//# sourceMappingURL=observers.js.map","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/block-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousHTMLStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousScrollPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._isEnabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\nfunction ScrollStrategy() { }\nif (false) {\n    /**\n     * Enable this scroll strategy (called when the attached overlay is attached to a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.enable;\n    /**\n     * Disable this scroll strategy (called when the attached overlay is detached from a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.disable;\n    /**\n     * Attaches this `ScrollStrategy` to an overlay.\n     * @type {?}\n     */\n    ScrollStrategy.prototype.attach;\n    /**\n     * Detaches the scroll strategy from the current overlay.\n     * @type {?|undefined}\n     */\n    ScrollStrategy.prototype.detach;\n}\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/close-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\nfunction CloseScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Amount of pixels the user has to scroll before the overlay is closed.\n     * @type {?|undefined}\n     */\n    CloseScrollStrategyConfig.prototype.threshold;\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._initialScrollPosition;\n    /**\n     * Detaches the overlay ref and disables the scroll strategy.\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._detach;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/noop-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/scroll-clip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/reposition-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\nfunction RepositionScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Time in milliseconds to throttle the scroll events.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.scrollThrottle;\n    /**\n     * Whether to close the overlay once the user has scrolled away completely.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.autoClose;\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._document;\n    /**\n     * Do nothing on scroll.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.noop;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.close;\n    /**\n     * Block scrolling.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.block;\n    /**\n     * Update the overlay's position on scroll.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.reposition;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Strategy with which to position the overlay.\n     * @type {?}\n     */\n    OverlayConfig.prototype.positionStrategy;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    OverlayConfig.prototype.scrollStrategy;\n    /**\n     * Custom class to add to the overlay pane.\n     * @type {?}\n     */\n    OverlayConfig.prototype.panelClass;\n    /**\n     * Whether the overlay has a backdrop.\n     * @type {?}\n     */\n    OverlayConfig.prototype.hasBackdrop;\n    /**\n     * Custom class to add to the backdrop\n     * @type {?}\n     */\n    OverlayConfig.prototype.backdropClass;\n    /**\n     * The width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.width;\n    /**\n     * The height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.height;\n    /**\n     * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minWidth;\n    /**\n     * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minHeight;\n    /**\n     * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxWidth;\n    /**\n     * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     * @type {?}\n     */\n    OverlayConfig.prototype.direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    OverlayConfig.prototype.disposeOnNavigation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\nfunction OriginConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originX;\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originY;\n}\n/**\n * A connection point on the overlay element.\n * @record\n */\nfunction OverlayConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayX;\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayY;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\nif (false) {\n    /**\n     * X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originX;\n    /**\n     * Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originY;\n    /**\n     * X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayX;\n    /**\n     * Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayY;\n    /**\n     * Offset along the X axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetX;\n    /**\n     * Offset along the Y axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetY;\n    /**\n     * Class(es) to be applied to the panel while this position is active.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.panelClass;\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\nif (false) {\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginOutsideView;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayOutsideView;\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * The position used as a result of this change.\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.connectionPair;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Currently attached overlays in the order they were attached.\n     * @type {?}\n     */\n    OverlayKeyboardDispatcher.prototype._attachedOverlays;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._isAttached;\n    /**\n     * Keyboard event listener that will be attached to the body.\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._keydownListener;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n * @type {?}\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(((/** @type {?} */ (window))).__karma__ || ((/** @type {?} */ (window))).jasmine);\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     * @param {?=} _platform\n     */\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        /** @type {?} */\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            /** @type {?} */\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                (/** @type {?} */ (oppositePlatformContainers[i].parentNode)).removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._containerElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._document;\n    /**\n     * @deprecated `platform` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._platform;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        this._keydownEventsObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._keydownEvents.subscribe(observer);\n            this._keydownEventSubscriptions++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._keydownEventSubscriptions--;\n            });\n        }));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEventsObservable;\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClick;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._attachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._detachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._scrollStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._locationChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClickHandler;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._previousHostParent;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keydownEventsObservable;\n    /**\n     * Stream of keydown events dispatched to this overlay.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEvents;\n    /**\n     * Amount of subscriptions to the keydown events.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEventSubscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._portalOutlet;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._host;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._pane;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._location;\n}\n/**\n * Size properties for an overlay.\n * @record\n */\nfunction OverlaySizeConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.width;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.height;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minHeight;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/flexible-connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            /** @type {?} */\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        /** @type {?} */\n        const hasExactPosition = this._hasExactPosition();\n        /** @type {?} */\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: '', bottom: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: '', right: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        // Check for Element so SVG elements are also supported.\n        if (origin instanceof Element) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * Whether we're performing the very first positioning of the overlay.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isInitialRender;\n    /**\n     * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastBoundingBoxSize;\n    /**\n     * Whether the overlay was pushed in a previous positioning.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isPushed;\n    /**\n     * Whether the overlay can be pushed on-screen on the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._canPush;\n    /**\n     * Whether the overlay can grow via flexible width/height after the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._growAfterOpen;\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasFlexibleDimensions;\n    /**\n     * Whether the overlay position is locked.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionLocked;\n    /**\n     * Cached origin dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._originRect;\n    /**\n     * Cached overlay dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRect;\n    /**\n     * Cached viewport dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRect;\n    /**\n     * Amount of space that must be maintained between the overlay and the edge of the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportMargin;\n    /**\n     * The Scrollable containers used to check scrollable view properties on position change.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._scrollables;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._preferredPositions;\n    /**\n     * The origin element against which the overlay will be positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._origin;\n    /**\n     * The overlay pane element.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._pane;\n    /**\n     * Whether the strategy has been disposed of already.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._boundingBox;\n    /**\n     * The last position to have been calculated as the best fit position.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastPosition;\n    /**\n     * Subject that emits whenever the position changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionChanges;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._resizeSubscription;\n    /**\n     * Default offset for the overlay along the x axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetX;\n    /**\n     * Default offset for the overlay along the y axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetY;\n    /**\n     * Selector to be used when finding the elements on which to set the transform origin.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._transformOriginSelector;\n    /**\n     * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._appliedPanelClasses;\n    /**\n     * Amount by which the overlay was pushed in each axis during the last time it was positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._previousPushAmount;\n    /**\n     * Observable sequence of position changes.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.positionChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayContainer;\n}\n/**\n * A simple (x, y) coordinate.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Record of measurements for how an overlay (at a given position) fits into the viewport.\n * @record\n */\nfunction OverlayFit() { }\nif (false) {\n    /**\n     * Whether the overlay fits completely in the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.isCompletelyWithinViewport;\n    /**\n     * Whether the overlay fits in the viewport on the y-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportVertically;\n    /**\n     * Whether the overlay fits in the viewport on the x-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportHorizontally;\n    /**\n     * The total visible area (in px^2) of the overlay inside the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.visibleArea;\n}\n/**\n * Record of the measurments determining whether an overlay will fit in a specific position.\n * @record\n */\nfunction FallbackPosition() { }\nif (false) {\n    /** @type {?} */\n    FallbackPosition.prototype.position;\n    /** @type {?} */\n    FallbackPosition.prototype.originPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayFit;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayRect;\n}\n/**\n * Position and size of the overlay sizing wrapper for a specific position.\n * @record\n */\nfunction BoundingBoxRect() { }\nif (false) {\n    /** @type {?} */\n    BoundingBoxRect.prototype.top;\n    /** @type {?} */\n    BoundingBoxRect.prototype.left;\n    /** @type {?} */\n    BoundingBoxRect.prototype.bottom;\n    /** @type {?} */\n    BoundingBoxRect.prototype.right;\n    /** @type {?} */\n    BoundingBoxRect.prototype.height;\n    /** @type {?} */\n    BoundingBoxRect.prototype.width;\n}\n/**\n * Record of measures determining how well a given position will fit with flexible dimensions.\n * @record\n */\nfunction FlexibleFit() { }\nif (false) {\n    /** @type {?} */\n    FlexibleFit.prototype.position;\n    /** @type {?} */\n    FlexibleFit.prototype.origin;\n    /** @type {?} */\n    FlexibleFit.prototype.overlayRect;\n    /** @type {?} */\n    FlexibleFit.prototype.boundingBoxRect;\n}\n/**\n * A connected position as specified by the user.\n * @record\n */\nfunction ConnectedPosition() { }\nif (false) {\n    /** @type {?} */\n    ConnectedPosition.prototype.originX;\n    /** @type {?} */\n    ConnectedPosition.prototype.originY;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayX;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.weight;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetX;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.panelClass;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n * @param {?} input\n * @return {?}\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\nif (false) {\n    /**\n     * Reference to the underlying position strategy to which all the API calls are proxied.\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._positionStrategy;\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._direction;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._preferredPositions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/global-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        /** @type {?} */\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        /** @type {?} */\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._cssPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._topOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._bottomOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._leftOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._rightOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._alignItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._justifyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._isDisposed;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/overlay-position-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._overlayContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._appRef;\n    /**\n     * Scrolling strategies that can be used when creating an overlay.\n     * @type {?}\n     */\n    Overlay.prototype.scrollStrategies;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._overlayContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._positionBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._directionality;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._location;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @param {?=} config\n     * @return {?}\n     */\n    (config) => overlay.scrollStrategies.reposition(config));\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    CdkOverlayOrigin.prototype.elementRef;\n}\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_lockPosition;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_flexibleDimensions;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_growAfterOpen;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._templatePortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._lockPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._growAfterOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._flexibleDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._backdropSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetX;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetY;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._scrollStrategyFactory;\n    /**\n     * Origin for the connected overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.origin;\n    /**\n     * Registered connected position pairs.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionStrategy;\n    /**\n     * The width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.width;\n    /**\n     * The height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.height;\n    /**\n     * The min width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minWidth;\n    /**\n     * The min height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minHeight;\n    /**\n     * The custom class to be set on the backdrop element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClass;\n    /**\n     * The custom class to add to the overlay pane element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.panelClass;\n    /**\n     * Margin between the overlay and the viewport edges.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.viewportMargin;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.scrollStrategy;\n    /**\n     * Whether the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.open;\n    /**\n     * CSS selector which to set the transform origin.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.transformOriginSelector;\n    /**\n     * Event emitted when the backdrop is clicked.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClick;\n    /**\n     * Event emitted when the position has changed.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionChange;\n    /**\n     * Event emitted when the overlay has been attached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.attach;\n    /**\n     * Event emitted when the overlay has been detached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.detach;\n    /**\n     * Emits when there are keyboard events that are targeted at the overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.overlayKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._dir;\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule],\n        ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin,\n        ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/fullscreen-overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     * @param {?=} platform\n     */\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenEventName;\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenListener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { Injectable, Optional, Inject, PLATFORM_ID, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8)); };\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Whether the Angular application is being rendered in the browser.\n     * @type {?}\n     */\n    Platform.prototype.isBrowser;\n    /**\n     * Whether the current browser is Microsoft Edge.\n     * @type {?}\n     */\n    Platform.prototype.EDGE;\n    /**\n     * Whether the current rendering engine is Microsoft Trident.\n     * @type {?}\n     */\n    Platform.prototype.TRIDENT;\n    /**\n     * Whether the current rendering engine is Blink.\n     * @type {?}\n     */\n    Platform.prototype.BLINK;\n    /**\n     * Whether the current rendering engine is WebKit.\n     * @type {?}\n     */\n    Platform.prototype.WEBKIT;\n    /**\n     * Whether the current platform is Apple iOS.\n     * @type {?}\n     */\n    Platform.prototype.IOS;\n    /**\n     * Whether the current browser is Firefox.\n     * @type {?}\n     */\n    Platform.prototype.FIREFOX;\n    /**\n     * Whether the current platform is Android.\n     * @type {?}\n     */\n    Platform.prototype.ANDROID;\n    /**\n     * Whether the current browser is Safari.\n     * @type {?}\n     */\n    Platform.prototype.SAFARI;\n    /**\n     * @type {?}\n     * @private\n     */\n    Platform.prototype._platformId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/input-types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/passive-listeners.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/scrolling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/shadow-dom.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nlet shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/**\n * Gets the shadow root of an element, if supported and the element is inside the Shadow DOM.\n * @param {?} element\n * @return {?}\n */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        /** @type {?} */\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n\n//# sourceMappingURL=platform.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\nfunction ComponentType() { }\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Portal.prototype._attachedHost;\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\nif (false) {\n    /**\n     * The type of the component that will be instantiated for attachment.\n     * @type {?}\n     */\n    ComponentPortal.prototype.component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     * @type {?}\n     */\n    ComponentPortal.prototype.viewContainerRef;\n    /**\n     * [Optional] Injector used for the instantiation of the component.\n     * @type {?}\n     */\n    ComponentPortal.prototype.injector;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     * @type {?}\n     */\n    ComponentPortal.prototype.componentFactoryResolver;\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\nif (false) {\n    /**\n     * The embedded template that will be used to instantiate an embedded View in the host.\n     * @type {?}\n     */\n    TemplatePortal.prototype.templateRef;\n    /**\n     * Reference to the ViewContainer into which the template will be stamped out.\n     * @type {?}\n     */\n    TemplatePortal.prototype.viewContainerRef;\n    /**\n     * Contextual data to be passed in to the embedded view.\n     * @type {?}\n     */\n    TemplatePortal.prototype.context;\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n * @template T\n */\nclass DomPortal extends Portal {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\nif (false) {\n    /**\n     * DOM node hosting the portal's content.\n     * @type {?}\n     */\n    DomPortal.prototype.element;\n}\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\nfunction PortalOutlet() { }\nif (false) {\n    /**\n     * Attaches a portal to this outlet.\n     * @param {?} portal\n     * @return {?}\n     */\n    PortalOutlet.prototype.attach = function (portal) { };\n    /**\n     * Detaches the currently attached portal from this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.detach = function () { };\n    /**\n     * Performs cleanup before the outlet is destroyed.\n     * @return {?}\n     */\n    PortalOutlet.prototype.dispose = function () { };\n    /**\n     * Whether there is currently a portal attached to this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.hasAttached = function () { };\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * The portal currently attached to the host.\n     * @type {?}\n     * @protected\n     */\n    BasePortalOutlet.prototype._attachedPortal;\n    /**\n     * A function that will permanently dispose this host.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._disposeFn;\n    /**\n     * Whether this host has already been permanently disposed.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._isDisposed;\n    /** @type {?} */\n    BasePortalOutlet.prototype.attachDomPortal;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachTemplatePortal = function (portal) { };\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/dom-portal-outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     * @param {?=} _document\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._document;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.attachDomPortal;\n    /**\n     * Element into which the content is projected.\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.outletElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._defaultInjector;\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                if (anchorNode.parentNode) {\n                    (/** @type {?} */ (anchorNode.parentNode)).replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(((/** @type {?} */ (ref.hostView))).rootNodes[0]);\n        }\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Gets the root node of the portal outlet.\n     * @private\n     * @return {?}\n     */\n    _getRootNode() {\n        /** @type {?} */\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (/** @type {?} */ ((nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : (/** @type {?} */ (nativeElement.parentNode)))));\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkPortalOutlet.ngAcceptInputType_portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._document;\n    /**\n     * Whether the portal component is initialized.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._isInitialized;\n    /**\n     * Reference to the currently-attached component/view ref.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._attachedRef;\n    /**\n     * Emits when a portal is attached to the outlet.\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attached;\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._viewContainerRef;\n}\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective], exports: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-injector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._parentInjector;\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._customTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n/**\n * A strategy that dictates which items should be rendered in the viewport.\n * @record\n */\nfunction VirtualScrollStrategy() { }\nif (false) {\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    VirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.attach = function (viewport) { };\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.detach = function () { };\n    /**\n     * Called when the viewport is scrolled (debounced using requestAnimationFrame).\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentScrolled = function () { };\n    /**\n     * Called when the length of the data changes.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onDataLengthChanged = function () { };\n    /**\n     * Called when the range of items rendered in the DOM has changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentRendered = function () { };\n    /**\n     * Called when the offset of the rendered items changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onRenderedOffsetChanged = function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.scrollToIndex = function (index, behavior) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/fixed-size-virtual-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._scrolledIndexChange;\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @type {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * The attached viewport.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._viewport;\n    /**\n     * The size of the items in the virtually scrolling list.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._itemSize;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._minBufferPx;\n    /**\n     * The number of buffer items to render beyond the edge of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._maxBufferPx;\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(( /**\n                         * @return {?}\n                         */() => CdkFixedSizeVirtualScroll))]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(( /**\n                                 * @return {?}\n                                 */() => CdkFixedSizeVirtualScroll))]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_maxBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._maxBufferPx;\n    /**\n     * The scroll strategy used by this directive.\n     * @type {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scroll-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    ScrollDispatcher.prototype._document;\n    /**\n     * Subject for notifying that a registered scrollable reference element has been scrolled.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolled;\n    /**\n     * Keeps track of the global `scroll` and `resize` subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype._globalSubscription;\n    /**\n     * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolledCount;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype.scrollContainers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrollable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._elementScrolled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.scrollDispatcher;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.ngZone;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/viewport-ruler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Object that holds the scroll position of the viewport in each direction.\n * @record\n */\nfunction ViewportScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ViewportScrollPosition.prototype.top;\n    /** @type {?} */\n    ViewportScrollPosition.prototype.left;\n}\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     * @param {?=} document\n     */\n    constructor(_platform, ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._platform = _platform;\n        this._document = document;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const window = this._getWindow();\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const document = this._getDocument();\n        /** @type {?} */\n        const window = this._getWindow();\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        return this._document || document;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        /** @type {?} */\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._viewportSize;\n    /**\n     * Stream of viewport change events.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._change;\n    /**\n     * Subscription to streams that invalidate the cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._invalidateCache;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    ViewportRuler.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-viewport.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     * @param {?=} viewportRuler\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        /**\n         * Subscription to changes in the viewport size.\n         */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.checkViewportSize();\n            }));\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the viewport is detached from a CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._detachedSubject;\n    /**\n     * Emits when the rendered range changes.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRangeSubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._orientation;\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrolledIndexChange;\n    /**\n     * The element that wraps the rendered content.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._contentWrapper;\n    /**\n     * A stream that emits whenever the rendered range changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.renderedRangeStream;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._totalContentSize;\n    /**\n     * A string representing the `style.width` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentWidth;\n    /**\n     * A string representing the `style.height` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentHeight;\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentTransform;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRange;\n    /**\n     * The length of the data bound to this viewport (in number of items).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._dataLength;\n    /**\n     * The size of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportSize;\n    /**\n     * the currently attached CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._forOf;\n    /**\n     * The last rendered content offset that was set.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffset;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffsetNeedsRewrite;\n    /**\n     * Whether there is a pending change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._isChangeDetectionPending;\n    /**\n     * A list of functions to run after the next change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._runAfterChangeDetection;\n    /**\n     * Subscription to changes in the viewport size.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportChanges;\n    /** @type {?} */\n    CdkVirtualScrollViewport.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-for-of.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: (/** @type {?} */ (this._cdkVirtualForOf)),\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the rendered view of the data changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.viewChange;\n    /**\n     * Subject that emits when a new DataSource instance is given.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._dataSourceChanges;\n    /** @type {?} */\n    CdkVirtualForOf.prototype._cdkVirtualForOf;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._cdkVirtualForTrackBy;\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.cdkVirtualForTemplateCacheSize;\n    /**\n     * Emits whenever the data in the current DataSource changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.dataStream;\n    /**\n     * The differ used to calculate changes to the data.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differ;\n    /**\n     * The most recent data emitted from the DataSource.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._data;\n    /**\n     * The currently rendered items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedItems;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedRange;\n    /**\n     * The template cache used to hold on ot template instancess that have been stamped out, but don't\n     * currently need to be rendered. These instances will be reused in the future rather than\n     * stamping out brand new ones.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._templateCache;\n    /**\n     * Whether the rendered data should be updated during the next ngDoCheck cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._needsUpdate;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._destroyed;\n    /**\n     * The view container to add items to.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewContainerRef;\n    /**\n     * The template to use when stamping out new items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._template;\n    /**\n     * The set of available differs.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differs;\n    /**\n     * The virtual scrolling viewport that these items are being rendered in.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewport;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrolling-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], null, null); })();\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ],\n        BidiModule,\n        CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [BidiModule,\n        CdkScrollableModule,\n        CdkFixedSizeVirtualScroll,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('9.2.3');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n//# sourceMappingURL=cdk.js.map\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty };\n//# sourceMappingURL=coercion.js.map\n","/**\n * @license Angular v9.1.7\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/backend.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@publicApi\n * @abstract\n */\nimport * as ɵngcc0 from '@angular/core';\nclass HttpHandler {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpHandler.prototype.handle = function (req) { };\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpBackend {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    HttpBackend.prototype.handle = function (req) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/headers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nfunction Update() { }\nif (false) {\n    /** @type {?} */\n    Update.prototype.name;\n    /** @type {?|undefined} */\n    Update.prototype.value;\n    /** @type {?} */\n    Update.prototype.op;\n}\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * \\@publicApi\n */\nclass HttpHeaders {\n    /**\n     * Constructs a new HTTP header object with the given values.\n     * @param {?=} headers\n     */\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach((/**\n                 * @param {?} line\n                 * @return {?}\n                 */\n                line => {\n                    /** @type {?} */\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        /** @type {?} */\n                        const name = line.slice(0, index);\n                        /** @type {?} */\n                        const key = name.toLowerCase();\n                        /** @type {?} */\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            (/** @type {?} */ (this.headers.get(key))).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                }));\n            });\n        }\n        else {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach((/**\n                 * @param {?} name\n                 * @return {?}\n                 */\n                name => {\n                    /** @type {?} */\n                    let values = headers[name];\n                    /** @type {?} */\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                }));\n            });\n        }\n    }\n    /**\n     * Checks for existence of a given header.\n     *\n     * @param {?} name The header name to check for existence.\n     *\n     * @return {?} True if the header exists, false otherwise.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first value of a given header.\n     *\n     * @param {?} name The header name.\n     *\n     * @return {?} The value string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        /** @type {?} */\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @return {?} A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of values for a given header.\n     *\n     * @param {?} name The header name from which to retrieve values.\n     *\n     * @return {?} A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new value to the existing set of values for a header\n     * and returns them in a clone of the original instance.\n     *\n     * @param {?} name The header name for which to append the values.\n     * @param {?} value The value to append.\n     *\n     * @return {?} A clone of the HTTP headers object with the value appended to the given header.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets or modifies a value for a given header in a clone of the original instance.\n     * If the header already exists, its value is replaced with the given value\n     * in the returned object.\n     *\n     * @param {?} name The header name.\n     * @param {?} value The value or values to set or overide for the given header.\n     *\n     * @return {?} A clone of the HTTP headers object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes values for a given header in a clone of the original instance.\n     *\n     * @param {?} name The header name.\n     * @param {?=} value The value or values to delete for the given header.\n     *\n     * @return {?} A clone of the HTTP headers object with the given value deleted.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    /**\n     * @private\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach((/**\n                 * @param {?} update\n                 * @return {?}\n                 */\n                update => this.applyUpdate(update)));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} other\n     * @return {?}\n     */\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            this.headers.set(key, (/** @type {?} */ (other.headers.get(key))));\n            this.normalizedNames.set(key, (/** @type {?} */ (other.normalizedNames.get(key))));\n        }));\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    applyUpdate(update) {\n        /** @type {?} */\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                /** @type {?} */\n                let value = (/** @type {?} */ (update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                /** @type {?} */\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                /** @type {?} */\n                const toDelete = (/** @type {?} */ (update.value));\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    /** @type {?} */\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter((/**\n                     * @param {?} value\n                     * @return {?}\n                     */\n                    value => toDelete.indexOf(value) === -1));\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => fn((/** @type {?} */ (this.normalizedNames.get(key))), (/** @type {?} */ (this.headers.get(key))))));\n    }\n}\nif (false) {\n    /**\n     * Internal map of lowercase header names to values.\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.headers;\n    /**\n     * Internal map of lowercased header names to the normalized\n     * form of the name (the form seen first).\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.normalizedNames;\n    /**\n     * Complete the lazy initialization of this object (needed before reading).\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.lazyInit;\n    /**\n     * Queued updates to be materialized the next initialization.\n     * @type {?}\n     * @private\n     */\n    HttpHeaders.prototype.lazyUpdate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/params.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A codec for encoding and decoding parameters in URLs.\n *\n * Used by `HttpParams`.\n *\n * \\@publicApi\n *\n * @record\n */\nfunction HttpParameterCodec() { }\nif (false) {\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.encodeKey = function (key) { };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.encodeValue = function (value) { };\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.decodeKey = function (key) { };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParameterCodec.prototype.decodeValue = function (value) { };\n}\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * \\@publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param {?} key The key name.\n     * @return {?} The encoded key name.\n     */\n    encodeKey(key) {\n        return standardEncoding(key);\n    }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param {?} value The value.\n     * @return {?} The encoded value.\n     */\n    encodeValue(value) {\n        return standardEncoding(value);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param {?} key The encoded key name.\n     * @return {?} The decoded key name.\n     */\n    decodeKey(key) {\n        return decodeURIComponent(key);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param {?} value The encoded value.\n     * @return {?} The decoded value.\n     */\n    decodeValue(value) {\n        return decodeURIComponent(value);\n    }\n}\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    /** @type {?} */\n    const map = new Map();\n    if (rawParams.length > 0) {\n        /** @type {?} */\n        const params = rawParams.split('&');\n        params.forEach((/**\n         * @param {?} param\n         * @return {?}\n         */\n        (param) => {\n            /** @type {?} */\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            /** @type {?} */\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        }));\n    }\n    return map;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * @record\n */\nfunction Update$1() { }\nif (false) {\n    /** @type {?} */\n    Update$1.prototype.param;\n    /** @type {?|undefined} */\n    Update$1.prototype.value;\n    /** @type {?} */\n    Update$1.prototype.op;\n}\n/**\n * Options used to construct an `HttpParams` instance.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpParamsOptions() { }\nif (false) {\n    /**\n     * String representation of the HTTP parameters in URL-query-string format.\n     * Mutually exclusive with `fromObject`.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.fromString;\n    /**\n     * Object map of the HTTP parameters. Mutually exclusive with `fromString`.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.fromObject;\n    /**\n     * Encoding codec used to parse and serialize the parameters.\n     * @type {?|undefined}\n     */\n    HttpParamsOptions.prototype.encoder;\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * \\@publicApi\n */\nclass HttpParams {\n    /**\n     * @param {?=} options\n     */\n    constructor(options = (/** @type {?} */ ({}))) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => {\n                /** @type {?} */\n                const value = ((/** @type {?} */ (options.fromObject)))[key];\n                (/** @type {?} */ (this.map)).set(key, Array.isArray(value) ? value : [value]);\n            }));\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param {?} param The parameter name.\n     * @return {?} True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param {?} param The parameter name.\n     * @return {?} The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        /** @type {?} */\n        const res = (/** @type {?} */ (this.map)).get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param {?} param The parameter name.\n     * @return {?} All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @return {?} The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from((/** @type {?} */ (this.map)).keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value to add.\n     * @return {?} A new body with the appended value.\n     */\n    append(param, value) {\n        return this.clone({ param, value, op: 'a' });\n    }\n    /**\n     * Replaces the value for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value.\n     * @return {?} A new body with the new value.\n     */\n    set(param, value) {\n        return this.clone({ param, value, op: 's' });\n    }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param {?} param The parameter name.\n     * @param {?=} value The value to remove, if provided.\n     * @return {?} A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) {\n        return this.clone({ param, value, op: 'd' });\n    }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            /** @type {?} */\n            const eKey = this.encoder.encodeKey(key);\n            // `a: ['1']` produces `'a=1'`\n            // `b: []` produces `''`\n            // `c: ['1', '2']` produces `'c=1&c=2'`\n            return (/** @type {?} */ ((/** @type {?} */ (this.map)).get(key))).map((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => eKey + '=' + this.encoder.encodeValue(value)))\n                .join('&');\n        }))\n            // filter out empty values because `b: []` produces `''`\n            // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n            .filter((/**\n         * @param {?} param\n         * @return {?}\n         */\n        param => param !== ''))\n            .join('&');\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpParams((/** @type {?} */ ({ encoder: this.encoder })));\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => (/** @type {?} */ (this.map)).set(key, (/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ (this.cloneFrom)).map)).get(key))))));\n            (/** @type {?} */ (this.updates)).forEach((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        /** @type {?} */\n                        const base = (update.op === 'a' ? (/** @type {?} */ (this.map)).get(update.param) : undefined) || [];\n                        base.push((/** @type {?} */ (update.value)));\n                        (/** @type {?} */ (this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            /** @type {?} */\n                            let base = (/** @type {?} */ (this.map)).get(update.param) || [];\n                            /** @type {?} */\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                (/** @type {?} */ (this.map)).set(update.param, base);\n                            }\n                            else {\n                                (/** @type {?} */ (this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            (/** @type {?} */ (this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            }));\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.map;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.encoder;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.updates;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpParams.prototype.cloneFrom;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/request.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Construction interface for `HttpRequest`s.\n *\n * All values are optional and will override default values if provided.\n * @record\n */\nfunction HttpRequestInit() { }\nif (false) {\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.headers;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.reportProgress;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.params;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.responseType;\n    /** @type {?|undefined} */\n    HttpRequestInit.prototype.withCredentials;\n}\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpRequest {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        /** @type {?} */\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? (/** @type {?} */ (third)) : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = (/** @type {?} */ (third));\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            /** @type {?} */\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                /** @type {?} */\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                /** @type {?} */\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((/** @type {?} */ (this.body))).toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        /** @type {?} */\n        const method = update.method || this.method;\n        /** @type {?} */\n        const url = update.url || this.url;\n        /** @type {?} */\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        /** @type {?} */\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        /** @type {?} */\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        /** @type {?} */\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        /** @type {?} */\n        let headers = update.headers || this.headers;\n        /** @type {?} */\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((/**\n                 * @param {?} headers\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (headers, name) => headers.set(name, (/** @type {?} */ (update.setHeaders))[name])), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((/**\n             * @param {?} params\n             * @param {?} param\n             * @return {?}\n             */\n            (params, param) => params.set(param, (/** @type {?} */ (update.setParams))[param])), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params,\n            headers,\n            reportProgress,\n            responseType,\n            withCredentials,\n        });\n    }\n}\nif (false) {\n    /**\n     * The request body, or `null` if one isn't set.\n     *\n     * Bodies are not enforced to be immutable, as they can include a reference to any\n     * user-defined data type. However, interceptors should take care to preserve\n     * idempotence by treating them as such.\n     * @type {?}\n     */\n    HttpRequest.prototype.body;\n    /**\n     * Outgoing headers for this request.\n     * @type {?}\n     */\n    HttpRequest.prototype.headers;\n    /**\n     * Whether this request should be made in a way that exposes progress events.\n     *\n     * Progress events are expensive (change detection runs on each event) and so\n     * they should only be requested if the consumer intends to monitor them.\n     * @type {?}\n     */\n    HttpRequest.prototype.reportProgress;\n    /**\n     * Whether this request should be sent with outgoing credentials (cookies).\n     * @type {?}\n     */\n    HttpRequest.prototype.withCredentials;\n    /**\n     * The expected response type of the server.\n     *\n     * This is used to parse the response appropriately before returning it to\n     * the requestee.\n     * @type {?}\n     */\n    HttpRequest.prototype.responseType;\n    /**\n     * The outgoing HTTP request method.\n     * @type {?}\n     */\n    HttpRequest.prototype.method;\n    /**\n     * Outgoing URL parameters.\n     * @type {?}\n     */\n    HttpRequest.prototype.params;\n    /**\n     * The outgoing URL with all URL parameters set.\n     * @type {?}\n     */\n    HttpRequest.prototype.urlWithParams;\n    /** @type {?} */\n    HttpRequest.prototype.url;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/response.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HttpEventType = {\n    /**\n     * The request was sent out over the wire.\n     */\n    Sent: 0,\n    /**\n     * An upload progress event was received.\n     */\n    UploadProgress: 1,\n    /**\n     * The response status code and headers were received.\n     */\n    ResponseHeader: 2,\n    /**\n     * A download progress event was received.\n     */\n    DownloadProgress: 3,\n    /**\n     * The full response including the body was received.\n     */\n    Response: 4,\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    User: 5,\n};\nHttpEventType[HttpEventType.Sent] = 'Sent';\nHttpEventType[HttpEventType.UploadProgress] = 'UploadProgress';\nHttpEventType[HttpEventType.ResponseHeader] = 'ResponseHeader';\nHttpEventType[HttpEventType.DownloadProgress] = 'DownloadProgress';\nHttpEventType[HttpEventType.Response] = 'Response';\nHttpEventType[HttpEventType.User] = 'User';\n/**\n * Base interface for progress events.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpProgressEvent() { }\nif (false) {\n    /**\n     * Progress event type is either upload or download.\n     * @type {?}\n     */\n    HttpProgressEvent.prototype.type;\n    /**\n     * Number of bytes uploaded or downloaded.\n     * @type {?}\n     */\n    HttpProgressEvent.prototype.loaded;\n    /**\n     * Total number of bytes to upload or download. Depending on the request or\n     * response, this may not be computable and thus may not be present.\n     * @type {?|undefined}\n     */\n    HttpProgressEvent.prototype.total;\n}\n/**\n * A download progress event.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpDownloadProgressEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpDownloadProgressEvent.prototype.type;\n    /**\n     * The partial response body as downloaded so far.\n     *\n     * Only present if the responseType was `text`.\n     * @type {?|undefined}\n     */\n    HttpDownloadProgressEvent.prototype.partialText;\n}\n/**\n * An upload progress event.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpUploadProgressEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpUploadProgressEvent.prototype.type;\n}\n/**\n * An event indicating that the request was sent to the server. Useful\n * when a request may be retried multiple times, to distinguish between\n * retries on the final event stream.\n *\n * \\@publicApi\n * @record\n */\nfunction HttpSentEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpSentEvent.prototype.type;\n}\n/**\n * A user-defined event.\n *\n * Grouping all custom events under this type ensures they will be handled\n * and forwarded by all implementations of interceptors.\n *\n * \\@publicApi\n * @record\n * @template T\n */\nfunction HttpUserEvent() { }\nif (false) {\n    /** @type {?} */\n    HttpUserEvent.prototype.type;\n}\n/**\n * An error that represents a failed attempt to JSON.parse text coming back\n * from the server.\n *\n * It bundles the Error object with the actual response body that failed to parse.\n *\n *\n * @record\n */\nfunction HttpJsonParseError() { }\nif (false) {\n    /** @type {?} */\n    HttpJsonParseError.prototype.error;\n    /** @type {?} */\n    HttpJsonParseError.prototype.text;\n}\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\nif (false) {\n    /**\n     * All response headers.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.headers;\n    /**\n     * Response status code.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.status;\n    /**\n     * Textual description of response status code.\n     *\n     * Do not depend on this.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.statusText;\n    /**\n     * URL of the resource retrieved, or null if not available.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.url;\n    /**\n     * Whether the status code falls in the 2xx range.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.ok;\n    /**\n     * Type of the response, narrowed to either the full response or the header.\n     * @type {?}\n     */\n    HttpResponseBase.prototype.type;\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\nif (false) {\n    /** @type {?} */\n    HttpHeaderResponse.prototype.type;\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\nif (false) {\n    /**\n     * The response body, or `null` if one was not returned.\n     * @type {?}\n     */\n    HttpResponse.prototype.body;\n    /** @type {?} */\n    HttpResponse.prototype.type;\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    /**\n     * @param {?} init\n     */\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\nif (false) {\n    /** @type {?} */\n    HttpErrorResponse.prototype.name;\n    /** @type {?} */\n    HttpErrorResponse.prototype.message;\n    /** @type {?} */\n    HttpErrorResponse.prototype.error;\n    /**\n     * Errors are never okay, even when the status code is in the 2xx success range.\n     * @type {?}\n     */\n    HttpErrorResponse.prototype.ok;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/client.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n * \\@usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n *\n * \\@publicApi\n */\nclass HttpClient {\n    /**\n     * @param {?} handler\n     */\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    request(first, url, options = {}) {\n        /** @type {?} */\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = first;\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            /** @type {?} */\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            /** @type {?} */\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams((/** @type {?} */ ({ fromObject: options.params })));\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, (/** @type {?} */ (url)), (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        /** @type {?} */\n        const events$ = of(req).pipe(concatMap((/**\n         * @param {?} req\n         * @return {?}\n         */\n        (req) => this.handler.handle(req))));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        /** @type {?} */\n        const res$ = (/** @type {?} */ (events$.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event instanceof HttpResponse)))));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        })));\n                    case 'blob':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        })));\n                    case 'text':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        })));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => res.body)));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param {?} url     The endpoint URL.\n     * @param {?=} options The HTTP options to send with the request.\n     *\n     * @return {?}\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @template T\n     * @param {?} url The resource URL.\n     * @param {?} callbackParam The callback function name.\n     *\n     * @return {?}\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.ɵfac = function HttpClient_Factory(t) { return new (t || HttpClient)(ɵngcc0.ɵɵinject(HttpHandler)); };\nHttpClient.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpClient, factory: HttpClient.ɵfac });\n/** @nocollapse */\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClient, [{\n        type: Injectable\n    }], function () { return [{ type: HttpHandler }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpClient.prototype.handler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/interceptor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Intercepts and handles an `HttpRequest` or `HttpResponse`.\n *\n * Most interceptors transform the outgoing request before passing it to the\n * next interceptor in the chain, by calling `next.handle(transformedReq)`.\n * An interceptor may transform the\n * response event stream as well, by applying additional RxJS operators on the stream\n * returned by `next.handle()`.\n *\n * More rarely, an interceptor may handle the request entirely,\n * and compose a new event stream instead of invoking `next.handle()`. This is an\n * acceptable behavior, but keep in mind that further interceptors will be skipped entirely.\n *\n * It is also rare but valid for an interceptor to return multiple responses on the\n * event stream for a single request.\n *\n * \\@publicApi\n *\n * @see [HTTP Guide](guide/http#intercepting-requests-and-responses)\n *\n * \\@usageNotes\n *\n * To use the same instance of `HttpInterceptors` for the entire app, import the `HttpClientModule`\n * only in your `AppModule`, and add the interceptors to the root application injector .\n * If you import `HttpClientModule` multiple times across different modules (for example, in lazy\n * loading modules), each import creates a new copy of the `HttpClientModule`, which overwrites the\n * interceptors provided in the root module.\n *\n * @record\n */\nfunction HttpInterceptor() { }\nif (false) {\n    /**\n     * Identifies and handles a given HTTP request.\n     * @param {?} req The outgoing request object to handle.\n     * @param {?} next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @return {?} An observable of the event stream.\n     */\n    HttpInterceptor.prototype.intercept = function (req, next) { };\n}\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptorHandler.prototype.next;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptorHandler.prototype.interceptor;\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * \\@publicApi\n * @type {?}\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.ɵfac = function NoopInterceptor_Factory(t) { return new (t || NoopInterceptor)(); };\nNoopInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NoopInterceptor, factory: NoopInterceptor.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NoopInterceptor, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/jsonp.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\n/** @type {?} */\nlet nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\n/** @type {?} */\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\n/** @type {?} */\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\n/** @type {?} */\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n * @abstract\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * \\@publicApi\n */\nclass JsonpClientBackend {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @private\n     * @return {?}\n     */\n    nextCallback() {\n        return `ng_jsonp_callback_${nextRequestId++}`;\n    }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            /** @type {?} */\n            const callback = this.nextCallback();\n            /** @type {?} */\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            /** @type {?} */\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            /** @type {?} */\n            let body = null;\n            // Whether the response callback has been called.\n            /** @type {?} */\n            let finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            /** @type {?} */\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (/**\n             * @param {?=} data\n             * @return {?}\n             */\n            (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            });\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            /** @type {?} */\n            const cleanup = (/**\n             * @return {?}\n             */\n            () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            });\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            /** @type {?} */\n            const onLoad = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK',\n                    url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            });\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error',\n                    url,\n                }));\n            });\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            });\n        }));\n    }\n}\nJsonpClientBackend.ɵfac = function JsonpClientBackend_Factory(t) { return new (t || JsonpClientBackend)(ɵngcc0.ɵɵinject(JsonpCallbackContext), ɵngcc0.ɵɵinject(DOCUMENT)); };\nJsonpClientBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpClientBackend, factory: JsonpClientBackend.ɵfac });\n/** @nocollapse */\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpClientBackend, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpCallbackContext }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpClientBackend.prototype.callbackMap;\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpClientBackend.prototype.document;\n}\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * \\@publicApi\n */\nclass JsonpInterceptor {\n    /**\n     * @param {?} jsonp\n     */\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param {?} req The outgoing request object to handle.\n     * @param {?} next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @return {?} An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle((/** @type {?} */ (req)));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.ɵfac = function JsonpInterceptor_Factory(t) { return new (t || JsonpInterceptor)(ɵngcc0.ɵɵinject(JsonpClientBackend)); };\nJsonpInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpInterceptor, factory: JsonpInterceptor.ɵfac });\n/** @nocollapse */\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpClientBackend }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    JsonpInterceptor.prototype.jsonp;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/xhr.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@publicApi\n * @abstract\n */\nclass XhrFactory {\n}\nif (false) {\n    /**\n     * @abstract\n     * @return {?}\n     */\n    XhrFactory.prototype.build = function () { };\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n *\n */\nclass BrowserXhr {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    build() {\n        return (/** @type {?} */ ((new XMLHttpRequest())));\n    }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\nBrowserXhr.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\n/** @nocollapse */\nBrowserXhr.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Tracks a response from the server that does not yet have a body.\n * @record\n */\nfunction PartialResponse() { }\nif (false) {\n    /** @type {?} */\n    PartialResponse.prototype.headers;\n    /** @type {?} */\n    PartialResponse.prototype.status;\n    /** @type {?} */\n    PartialResponse.prototype.statusText;\n    /** @type {?} */\n    PartialResponse.prototype.url;\n}\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * \\@publicApi\n */\nclass HttpXhrBackend {\n    /**\n     * @param {?} xhrFactory\n     */\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            /** @type {?} */\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((/**\n             * @param {?} name\n             * @param {?} values\n             * @return {?}\n             */\n            (name, values) => xhr.setRequestHeader(name, values.join(','))));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                /** @type {?} */\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                /** @type {?} */\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (/** @type {?} */ (((responseType !== 'json') ? responseType : 'text')));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            /** @type {?} */\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            /** @type {?} */\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            /** @type {?} */\n            const partialFromXhr = (/**\n             * @return {?}\n             */\n            () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                /** @type {?} */\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                /** @type {?} */\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                /** @type {?} */\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                /** @type {?} */\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            });\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            /** @type {?} */\n            const onLoad = (/**\n             * @return {?}\n             */\n            () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                /** @type {?} */\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                /** @type {?} */\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    /** @type {?} */\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = (/** @type {?} */ ({ error, text: body }));\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            });\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                const { url } = partialFromXhr();\n                /** @type {?} */\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            });\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            /** @type {?} */\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onDownProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                /** @type {?} */\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            });\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onUpProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                /** @type {?} */\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            });\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send((/** @type {?} */ (reqBody)));\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            });\n        }));\n    }\n}\nHttpXhrBackend.ɵfac = function HttpXhrBackend_Factory(t) { return new (t || HttpXhrBackend)(ɵngcc0.ɵɵinject(XhrFactory)); };\nHttpXhrBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXhrBackend, factory: HttpXhrBackend.ɵfac });\n/** @nocollapse */\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXhrBackend, [{\n        type: Injectable\n    }], function () { return [{ type: XhrFactory }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXhrBackend.prototype.xhrFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/xsrf.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\n/** @type {?} */\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpXsrfTokenExtractor {\n}\nif (false) {\n    /**\n     * Get the XSRF token to use with an outgoing request.\n     *\n     * Will be called for every request, so the token may change between requests.\n     * @abstract\n     * @return {?}\n     */\n    HttpXsrfTokenExtractor.prototype.getToken = function () { };\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        /** @type {?} */\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.ɵfac = function HttpXsrfCookieExtractor_Factory(t) { return new (t || HttpXsrfCookieExtractor)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(XSRF_COOKIE_NAME)); };\nHttpXsrfCookieExtractor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfCookieExtractor, factory: HttpXsrfCookieExtractor.ɵfac });\n/** @nocollapse */\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfCookieExtractor, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_COOKIE_NAME]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.lastCookieString;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.lastToken;\n    /**\n     * \\@internal for testing\n     * @type {?}\n     */\n    HttpXsrfCookieExtractor.prototype.parseCount;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.doc;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfCookieExtractor.prototype.cookieName;\n}\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        /** @type {?} */\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        /** @type {?} */\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.ɵfac = function HttpXsrfInterceptor_Factory(t) { return new (t || HttpXsrfInterceptor)(ɵngcc0.ɵɵinject(HttpXsrfTokenExtractor), ɵngcc0.ɵɵinject(XSRF_HEADER_NAME)); };\nHttpXsrfInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfInterceptor, factory: HttpXsrfInterceptor.ɵfac });\n/** @nocollapse */\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: HttpXsrfTokenExtractor }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_HEADER_NAME]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfInterceptor.prototype.tokenService;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpXsrfInterceptor.prototype.headerName;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/src/module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    /**\n     * @param {?} backend\n     * @param {?} injector\n     */\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        if (this.chain === null) {\n            /** @type {?} */\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((/**\n             * @param {?} next\n             * @param {?} interceptor\n             * @return {?}\n             */\n            (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.ɵfac = function HttpInterceptingHandler_Factory(t) { return new (t || HttpInterceptingHandler)(ɵngcc0.ɵɵinject(HttpBackend), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nHttpInterceptingHandler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpInterceptingHandler, factory: HttpInterceptingHandler.ɵfac });\n/** @nocollapse */\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpInterceptingHandler, [{\n        type: Injectable\n    }], function () { return [{ type: HttpBackend }, { type: ɵngcc0.Injector }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.chain;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.backend;\n    /**\n     * @type {?}\n     * @private\n     */\n    HttpInterceptingHandler.prototype.injector;\n}\n/**\n * Constructs an `HttpHandler` that applies interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * Use as a factory function within `HttpClientModule`.\n *\n *\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors = []) {\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight((/**\n     * @param {?} next\n     * @param {?} interceptor\n     * @return {?}\n     */\n    (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * \\@publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param {?=} options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     * @return {?}\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientXsrfModule });\nHttpClientXsrfModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientXsrfModule_Factory(t) { return new (t || HttpClientXsrfModule)(); }, providers: [\n        HttpXsrfInterceptor,\n        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientXsrfModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientModule });\nHttpClientModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientModule_Factory(t) { return new (t || HttpClientModule)(); }, providers: [\n        HttpClient,\n        { provide: HttpHandler, useClass: HttpInterceptingHandler },\n        HttpXhrBackend,\n        { provide: HttpBackend, useExisting: HttpXhrBackend },\n        BrowserXhr,\n        { provide: XhrFactory, useExisting: BrowserXhr },\n    ], imports: [[\n            HttpClientXsrfModule.withOptions({\n                cookieName: 'XSRF-TOKEN',\n                headerName: 'X-XSRF-TOKEN'\n            }),\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HttpClientModule, { imports: [HttpClientXsrfModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientModule, [{\n        type: NgModule,\n        args: [{\n                /**\n                 * Optional configuration for XSRF protection.\n                 */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN'\n                    }),\n                ],\n                /**\n                 * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                 * with supporting services for HTTP communications.\n                 */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientJsonpModule });\nHttpClientJsonpModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientJsonpModule_Factory(t) { return new (t || HttpClientJsonpModule)(); }, providers: [\n        JsonpClientBackend,\n        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n        { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientJsonpModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/common/http/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HTTP_INTERCEPTORS, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpErrorResponse, HttpEventType, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, XhrFactory, HttpInterceptingHandler as ɵHttpInterceptingHandler, NoopInterceptor as ɵangular_packages_common_http_http_a, JsonpCallbackContext as ɵangular_packages_common_http_http_b, jsonpCallbackContext as ɵangular_packages_common_http_http_c, BrowserXhr as ɵangular_packages_common_http_http_d, XSRF_COOKIE_NAME as ɵangular_packages_common_http_http_e, XSRF_HEADER_NAME as ɵangular_packages_common_http_http_f, HttpXsrfCookieExtractor as ɵangular_packages_common_http_http_g, HttpXsrfInterceptor as ɵangular_packages_common_http_http_h };\n\n//# sourceMappingURL=http.js.map","/**\n * @license Angular v9.1.7\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, forwardRef, Directive, Renderer2, ElementRef, Optional, Inject, Self, ɵisPromise, ɵisObservable, Injectable, Injector, Input, ɵlooseIdentical, Host, isDevMode, EventEmitter, SkipSelf, Output, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { forkJoin, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/control_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * Defines an interface that acts as a bridge between the Angular forms API and a\n * native element in the DOM.\n *\n * Implement this interface to create a custom form control directive\n * that integrates with Angular forms.\n *\n * @see DefaultValueAccessor\n *\n * \\@publicApi\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction ControlValueAccessor() { }\nif (false) {\n    /**\n     * \\@description\n     * Writes a new value to the element.\n     *\n     * This method is called by the forms API to write to the view when programmatic\n     * changes from model to view are requested.\n     *\n     * \\@usageNotes\n     * ### Write a value to the element\n     *\n     * The following example writes a value to the native DOM element.\n     *\n     * ```ts\n     * writeValue(value: any): void {\n     *   this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\n     * }\n     * ```\n     *\n     * @param {?} obj The new value for the element\n     * @return {?}\n     */\n    ControlValueAccessor.prototype.writeValue = function (obj) { };\n    /**\n     * \\@description\n     * Registers a callback function that is called when the control's value\n     * changes in the UI.\n     *\n     * This method is called by the forms API on initialization to update the form\n     * model when values propagate from the view to the model.\n     *\n     * When implementing the `registerOnChange` method in your own value accessor,\n     * save the given function so your class calls it at the appropriate time.\n     *\n     * \\@usageNotes\n     * ### Store the change function\n     *\n     * The following example stores the provided function as an internal method.\n     *\n     * ```ts\n     * registerOnChange(fn: (_: any) => void): void {\n     *   this._onChange = fn;\n     * }\n     * ```\n     *\n     * When the value changes in the UI, call the registered\n     * function to allow the forms API to update itself:\n     *\n     * ```ts\n     * host: {\n     *    '(change)': '_onChange($event.target.value)'\n     * }\n     * ```\n     *\n     * @param {?} fn The callback function to register\n     * @return {?}\n     */\n    ControlValueAccessor.prototype.registerOnChange = function (fn) { };\n    /**\n     * \\@description\n     * Registers a callback function is called by the forms API on initialization\n     * to update the form model on blur.\n     *\n     * When implementing `registerOnTouched` in your own value accessor, save the given\n     * function so your class calls it when the control should be considered\n     * blurred or \"touched\".\n     *\n     * \\@usageNotes\n     * ### Store the callback function\n     *\n     * The following example stores the provided function as an internal method.\n     *\n     * ```ts\n     * registerOnTouched(fn: any): void {\n     *   this._onTouched = fn;\n     * }\n     * ```\n     *\n     * On blur (or equivalent), your class should call the registered function to allow\n     * the forms API to update itself:\n     *\n     * ```ts\n     * host: {\n     *    '(blur)': '_onTouched()'\n     * }\n     * ```\n     *\n     * @param {?} fn The callback function to register\n     * @return {?}\n     */\n    ControlValueAccessor.prototype.registerOnTouched = function (fn) { };\n    /**\n     * \\@description\n     * Function that is called by the forms API when the control status changes to\n     * or from 'DISABLED'. Depending on the status, it enables or disables the\n     * appropriate DOM element.\n     *\n     * \\@usageNotes\n     * The following is an example of writing the disabled property to a native DOM element:\n     *\n     * ```ts\n     * setDisabledState(isDisabled: boolean): void {\n     *   this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n     * }\n     * ```\n     *\n     * @param {?} isDisabled The disabled status to set on the element\n     * @return {?}\n     */\n    ControlValueAccessor.prototype.setDisabledState = function (isDisabled) { };\n}\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * \\@publicApi\n * @type {?}\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/checkbox_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => CheckboxControlValueAccessor)),\n    multi: true,\n};\n/**\n * \\@description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * \\@usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass CheckboxControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Sets the \"checked\" property on the input element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nCheckboxControlValueAccessor.ɵfac = function CheckboxControlValueAccessor_Factory(t) { return new (t || CheckboxControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCheckboxControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxControlValueAccessor, selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]], hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.checked); })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR])] });\n/** @nocollapse */\nCheckboxControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@description\n     * The registered callback function called when a change event occurs on the input element.\n     * @type {?}\n     */\n    CheckboxControlValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    CheckboxControlValueAccessor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    CheckboxControlValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CheckboxControlValueAccessor.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/default_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => DefaultValueAccessor)),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    /** @type {?} */\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * \\@description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * \\@publicApi\n * @type {?}\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * \\@description\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * \\@usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass DefaultValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _compositionMode\n     */\n    constructor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        /**\n         * \\@description\n         * The registered callback function called when an input event occurs on the input element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Whether the user is creating a composition string (IME events).\n         */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        /** @type {?} */\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n}\nDefaultValueAccessor.ɵfac = function DefaultValueAccessor_Factory(t) { return new (t || DefaultValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8)); };\nDefaultValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DefaultValueAccessor, selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]], hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) { return ctx._handleInput($event.target.value); })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() { return ctx._compositionStart(); })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) { return ctx._compositionEnd($event.target.value); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR])] });\n/** @nocollapse */\nDefaultValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DefaultValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '$any(this)._handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '$any(this)._compositionStart()',\n                    '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: Boolean, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [COMPOSITION_BUFFER_MODE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * \\@description\n     * The registered callback function called when an input event occurs on the input element.\n     * @type {?}\n     */\n    DefaultValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    DefaultValueAccessor.prototype.onTouched;\n    /**\n     * Whether the user is creating a composition string (IME events).\n     * @type {?}\n     * @private\n     */\n    DefaultValueAccessor.prototype._composing;\n    /**\n     * @type {?}\n     * @private\n     */\n    DefaultValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    DefaultValueAccessor.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DefaultValueAccessor.prototype._compositionMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/abstract_control_directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * \\@publicApi\n * @abstract\n */\nclass AbstractControlDirective {\n    /**\n     * \\@description\n     * Reports the value of the control if it is present, otherwise null.\n     * @return {?}\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * \\@description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * \\@description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * \\@description\n     * Reports whether a control is pending, meaning that that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     * @return {?}\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * \\@description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * \\@description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * \\@description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * \\@description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * \\@description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * \\@description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * \\@description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * \\@description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * \\@description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * \\@description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * \\@description\n     * Resets the control with the provided value if the control is present.\n     * @param {?=} value\n     * @return {?}\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * \\@description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * \\@usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @param {?} errorCode The code of the error to check\n     * @param {?=} path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @return {?} whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * \\@description\n     * Reports error data for the control with the given path.\n     *\n     * \\@usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @param {?} errorCode The code of the error to check\n     * @param {?=} path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @return {?} error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\nAbstractControlDirective.ɵfac = function AbstractControlDirective_Factory(t) { return new (t || AbstractControlDirective)(); };\nAbstractControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractControlDirective });\n\nif (false) {\n    /**\n     * \\@description\n     * A reference to the underlying control.\n     *\n     * @abstract\n     * @return {?} the control that backs this directive. Most properties fall through to that instance.\n     */\n    AbstractControlDirective.prototype.control = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/control_container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * \\@publicApi\n * @abstract\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * \\@description\n     * The top-level form directive for the control.\n     * @return {?}\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * \\@description\n     * The path to this group.\n     * @return {?}\n     */\n    get path() {\n        return null;\n    }\n}\nControlContainer.ɵfac = function ControlContainer_Factory(t) { return ɵControlContainer_BaseFactory(t || ControlContainer); };\nControlContainer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ControlContainer, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵControlContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ControlContainer);\nif (false) {\n    /**\n     * \\@description\n     * The name for the control\n     * @type {?}\n     */\n    ControlContainer.prototype.name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * \\@description\n * A base class that all control `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * \\@publicApi\n * @abstract\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * \\@description\n         * The parent form for the control.\n         *\n         * \\@internal\n         */\n        this._parent = null;\n        /**\n         * \\@description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * \\@description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n        /**\n         * \\@description\n         * The uncomposed array of synchronous validators for the control\n         *\n         * \\@internal\n         */\n        this._rawValidators = [];\n        /**\n         * \\@description\n         * The uncomposed array of async validators for the control\n         *\n         * \\@internal\n         */\n        this._rawAsyncValidators = [];\n    }\n    /**\n     * \\@description\n     * The registered synchronous validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     * @return {?}\n     */\n    get validator() {\n        return (/** @type {?} */ (unimplemented()));\n    }\n    /**\n     * \\@description\n     * The registered async validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     * @return {?}\n     */\n    get asyncValidator() {\n        return (/** @type {?} */ (unimplemented()));\n    }\n}\nif (false) {\n    /**\n     * \\@description\n     * The parent form for the control.\n     *\n     * \\@internal\n     * @type {?}\n     */\n    NgControl.prototype._parent;\n    /**\n     * \\@description\n     * The name for the control\n     * @type {?}\n     */\n    NgControl.prototype.name;\n    /**\n     * \\@description\n     * The value accessor for the control\n     * @type {?}\n     */\n    NgControl.prototype.valueAccessor;\n    /**\n     * \\@description\n     * The uncomposed array of synchronous validators for the control\n     *\n     * \\@internal\n     * @type {?}\n     */\n    NgControl.prototype._rawValidators;\n    /**\n     * \\@description\n     * The uncomposed array of async validators for the control\n     *\n     * \\@internal\n     * @type {?}\n     */\n    NgControl.prototype._rawAsyncValidators;\n    /**\n     * \\@description\n     * The callback method to update the model from the view when requested\n     *\n     * @abstract\n     * @param {?} newValue The new value for the view\n     * @return {?}\n     */\n    NgControl.prototype.viewToModelUpdate = function (newValue) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_control_status.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AbstractControlStatus {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) {\n        this._cd = cd;\n    }\n    /**\n     * @return {?}\n     */\n    get ngClassUntouched() {\n        return this._cd.control ? this._cd.control.untouched : false;\n    }\n    /**\n     * @return {?}\n     */\n    get ngClassTouched() {\n        return this._cd.control ? this._cd.control.touched : false;\n    }\n    /**\n     * @return {?}\n     */\n    get ngClassPristine() {\n        return this._cd.control ? this._cd.control.pristine : false;\n    }\n    /**\n     * @return {?}\n     */\n    get ngClassDirty() {\n        return this._cd.control ? this._cd.control.dirty : false;\n    }\n    /**\n     * @return {?}\n     */\n    get ngClassValid() {\n        return this._cd.control ? this._cd.control.valid : false;\n    }\n    /**\n     * @return {?}\n     */\n    get ngClassInvalid() {\n        return this._cd.control ? this._cd.control.invalid : false;\n    }\n    /**\n     * @return {?}\n     */\n    get ngClassPending() {\n        return this._cd.control ? this._cd.control.pending : false;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AbstractControlStatus.prototype._cd;\n}\n/** @type {?} */\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * \\@description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * \\@usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatus.ɵfac = function NgControlStatus_Factory(t) { return new (t || NgControlStatus)(ɵngcc0.ɵɵdirectiveInject(NgControl, 2)); };\nNgControlStatus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatus, selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]], hostVars: 14, hostBindings: function NgControlStatus_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nNgControlStatus.ctorParameters = () => [\n    { type: NgControl, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatus, [{\n        type: Directive,\n        args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n    }], function () { return [{ type: NgControl, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n/**\n * \\@description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * @see `NgControlStatus`\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatusGroup.ɵfac = function NgControlStatusGroup_Factory(t) { return new (t || NgControlStatusGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 2)); };\nNgControlStatusGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgControlStatusGroup, selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]], hostVars: 14, hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ng-untouched\", ctx.ngClassUntouched)(\"ng-touched\", ctx.ngClassTouched)(\"ng-pristine\", ctx.ngClassPristine)(\"ng-dirty\", ctx.ngClassDirty)(\"ng-valid\", ctx.ngClassValid)(\"ng-invalid\", ctx.ngClassInvalid)(\"ng-pending\", ctx.ngClassPending);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nNgControlStatusGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Self }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgControlStatusGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Self\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/validators.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/**\n * \\@description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * \\@usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * \\@Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * \\@publicApi\n * @type {?}\n */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * \\@description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * \\@publicApi\n * @type {?}\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part\\@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n * @type {?}\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * \\@description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * \\@publicApi\n */\nclass Validators {\n    /**\n     * \\@description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} min\n     * @return {?} A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     */\n    static min(min) {\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        });\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} max\n     * @return {?} A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     */\n    static max(max) {\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        });\n    }\n    /**\n     * \\@description\n     * Validator that requires the control have a non-empty value.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} control\n     * @return {?} An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     */\n    static required(control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} control\n     * @return {?} An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     */\n    static requiredTrue(control) {\n        return control.value === true ? null : { 'required': true };\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common usecases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `\\@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad\\@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} control\n     * @return {?} An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     */\n    static email(control) {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    }\n    /**\n     * \\@description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} minLength\n     * @return {?} A validator function that returns an error map with the\n     * `minlength` if the validation check fails, otherwise `null`.\n     *\n     */\n    static minLength(minLength) {\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        });\n    }\n    /**\n     * \\@description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} maxLength\n     * @return {?} A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     */\n    static maxLength(maxLength) {\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            /** @type {?} */\n            const length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        });\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @return {?} A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     */\n    static pattern(pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        /** @type {?} */\n        let regex;\n        /** @type {?} */\n        let regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        });\n    }\n    /**\n     * \\@description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} control\n     * @return {?}\n     */\n    static nullValidator(control) {\n        return null;\n    }\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    static compose(validators) {\n        if (!validators)\n            return null;\n        /** @type {?} */\n        const presentValidators = (/** @type {?} */ (validators.filter(isPresent)));\n        if (presentValidators.length == 0)\n            return null;\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        });\n    }\n    /**\n     * \\@description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     * @param {?} validators\n     * @return {?} A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     */\n    static composeAsync(validators) {\n        if (!validators)\n            return null;\n        /** @type {?} */\n        const presentValidators = (/** @type {?} */ (validators.filter(isPresent)));\n        if (presentValidators.length == 0)\n            return null;\n        return (/**\n         * @param {?} control\n         * @return {?}\n         */\n        function (control) {\n            /** @type {?} */\n            const observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return forkJoin(observables).pipe(map(_mergeErrors));\n        });\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    /** @type {?} */\n    const obs = ɵisPromise(r) ? from(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(`Expected validator to return Promise or Observable.`);\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map((/**\n     * @param {?} v\n     * @return {?}\n     */\n    v => v(control)));\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map((/**\n     * @param {?} v\n     * @return {?}\n     */\n    v => v(control)));\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    /** @type {?} */\n    let res = {};\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    arrayOfErrors.forEach((/**\n     * @param {?} errors\n     * @return {?}\n     */\n    (errors) => {\n        res = errors != null ? Object.assign(Object.assign({}, (/** @type {?} */ (res))), errors) : (/** @type {?} */ (res));\n    }));\n    return Object.keys(res).length === 0 ? null : res;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/normalize_validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if (((/** @type {?} */ (validator))).validate) {\n        return (/**\n         * @param {?} c\n         * @return {?}\n         */\n        (c) => ((/** @type {?} */ (validator))).validate(c));\n    }\n    else {\n        return (/** @type {?} */ (validator));\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if (((/** @type {?} */ (validator))).validate) {\n        return (/**\n         * @param {?} c\n         * @return {?}\n         */\n        (c) => ((/** @type {?} */ (validator))).validate(c));\n    }\n    else {\n        return (/** @type {?} */ (validator));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/number_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NumberValueAccessor)),\n    multi: true\n};\n/**\n * \\@description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * \\@usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NumberValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@description\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        /** @type {?} */\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        });\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nNumberValueAccessor.ɵfac = function NumberValueAccessor_Factory(t) { return new (t || NumberValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNumberValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberValueAccessor, selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]], hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function NumberValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR])] });\n/** @nocollapse */\nNumberValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@description\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @type {?}\n     */\n    NumberValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    NumberValueAccessor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    NumberValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    NumberValueAccessor.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/radio_control_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => RadioControlValueAccessor)),\n    multi: true\n};\n/**\n * \\@description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * \\@description\n     * Adds a control to the internal registry. For internal use only.\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * \\@description\n     * Removes a control from the internal registry. For internal use only.\n     * @param {?} accessor\n     * @return {?}\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * \\@description\n     * Selects a radio button. For internal use only.\n     * @param {?} accessor\n     * @return {?}\n     */\n    select(accessor) {\n        this._accessors.forEach((/**\n         * @param {?} c\n         * @return {?}\n         */\n        (c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        }));\n    }\n    /**\n     * @private\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    }\n}\nRadioControlRegistry.ɵfac = function RadioControlRegistry_Factory(t) { return new (t || RadioControlRegistry)(); };\nRadioControlRegistry.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RadioControlRegistry, factory: RadioControlRegistry.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlRegistry, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RadioControlRegistry.prototype._accessors;\n}\n/**\n * \\@description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * \\@usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass RadioControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _registry\n     * @param {?} _injector\n     */\n    constructor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        /**\n         * \\@description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive is initialized. For internal use only.\n     * @return {?}\n     */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /**\n     * \\@description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * \\@description\n     * Sets the \"checked\" property value on the radio input element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = (/**\n         * @return {?}\n         */\n        () => {\n            fn(this.value);\n            this._registry.select(this);\n        });\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _throwNameError() {\n        throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n    }\n}\nRadioControlValueAccessor.ɵfac = function RadioControlValueAccessor_Factory(t) { return new (t || RadioControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(RadioControlRegistry), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };\nRadioControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RadioControlValueAccessor, selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]], hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() { return ctx.onChange(); })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, features: [ɵngcc0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR])] });\n/** @nocollapse */\nRadioControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: RadioControlRegistry },\n    { type: Injector }\n];\nRadioControlValueAccessor.propDecorators = {\n    name: [{ type: Input }],\n    formControlName: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RadioControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: RadioControlRegistry }, { type: ɵngcc0.Injector }]; }, { name: [{\n            type: Input\n        }], formControlName: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype._state;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype._control;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype._fn;\n    /**\n     * \\@description\n     * The registered callback function called when a change event occurs on the input element.\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype.onTouched;\n    /**\n     * \\@description\n     * Tracks the name of the radio input element.\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype.name;\n    /**\n     * \\@description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype.formControlName;\n    /**\n     * \\@description\n     * Tracks the value of the radio input element\n     * @type {?}\n     */\n    RadioControlValueAccessor.prototype.value;\n    /**\n     * @type {?}\n     * @private\n     */\n    RadioControlValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    RadioControlValueAccessor.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RadioControlValueAccessor.prototype._registry;\n    /**\n     * @type {?}\n     * @private\n     */\n    RadioControlValueAccessor.prototype._injector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/range_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => RangeValueAccessor)),\n    multi: true\n};\n/**\n * \\@description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * \\@usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass RangeValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@description\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (/**\n         * @param {?} value\n         * @return {?}\n         */\n        (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        });\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nRangeValueAccessor.ɵfac = function RangeValueAccessor_Factory(t) { return new (t || RangeValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nRangeValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangeValueAccessor, selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]], hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR])] });\n/** @nocollapse */\nRangeValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@description\n     * The registered callback function called when a change or input event occurs on the input\n     * element.\n     * @type {?}\n     */\n    RangeValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    RangeValueAccessor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    RangeValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    RangeValueAccessor.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/error_examples.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst FormErrorExamples = {\n    formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n    formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n    formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n    ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n    ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/reactive_errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ReactiveErrors {\n    /**\n     * @return {?}\n     */\n    static controlParentException() {\n        throw new Error(`formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formControlName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static ngModelGroupException() {\n        throw new Error(`formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${FormErrorExamples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${FormErrorExamples.ngModelGroup}`);\n    }\n    /**\n     * @return {?}\n     */\n    static missingFormException() {\n        throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${FormErrorExamples.formControlName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static groupParentException() {\n        throw new Error(`formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formGroupName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static arrayParentException() {\n        throw new Error(`formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${FormErrorExamples.formArrayName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static disabledAttrWarning() {\n        console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n    }\n    /**\n     * @param {?} directiveName\n     * @return {?}\n     */\n    static ngModelWarning(directiveName) {\n        console.warn(`\n    It looks like you're using ngModel on the same form field as ${directiveName}. \n    Support for using the ngModel input property and ngModelChange event with \n    reactive form directives has been deprecated in Angular v6 and will be removed \n    in Angular v7.\n    \n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' :\n            'FormControlName'}#use-with-ngmodel\n    `);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/select_control_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => SelectControlValueAccessor)),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * \\@usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass SelectControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        /**\n         * \\@description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._compareWith = ɵlooseIdentical;\n    }\n    /**\n     * \\@description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the input element. The \"selectedIndex\"\n     * property is also set if an ID is provided on the option element.\n     *\n     * @param {?} value The checked value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        /** @type {?} */\n        const id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        /** @type {?} */\n        const valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (/**\n         * @param {?} valueString\n         * @return {?}\n         */\n        (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        });\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    _getOptionValue(valueString) {\n        /** @type {?} */\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n}\nSelectControlValueAccessor.ɵfac = function SelectControlValueAccessor_Factory(t) { return new (t || SelectControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectControlValueAccessor, selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]], hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target.value); })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR])] });\n/** @nocollapse */\nSelectControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    SelectControlValueAccessor.prototype.value;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    SelectControlValueAccessor.prototype._optionMap;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    SelectControlValueAccessor.prototype._idCounter;\n    /**\n     * \\@description\n     * The registered callback function called when a change event occurs on the input element.\n     * @type {?}\n     */\n    SelectControlValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    SelectControlValueAccessor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectControlValueAccessor.prototype._compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectControlValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectControlValueAccessor.prototype._elementRef;\n}\n/**\n * \\@description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgSelectOption {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * \\@description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     * @param {?} value\n     * @return {?}\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * \\@description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /**\n     * \\@description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nNgSelectOption.ɵfac = function NgSelectOption_Factory(t) { return new (t || NgSelectOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectControlValueAccessor, 9)); };\nNgSelectOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgSelectOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\n/** @nocollapse */\nNgSelectOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nNgSelectOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgSelectOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * ID of the option element\n     * @type {?}\n     */\n    NgSelectOption.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgSelectOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgSelectOption.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgSelectOption.prototype._select;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/select_multiple_control_value_accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => SelectMultipleControlValueAccessor)),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * Mock interface for HTML Options\n * @record\n */\nfunction HTMLOption() { }\nif (false) {\n    /** @type {?} */\n    HTMLOption.prototype.value;\n    /** @type {?} */\n    HTMLOption.prototype.selected;\n}\n/**\n * Mock interface for HTMLCollection\n * @abstract\n */\nclass HTMLCollection {\n}\nif (false) {\n    /** @type {?} */\n    HTMLCollection.prototype.length;\n    /**\n     * @abstract\n     * @param {?} _\n     * @return {?}\n     */\n    HTMLCollection.prototype.item = function (_) { };\n}\n/**\n * \\@description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * \\@usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass SelectMultipleControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        /**\n         * \\@description\n         * The registered callback function called when a change event occurs on the input element.\n         */\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * \\@description\n         * The registered callback function called when a blur event occurs on the input element.\n         */\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._compareWith = ɵlooseIdentical;\n    }\n    /**\n     * \\@description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * \\@description\n     * Sets the \"value\" property on one or of more\n     * of the select's options.\n     *\n     * @param {?} value The value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        /** @type {?} */\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            /** @type {?} */\n            const ids = value.map((/**\n             * @param {?} v\n             * @return {?}\n             */\n            (v) => this._getOptionId(v)));\n            optionSelectedStateSetter = (/**\n             * @param {?} opt\n             * @param {?} o\n             * @return {?}\n             */\n            (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            });\n        }\n        else {\n            optionSelectedStateSetter = (/**\n             * @param {?} opt\n             * @param {?} o\n             * @return {?}\n             */\n            (opt, o) => {\n                opt._setSelected(false);\n            });\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => {\n            /** @type {?} */\n            const selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                /** @type {?} */\n                const options = _.selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    /** @type {?} */\n                    const opt = options.item(i);\n                    /** @type {?} */\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade on IE\n            else {\n                /** @type {?} */\n                const options = (/** @type {?} */ (_.options));\n                for (let i = 0; i < options.length; i++) {\n                    /** @type {?} */\n                    const opt = options.item(i);\n                    if (opt.selected) {\n                        /** @type {?} */\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        });\n    }\n    /**\n     * \\@description\n     * Registers a function called when the control is touched.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the select input element.\n     *\n     * @param {?} isDisabled The disabled value\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _registerOption(value) {\n        /** @type {?} */\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith((/** @type {?} */ (this._optionMap.get(id)))._value, value))\n                return id;\n        }\n        return null;\n    }\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    _getOptionValue(valueString) {\n        /** @type {?} */\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? (/** @type {?} */ (this._optionMap.get(id)))._value : valueString;\n    }\n}\nSelectMultipleControlValueAccessor.ɵfac = function SelectMultipleControlValueAccessor_Factory(t) { return new (t || SelectMultipleControlValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nSelectMultipleControlValueAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SelectMultipleControlValueAccessor, selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]], hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) { return ctx.onChange($event.target); })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() { return ctx.onTouched(); });\n    } }, inputs: { compareWith: \"compareWith\" }, features: [ɵngcc0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR])] });\n/** @nocollapse */\nSelectMultipleControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectMultipleControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SelectMultipleControlValueAccessor, [{\n        type: Directive,\n        args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { compareWith: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * The current value\n     * @type {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.value;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._optionMap;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    SelectMultipleControlValueAccessor.prototype._idCounter;\n    /**\n     * \\@description\n     * The registered callback function called when a change event occurs on the input element.\n     * @type {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.onChange;\n    /**\n     * \\@description\n     * The registered callback function called when a blur event occurs on the input element.\n     * @type {?}\n     */\n    SelectMultipleControlValueAccessor.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectMultipleControlValueAccessor.prototype._compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectMultipleControlValueAccessor.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectMultipleControlValueAccessor.prototype._elementRef;\n}\n/**\n * \\@description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass ɵNgSelectMultipleOption {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * \\@description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     * @param {?} value\n     * @return {?}\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * \\@description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /**\n     * \\@description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nɵNgSelectMultipleOption.ɵfac = function ɵNgSelectMultipleOption_Factory(t) { return new (t || ɵNgSelectMultipleOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9)); };\nɵNgSelectMultipleOption.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgSelectMultipleOption, selectors: [[\"option\"]], inputs: { ngValue: \"ngValue\", value: \"value\" } });\n/** @nocollapse */\nɵNgSelectMultipleOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nɵNgSelectMultipleOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgSelectMultipleOption, [{\n        type: Directive,\n        args: [{ selector: 'option' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }]; }, { ngValue: [{\n            type: Input,\n            args: ['ngValue']\n        }], value: [{\n            type: Input,\n            args: ['value']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    ɵNgSelectMultipleOption.prototype.id;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ɵNgSelectMultipleOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    ɵNgSelectMultipleOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    ɵNgSelectMultipleOption.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    ɵNgSelectMultipleOption.prototype._select;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/shared.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return [...(/** @type {?} */ (parent.path)), (/** @type {?} */ (name))];\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([(/** @type {?} */ (control.validator)), dir.validator]);\n    control.asyncValidator = Validators.composeAsync([(/** @type {?} */ (control.asyncValidator)), dir.asyncValidator]);\n    (/** @type {?} */ (dir.valueAccessor)).writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if ((/** @type {?} */ (dir.valueAccessor)).setDisabledState) {\n        control.registerOnDisabledChange((/**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        (isDisabled) => {\n            (/** @type {?} */ ((/** @type {?} */ (dir.valueAccessor)).setDisabledState))(isDisabled);\n        }));\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach((/**\n     * @param {?} validator\n     * @return {?}\n     */\n    (validator) => {\n        if (((/** @type {?} */ (validator))).registerOnValidatorChange)\n            (/** @type {?} */ (((/** @type {?} */ (validator))).registerOnValidatorChange))((/**\n             * @return {?}\n             */\n            () => control.updateValueAndValidity()));\n    }));\n    dir._rawAsyncValidators.forEach((/**\n     * @param {?} validator\n     * @return {?}\n     */\n    (validator) => {\n        if (((/** @type {?} */ (validator))).registerOnValidatorChange)\n            (/** @type {?} */ (((/** @type {?} */ (validator))).registerOnValidatorChange))((/**\n             * @return {?}\n             */\n            () => control.updateValueAndValidity()));\n    }));\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    (/** @type {?} */ (dir.valueAccessor)).registerOnChange((/**\n     * @return {?}\n     */\n    () => _noControlError(dir)));\n    (/** @type {?} */ (dir.valueAccessor)).registerOnTouched((/**\n     * @return {?}\n     */\n    () => _noControlError(dir)));\n    dir._rawValidators.forEach((/**\n     * @param {?} validator\n     * @return {?}\n     */\n    (validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    }));\n    dir._rawAsyncValidators.forEach((/**\n     * @param {?} validator\n     * @return {?}\n     */\n    (validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    }));\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpViewChangePipeline(control, dir) {\n    (/** @type {?} */ (dir.valueAccessor)).registerOnChange((/**\n     * @param {?} newValue\n     * @return {?}\n     */\n    (newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    }));\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpBlurPipeline(control, dir) {\n    (/** @type {?} */ (dir.valueAccessor)).registerOnTouched((/**\n     * @return {?}\n     */\n    () => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    }));\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange((/**\n     * @param {?} newValue\n     * @param {?} emitModelEvent\n     * @return {?}\n     */\n    (newValue, emitModelEvent) => {\n        // control -> view\n        (/** @type {?} */ (dir.valueAccessor)).writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    }));\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    /** @type {?} */\n    let messageEnd;\n    if ((/** @type {?} */ (dir.path)).length > 1) {\n        messageEnd = `path: '${(/** @type {?} */ (dir.path)).join(' -> ')}'`;\n    }\n    else if ((/** @type {?} */ (dir.path))[0]) {\n        messageEnd = `name: '${dir.path}'`;\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(`${message} ${messageEnd}`);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    /** @type {?} */\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !ɵlooseIdentical(viewModel, change.currentValue);\n}\n/** @type {?} */\nconst BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some((/**\n     * @param {?} a\n     * @return {?}\n     */\n    a => valueAccessor.constructor === a));\n}\n/**\n * @param {?} form\n * @param {?} directives\n * @return {?}\n */\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach((/**\n     * @param {?} dir\n     * @return {?}\n     */\n    dir => {\n        /** @type {?} */\n        const control = (/** @type {?} */ (dir.control));\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    }));\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    /** @type {?} */\n    let defaultAccessor = undefined;\n    /** @type {?} */\n    let builtinAccessor = undefined;\n    /** @type {?} */\n    let customAccessor = undefined;\n    valueAccessors.forEach((/**\n     * @param {?} v\n     * @return {?}\n     */\n    (v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    }));\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction removeDir(list, el) {\n    /** @type {?} */\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\n/**\n * @param {?} name\n * @param {?} type\n * @param {?} instance\n * @param {?} warningConfig\n * @return {?}\n */\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (!isDevMode() || warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        ReactiveErrors.ngModelWarning(name);\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n * @type {?}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n * @type {?}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n * @type {?}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n * @type {?}\n */\nconst DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!Array.isArray(path)) {\n        path = path.split(delimiter);\n    }\n    if (Array.isArray(path) && path.length === 0)\n        return null;\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    /** @type {?} */\n    let controlToFind = control;\n    path.forEach((/**\n     * @param {?} name\n     * @return {?}\n     */\n    (name) => {\n        if (controlToFind instanceof FormGroup) {\n            controlToFind = controlToFind.controls.hasOwnProperty((/** @type {?} */ (name))) ?\n                controlToFind.controls[name] :\n                null;\n        }\n        else if (controlToFind instanceof FormArray) {\n            controlToFind = controlToFind.at((/** @type {?} */ (name))) || null;\n        }\n        else {\n            controlToFind = null;\n        }\n    }));\n    return controlToFind;\n}\n/**\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction coerceToValidator(validatorOrOpts) {\n    /** @type {?} */\n    const validator = (/** @type {?} */ ((isOptionsObj(validatorOrOpts) ? ((/** @type {?} */ (validatorOrOpts))).validators :\n        validatorOrOpts)));\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator, validatorOrOpts) {\n    /** @type {?} */\n    const origAsyncValidator = (/** @type {?} */ ((isOptionsObj(validatorOrOpts) ? ((/** @type {?} */ (validatorOrOpts))).asyncValidators :\n        asyncValidator)));\n    return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) :\n        origAsyncValidator || null;\n}\n/**\n * Interface for options provided to an `AbstractControl`.\n *\n * \\@publicApi\n * @record\n */\nfunction AbstractControlOptions() { }\nif (false) {\n    /**\n     * \\@description\n     * The list of validators applied to a control.\n     * @type {?|undefined}\n     */\n    AbstractControlOptions.prototype.validators;\n    /**\n     * \\@description\n     * The list of async validators applied to control.\n     * @type {?|undefined}\n     */\n    AbstractControlOptions.prototype.asyncValidators;\n    /**\n     * \\@description\n     * The event name for control to update upon.\n     * @type {?|undefined}\n     */\n    AbstractControlOptions.prototype.updateOn;\n}\n/**\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * \\@publicApi\n * @abstract\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param {?} validator The function that determines the synchronous validity of this control.\n     * @param {?} asyncValidator The function that determines the asynchronous validity of this\n     * control.\n     */\n    constructor(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @return True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    /**\n     * The parent control.\n     * @return {?}\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @return {?} True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @return {?} True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @return {?} True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @return {?} True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @return {?} True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @return {?} True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     * @return {?}\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     * @return {?}\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing sync validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param {?} newValidator\n     * @return {?}\n     */\n    setValidators(newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    }\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * overwrites any existing async validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param {?} newValidator\n     * @return {?}\n     */\n    setAsyncValidators(newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    }\n    /**\n     * Empties out the sync validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @return {?}\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @return {?}\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()` / `markAsDirty()` / `markAsPristine()`\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * @return {?}\n     */\n    markAsTouched(opts = {}) {\n        ((/** @type {?} */ (this))).touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     * @return {?}\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control.markAllAsTouched()));\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()` / `markAsDirty()` / `markAsPristine()`\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * @return {?}\n     */\n    markAsUntouched(opts = {}) {\n        ((/** @type {?} */ (this))).touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            control.markAsUntouched({ onlySelf: true });\n        }));\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()` / `markAsUntouched()` / `markAsPristine()`\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * @return {?}\n     */\n    markAsDirty(opts = {}) {\n        ((/** @type {?} */ (this))).pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()` / `markAsUntouched()` / `markAsDirty()`\n     *\n     * @param {?=} opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * @return {?}\n     */\n    markAsPristine(opts = {}) {\n        ((/** @type {?} */ (this))).pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            control.markAsPristine({ onlySelf: true });\n        }));\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     * @return {?}\n     */\n    markAsPending(opts = {}) {\n        ((/** @type {?} */ (this))).status = PENDING;\n        if (opts.emitEvent !== false) {\n            ((/** @type {?} */ (this.statusChanges))).emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        /** @type {?} */\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        ((/** @type {?} */ (this))).status = DISABLED;\n        ((/** @type {?} */ (this))).errors = null;\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            control.disable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        }));\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            ((/** @type {?} */ (this.valueChanges))).emit(this.value);\n            ((/** @type {?} */ (this.statusChanges))).emit(this.status);\n        }\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((/**\n         * @param {?} changeFn\n         * @return {?}\n         */\n        (changeFn) => changeFn(true)));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @param {?=} opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        /** @type {?} */\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        ((/** @type {?} */ (this))).status = VALID;\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            control.enable(Object.assign(Object.assign({}, opts), { onlySelf: true }));\n        }));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(Object.assign(Object.assign({}, opts), { skipPristineCheck }));\n        this._onDisabledChange.forEach((/**\n         * @param {?} changeFn\n         * @return {?}\n         */\n        (changeFn) => changeFn(false)));\n    }\n    /**\n     * @private\n     * @param {?} opts\n     * @return {?}\n     */\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * @param {?} parent Sets the parent of the control\n     * @return {?}\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param {?=} opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            ((/** @type {?} */ (this))).errors = this._runValidator();\n            ((/** @type {?} */ (this))).status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            ((/** @type {?} */ (this.valueChanges))).emit(this.value);\n            ((/** @type {?} */ (this.statusChanges))).emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((/**\n         * @param {?} ctrl\n         * @return {?}\n         */\n        (ctrl) => ctrl._updateTreeValidity(opts)));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setInitialStatus() {\n        ((/** @type {?} */ (this))).status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    /**\n     * @private\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            ((/** @type {?} */ (this))).status = PENDING;\n            /** @type {?} */\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe((/**\n                 * @param {?} errors\n                 * @return {?}\n                 */\n                (errors) => this.setErrors(errors, { emitEvent })));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * \\@usageNotes\n     *\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    setErrors(errors, opts = {}) {\n        ((/** @type {?} */ (this))).errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * \\@usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @return {?}\n     */\n    get(path) {\n        return _find(this, path, '.');\n    }\n    /**\n     * \\@description\n     * Reports error data for the control with the given path.\n     *\n     * \\@usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @param {?} errorCode The code of the error to check\n     * @param {?=} path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @return {?} error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        /** @type {?} */\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * \\@description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * \\@usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @param {?} errorCode The code of the error to check\n     * @param {?=} path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @return {?} whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     * @return {?}\n     */\n    get root() {\n        /** @type {?} */\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    _updateControlsErrors(emitEvent) {\n        ((/** @type {?} */ (this))).status = this._calculateStatus();\n        if (emitEvent) {\n            ((/** @type {?} */ (this.statusChanges))).emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _initObservables() {\n        ((/** @type {?} */ (this))).valueChanges = new EventEmitter();\n        ((/** @type {?} */ (this))).statusChanges = new EventEmitter();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control.status === status));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _anyControlsDirty() {\n        return this._anyControls((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control.dirty));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _anyControlsTouched() {\n        return this._anyControls((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control.touched));\n    }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _updatePristine(opts = {}) {\n        ((/** @type {?} */ (this))).pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _updateTouched(opts = {}) {\n        ((/** @type {?} */ (this))).touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    _isBoxedValue(formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    }\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && ((/** @type {?} */ (opts))).updateOn != null) {\n            this._updateOn = (/** @type {?} */ (((/** @type {?} */ (opts))).updateOn));\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * \\@internal\n     * @private\n     * @param {?=} onlySelf\n     * @return {?}\n     */\n    _parentMarkedDirty(onlySelf) {\n        /** @type {?} */\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && parentDirty && !this._parent._anyControlsDirty();\n    }\n}\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    AbstractControl.prototype._pendingDirty;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    AbstractControl.prototype._pendingTouched;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    AbstractControl.prototype._onCollectionChange;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    AbstractControl.prototype._updateOn;\n    /**\n     * @type {?}\n     * @private\n     */\n    AbstractControl.prototype._parent;\n    /**\n     * @type {?}\n     * @private\n     */\n    AbstractControl.prototype._asyncValidationSubscription;\n    /**\n     * The current value of the control.\n     *\n     * * For a `FormControl`, the current value.\n     * * For an enabled `FormGroup`, the values of enabled controls as an object\n     * with a key-value pair for each member of the group.\n     * * For a disabled `FormGroup`, the values of all controls as an object\n     * with a key-value pair for each member of the group.\n     * * For a `FormArray`, the values of enabled controls as an array.\n     *\n     * @type {?}\n     */\n    AbstractControl.prototype.value;\n    /**\n     * The validation status of the control. There are four possible\n     * validation status values:\n     *\n     * * **VALID**: This control has passed all validation checks.\n     * * **INVALID**: This control has failed at least one validation check.\n     * * **PENDING**: This control is in the midst of conducting a validation check.\n     * * **DISABLED**: This control is exempt from validation checks.\n     *\n     * These status values are mutually exclusive, so a control cannot be\n     * both valid AND invalid or invalid AND disabled.\n     * @type {?}\n     */\n    AbstractControl.prototype.status;\n    /**\n     * An object containing any errors generated by failing validation,\n     * or null if there are no errors.\n     * @type {?}\n     */\n    AbstractControl.prototype.errors;\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * \\@return True if the user has not yet changed the value in the UI; compare `dirty`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     * @type {?}\n     */\n    AbstractControl.prototype.pristine;\n    /**\n     * True if the control is marked as `touched`.\n     *\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     * @type {?}\n     */\n    AbstractControl.prototype.touched;\n    /**\n     * A multicasting observable that emits an event every time the value of the control changes, in\n     * the UI or programmatically. It also emits an event each time you call enable() or disable()\n     * without passing along {emitEvent: false} as a function argument.\n     * @type {?}\n     */\n    AbstractControl.prototype.valueChanges;\n    /**\n     * A multicasting observable that emits an event every time the validation `status` of the control\n     * recalculates.\n     *\n     * @see {\\@link AbstractControl.status}\n     *\n     * @type {?}\n     */\n    AbstractControl.prototype.statusChanges;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    AbstractControl.prototype._onDisabledChange;\n    /** @type {?} */\n    AbstractControl.prototype.validator;\n    /** @type {?} */\n    AbstractControl.prototype.asyncValidator;\n    /**\n     * Sets the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.setValue = function (value, options) { };\n    /**\n     * Patches the value of the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.patchValue = function (value, options) { };\n    /**\n     * Resets the control. Abstract method (implemented in sub-classes).\n     * @abstract\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControl.prototype.reset = function (value, options) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._updateValue = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} cb\n     * @return {?}\n     */\n    AbstractControl.prototype._forEachChild = function (cb) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @param {?} condition\n     * @return {?}\n     */\n    AbstractControl.prototype._anyControls = function (condition) { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._allControlsDisabled = function () { };\n    /**\n     * \\@internal\n     * @abstract\n     * @return {?}\n     */\n    AbstractControl.prototype._syncPendingControls = function () { };\n}\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events. See [usage examples below](#usage-notes).\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * \\@usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n * ```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n * ```\n *\n * \\@publicApi\n */\nclass FormControl extends AbstractControl {\n    /**\n     * Creates a new `FormControl` instance.\n     *\n     * @param {?=} formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(formState = null, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        /**\n         * \\@internal\n         */\n        this._onChange = [];\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param {?} value The new value for the control.\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     * @return {?}\n     */\n    setValue(value, options = {}) {\n        ((/** @type {?} */ (this))).value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((/**\n             * @param {?} changeFn\n             * @return {?}\n             */\n            (changeFn) => changeFn(this.value, options.emitViewToModelChange !== false)));\n        }\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param {?=} formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     * @return {?}\n     */\n    reset(formState = null, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateValue() { }\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    _anyControls(condition) {\n        return false;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    /**\n     * Register a listener for change events.\n     *\n     * @param {?} fn The method that is called when the value changes\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _clearChangeFns() {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param {?} fn The method that is called when the disabled status changes.\n     * @return {?}\n     */\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    _forEachChild(cb) { }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @param {?} formState\n     * @return {?}\n     */\n    _applyFormState(formState) {\n        if (this._isBoxedValue(formState)) {\n            ((/** @type {?} */ (this))).value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            ((/** @type {?} */ (this))).value = this._pendingValue = formState;\n        }\n    }\n}\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormControl.prototype._onChange;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormControl.prototype._pendingValue;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormControl.prototype._pendingChange;\n}\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * \\@usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * \\@publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param {?} controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {\\@link FormGroup#addControl addControl} instead.\n     *\n     * @param {?} name The control name to register in the collection\n     * @param {?} control Provides the control for the given name\n     * @return {?}\n     */\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    /**\n     * Add a control to this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param {?} name The control name to add to the collection\n     * @param {?} control Provides the control for the given name\n     * @return {?}\n     */\n    addControl(name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group.\n     *\n     * @param {?} name The control name to remove from the collection\n     * @return {?}\n     */\n    removeControl(name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange((/**\n             * @return {?}\n             */\n            () => { }));\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param {?} name The control name to replace in the collection\n     * @param {?} control Provides the control for the given name\n     * @return {?}\n     */\n    setControl(name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange((/**\n             * @return {?}\n             */\n            () => { }));\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {\\@link AbstractControl#get get} instead.\n     *\n     * @param {?} controlName The control name to check for existence in the collection\n     *\n     * @return {?} false for disabled controls, true otherwise.\n     */\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * \\@usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param {?} value The new value for the control that matches the structure of the group.\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach((/**\n         * @param {?} name\n         * @return {?}\n         */\n        name => {\n            this._throwIfControlMissing(name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        }));\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * \\@usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param {?} value The object that matches the structure of the group.\n     * @param {?=} options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    patchValue(value, options = {}) {\n        Object.keys(value).forEach((/**\n         * @param {?} name\n         * @return {?}\n         */\n        name => {\n            if (this.controls[name]) {\n                this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        }));\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants are marked `pristine` and `untouched`, and\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * \\@usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @return {?}\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        }));\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     * @return {?}\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (/**\n         * @param {?} acc\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (acc, control, name) => {\n            acc[name] = control instanceof FormControl ? control.value : ((/** @type {?} */ (control))).getRawValue();\n            return acc;\n        }));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _syncPendingControls() {\n        /** @type {?} */\n        let subtreeUpdated = this._reduceChildren(false, (/**\n         * @param {?} updated\n         * @param {?} child\n         * @return {?}\n         */\n        (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }));\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    _throwIfControlMissing(name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(`\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.controls[name]) {\n            throw new Error(`Cannot find form control with name: ${name}.`);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach((/**\n         * @param {?} k\n         * @return {?}\n         */\n        k => cb(this.controls[k], k)));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _setUpControls() {\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        }));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateValue() {\n        ((/** @type {?} */ (this))).value = this._reduceValue();\n    }\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    _anyControls(condition) {\n        /** @type {?} */\n        let res = false;\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (control, name) => {\n            res = res || (this.contains(name) && condition(control));\n        }));\n        return res;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _reduceValue() {\n        return this._reduceChildren({}, (/**\n         * @param {?} acc\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        }));\n    }\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    _reduceChildren(initValue, fn) {\n        /** @type {?} */\n        let res = initValue;\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (control, name) => {\n            res = fn(res, control, name);\n        }));\n        return res;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} name\n         * @return {?}\n         */\n        (control, name) => {\n            if (value[name] === undefined) {\n                throw new Error(`Must supply a value for form control with name: '${name}'.`);\n            }\n        }));\n    }\n}\nif (false) {\n    /** @type {?} */\n    FormGroup.prototype.controls;\n}\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * \\@usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * \\@publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param {?} controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param {?} index Index in the array to retrieve the control\n     * @return {?}\n     */\n    at(index) {\n        return this.controls[index];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param {?} control Form control to be inserted\n     * @return {?}\n     */\n    push(control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param {?} index Index in the array to insert the control\n     * @param {?} control Form control to be inserted\n     * @return {?}\n     */\n    insert(index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param {?} index Index in the array to remove the control\n     * @return {?}\n     */\n    removeAt(index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange((/**\n             * @return {?}\n             */\n            () => { }));\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param {?} index Index in the array to replace the control\n     * @param {?} control The `AbstractControl` control to replace the existing control\n     * @return {?}\n     */\n    setControl(index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange((/**\n             * @return {?}\n             */\n            () => { }));\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     * @return {?}\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * \\@usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param {?} value Array of values for the controls\n     * @param {?=} options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        value.forEach((/**\n         * @param {?} newValue\n         * @param {?} index\n         * @return {?}\n         */\n        (newValue, index) => {\n            this._throwIfControlMissing(index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        }));\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * \\@usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param {?} value Array of latest values for the controls\n     * @param {?=} options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    patchValue(value, options = {}) {\n        value.forEach((/**\n         * @param {?} newValue\n         * @param {?} index\n         * @return {?}\n         */\n        (newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        }));\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * \\@usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param {?=} value Array of values for the controls\n     * @param {?=} options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} index\n         * @return {?}\n         */\n        (control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        }));\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    getRawValue() {\n        return this.controls.map((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => {\n            return control instanceof FormControl ? control.value : ((/** @type {?} */ (control))).getRawValue();\n        }));\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * \\@usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     * @return {?}\n     */\n    clear() {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control._registerOnCollectionChange((/**\n         * @return {?}\n         */\n        () => { }))));\n        this.controls.splice(0);\n        this.updateValueAndValidity();\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _syncPendingControls() {\n        /** @type {?} */\n        let subtreeUpdated = this.controls.reduce((/**\n         * @param {?} updated\n         * @param {?} child\n         * @return {?}\n         */\n        (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }), false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    _throwIfControlMissing(index) {\n        if (!this.controls.length) {\n            throw new Error(`\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.at(index)) {\n            throw new Error(`Cannot find form control at index ${index}`);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    _forEachChild(cb) {\n        this.controls.forEach((/**\n         * @param {?} control\n         * @param {?} index\n         * @return {?}\n         */\n        (control, index) => {\n            cb(control, index);\n        }));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateValue() {\n        ((/** @type {?} */ (this))).value =\n            this.controls.filter((/**\n             * @param {?} control\n             * @return {?}\n             */\n            (control) => control.enabled || this.disabled))\n                .map((/**\n             * @param {?} control\n             * @return {?}\n             */\n            (control) => control.value));\n    }\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    _anyControls(condition) {\n        return this.controls.some((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => control.enabled && condition(control)));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _setUpControls() {\n        this._forEachChild((/**\n         * @param {?} control\n         * @return {?}\n         */\n        (control) => this._registerControl(control)));\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((/**\n         * @param {?} control\n         * @param {?} i\n         * @return {?}\n         */\n        (control, i) => {\n            if (value[i] === undefined) {\n                throw new Error(`Must supply a value for form control at index: ${i}.`);\n            }\n        }));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    /**\n     * @private\n     * @param {?} control\n     * @return {?}\n     */\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FormArray.prototype.controls;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_form.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgForm))\n};\nconst ɵ0 = /**\n * @return {?}\n */\n() => Promise.resolve(null);\n/** @type {?} */\nconst resolvedPromise = ((ɵ0))();\n/**\n * \\@description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * \\@usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgForm extends ControlContainer {\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(validators, asyncValidators) {\n        super();\n        /**\n         * \\@description\n         * Returns whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        this._directives = [];\n        /**\n         * \\@description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /**\n     * \\@description\n     * Lifecycle method called after the view is initialized. For internal use only.\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * \\@description\n     * The directive instance.\n     * @return {?}\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * \\@description\n     * The internal `FormGroup` instance.\n     * @return {?}\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * \\@description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     * @return {?}\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * \\@description\n     * Returns a map of the controls in this group.\n     * @return {?}\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * \\@description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param {?} dir The `NgModel` directive instance.\n     * @return {?}\n     */\n    addControl(dir) {\n        resolvedPromise.then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            ((/** @type {?} */ (dir))).control =\n                (/** @type {?} */ (container.registerControl(dir.name, dir.control)));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.push(dir);\n        }));\n    }\n    /**\n     * \\@description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param {?} dir The `NgModel` directive instance.\n     * @return {?}\n     */\n    getControl(dir) {\n        return (/** @type {?} */ (this.form.get(dir.path)));\n    }\n    /**\n     * \\@description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param {?} dir The `NgModel` directive instance.\n     * @return {?}\n     */\n    removeControl(dir) {\n        resolvedPromise.then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeDir(this._directives, dir);\n        }));\n    }\n    /**\n     * \\@description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param {?} dir The `NgModelGroup` directive instance.\n     * @return {?}\n     */\n    addFormGroup(dir) {\n        resolvedPromise.then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            /** @type {?} */\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        }));\n    }\n    /**\n     * \\@description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param {?} dir The `NgModelGroup` directive instance.\n     * @return {?}\n     */\n    removeFormGroup(dir) {\n        resolvedPromise.then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        }));\n    }\n    /**\n     * \\@description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param {?} dir The `NgModelGroup` directive instance.\n     * @return {?}\n     */\n    getFormGroup(dir) {\n        return (/** @type {?} */ (this.form.get(dir.path)));\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param {?} dir The `NgControl` directive instance.\n     * @param {?} value The new value for the directive's control.\n     * @return {?}\n     */\n    updateModel(dir, value) {\n        resolvedPromise.then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const ctrl = (/** @type {?} */ (this.form.get((/** @type {?} */ (dir.path)))));\n            ctrl.setValue(value);\n        }));\n    }\n    /**\n     * \\@description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param {?} value The new value\n     * @return {?}\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * \\@description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param {?} $event The \"submit\" event object\n     * @return {?}\n     */\n    onSubmit($event) {\n        ((/** @type {?} */ (this))).submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * \\@description\n     * Method called when the \"reset\" event is triggered on the form.\n     * @return {?}\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * \\@description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param {?=} value The new value for the form.\n     * @return {?}\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        ((/** @type {?} */ (this))).submitted = false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    _findContainer(path) {\n        path.pop();\n        return path.length ? (/** @type {?} */ (this.form.get(path))) : this.form;\n    }\n}\nNgForm.ɵfac = function NgForm_Factory(t) { return new (t || NgForm)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgForm.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgForm, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]], hostBindings: function NgForm_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function NgForm_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nNgForm.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgForm.propDecorators = {\n    options: [{ type: Input, args: ['ngFormOptions',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgForm, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { options: [{\n            type: Input,\n            args: ['ngFormOptions']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Returns whether the form submission has been triggered.\n     * @type {?}\n     */\n    NgForm.prototype.submitted;\n    /**\n     * @type {?}\n     * @private\n     */\n    NgForm.prototype._directives;\n    /**\n     * \\@description\n     * The `FormGroup` instance created for this form.\n     * @type {?}\n     */\n    NgForm.prototype.form;\n    /**\n     * \\@description\n     * Event emitter for the \"ngSubmit\" event\n     * @type {?}\n     */\n    NgForm.prototype.ngSubmit;\n    /**\n     * \\@description\n     * Tracks options for the `NgForm` instance.\n     *\n     * **updateOn**: Sets the default `updateOn` value for all child `NgModels` below it\n     * unless explicitly set by a child `NgModel` using `ngModelOptions`). Defaults to 'change'.\n     * Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     * @type {?}\n     */\n    NgForm.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/abstract_form_group_directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * \\@publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /**\n     * \\@description\n     * An internal callback method triggered on the instance after the inputs are set.\n     * Registers the group with its parent group.\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkParentType();\n        (/** @type {?} */ (this.formDirective)).addFormGroup(this);\n    }\n    /**\n     * \\@description\n     * An internal callback method triggered before the instance is destroyed.\n     * Removes the group from its parent group.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * \\@description\n     * The `FormGroup` bound to this directive.\n     * @return {?}\n     */\n    get control() {\n        return (/** @type {?} */ (this.formDirective)).getFormGroup(this);\n    }\n    /**\n     * \\@description\n     * The path to this group from the top-level directive.\n     * @return {?}\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * \\@description\n     * The top-level directive for this group if present, otherwise null.\n     * @return {?}\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * \\@description\n     * The synchronous validators registered with this group.\n     * @return {?}\n     */\n    get validator() {\n        return composeValidators(this._validators);\n    }\n    /**\n     * \\@description\n     * The async validators registered with this group.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _checkParentType() { }\n}\nAbstractFormGroupDirective.ɵfac = function AbstractFormGroupDirective_Factory(t) { return ɵAbstractFormGroupDirective_BaseFactory(t || AbstractFormGroupDirective); };\nAbstractFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractFormGroupDirective, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵAbstractFormGroupDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(AbstractFormGroupDirective);\nif (false) {\n    /**\n     * \\@description\n     * The parent control for the group\n     *\n     * \\@internal\n     * @type {?}\n     */\n    AbstractFormGroupDirective.prototype._parent;\n    /**\n     * \\@description\n     * An array of synchronous validators for the group\n     *\n     * \\@internal\n     * @type {?}\n     */\n    AbstractFormGroupDirective.prototype._validators;\n    /**\n     * \\@description\n     * An array of async validators for the group\n     *\n     * \\@internal\n     * @type {?}\n     */\n    AbstractFormGroupDirective.prototype._asyncValidators;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/template_driven_errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TemplateDrivenErrors {\n    /**\n     * @return {?}\n     */\n    static modelParentException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${FormErrorExamples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${FormErrorExamples.ngModelWithFormGroup}`);\n    }\n    /**\n     * @return {?}\n     */\n    static formGroupNameException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n    /**\n     * @return {?}\n     */\n    static missingNameException() {\n        throw new Error(`If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n    }\n    /**\n     * @return {?}\n     */\n    static modelGroupParentException() {\n        throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_model_group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgModelGroup))\n};\n/**\n * \\@description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * \\@usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    }\n}\nNgModelGroup.ɵfac = function NgModelGroup_Factory(t) { return new (t || NgModelGroup)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 5), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nNgModelGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModelGroup, selectors: [[\"\", \"ngModelGroup\", \"\"]], inputs: { name: [\"ngModelGroup\", \"name\"] }, exportAs: [\"ngModelGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([modelGroupProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nNgModelGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgModelGroup.propDecorators = {\n    name: [{ type: Input, args: ['ngModelGroup',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModelGroup, [{\n        type: Directive,\n        args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['ngModelGroup']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n     * to a key in the parent `NgForm`.\n     * @type {?}\n     */\n    NgModelGroup.prototype.name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => NgModel))\n};\nconst ɵ0$1 = /**\n * @return {?}\n */\n() => Promise.resolve(null);\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n * @type {?}\n */\nconst resolvedPromise$1 = ((ɵ0$1))();\n/**\n * \\@description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You then access the control using the directive's `control` property, but\n * most properties used (like `valid` and `dirty`) fall through to the control anyway for direct\n * access. See a full list of properties directly available in `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * \\@usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel name attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. The name attribute is\n * used within a custom form component, and the name `\\@Input` property serves a different purpose.\n *\n * ```html\n * <form>\n *   <my-person-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-person-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass NgModel extends NgControl {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    constructor(parent, validators, asyncValidators, valueAccessors) {\n        super();\n        this.control = new FormControl();\n        /**\n         * \\@internal\n         */\n        this._registered = false;\n        /**\n         * \\@description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * \\@description\n     * Lifecycle method called before the directive's instance is destroyed. For internal\n     * use only.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() {\n        return this._parent ? controlPath(this.name, this._parent) : [this.name];\n    }\n    /**\n     * \\@description\n     * The top-level directive for this control if present, otherwise null.\n     * @return {?}\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * \\@description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     * @return {?}\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * \\@description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * \\@description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param {?} newValue The new value emitted by `ngModelChange`.\n     * @return {?}\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setUpStandalone() {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _updateValue(value) {\n        resolvedPromise$1.then((/**\n         * @return {?}\n         */\n        () => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n        }));\n    }\n    /**\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _updateDisabled(changes) {\n        /** @type {?} */\n        const disabledValue = changes['isDisabled'].currentValue;\n        /** @type {?} */\n        const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then((/**\n         * @return {?}\n         */\n        () => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n        }));\n    }\n}\nNgModel.ɵfac = function NgModel_Factory(t) { return new (t || NgModel)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 9), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10)); };\nNgModel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgModel, selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]], inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngModel\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nNgModel.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] }\n];\nNgModel.propDecorators = {\n    name: [{ type: Input }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    options: [{ type: Input, args: ['ngModelOptions',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgModel, [{\n        type: Directive,\n        args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], name: [{\n            type: Input\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }], options: [{\n            type: Input,\n            args: ['ngModelOptions']\n        }] }); })();\nif (false) {\n    /**\n     * \\@nodoc\n     * @type {?}\n     */\n    NgModel.ngAcceptInputType_isDisabled;\n    /** @type {?} */\n    NgModel.prototype.control;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    NgModel.prototype._registered;\n    /**\n     * \\@description\n     * Internal reference to the view model value.\n     * @type {?}\n     */\n    NgModel.prototype.viewModel;\n    /**\n     * \\@description\n     * Tracks the name bound to the directive. The parent form\n     * uses this name as a key to retrieve this control's value.\n     * @type {?}\n     */\n    NgModel.prototype.name;\n    /**\n     * \\@description\n     * Tracks whether the control is disabled.\n     * @type {?}\n     */\n    NgModel.prototype.isDisabled;\n    /**\n     * \\@description\n     * Tracks the value bound to this directive.\n     * @type {?}\n     */\n    NgModel.prototype.model;\n    /**\n     * \\@description\n     * Tracks the configuration options for this `ngModel` instance.\n     *\n     * **name**: An alternative to setting the name attribute on the form control element. See\n     * the [example](api/forms/NgModel#using-ngmodel-on-a-standalone-control) for using `NgModel`\n     * as a standalone control.\n     *\n     * **standalone**: When set to true, the `ngModel` will not register itself with its parent form,\n     * and acts as if it's not in the form. Defaults to false.\n     *\n     * **updateOn**: Defines the event upon which the form control value and validity update.\n     * Defaults to 'change'. Possible values: `'change'` | `'blur'` | `'submit'`.\n     *\n     * @type {?}\n     */\n    NgModel.prototype.options;\n    /**\n     * \\@description\n     * Event emitter for producing the `ngModelChange` event after\n     * the view model updates.\n     * @type {?}\n     */\n    NgModel.prototype.update;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/ng_no_validate_directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@publicApi\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n */\nclass ɵNgNoValidate {\n}\nɵNgNoValidate.ɵfac = function ɵNgNoValidate_Factory(t) { return new (t || ɵNgNoValidate)(); };\nɵNgNoValidate.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ɵNgNoValidate, selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]], hostAttrs: [\"novalidate\", \"\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵNgNoValidate, [{\n        type: Directive,\n        args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/reactive_directives/form_control_directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n * @type {?}\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\n/** @type {?} */\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => FormControlDirective))\n};\n/**\n * \\@description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * \\@usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass FormControlDirective extends NgControl {\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     * @param {?} _ngModelWarningConfig\n     */\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        /**\n         * @deprecated as of v6\n         */\n        this.update = new EventEmitter();\n        /**\n         * \\@description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * \\@internal\n         */\n        this._ngModelWarningSent = false;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * \\@description\n     * Triggers a warning that this input should not be used with reactive forms.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    set isDisabled(isDisabled) {\n        ReactiveErrors.disabledAttrWarning();\n    }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && (/** @type {?} */ (this.valueAccessor)).setDisabledState) {\n                (/** @type {?} */ ((/** @type {?} */ (this.valueAccessor)).setDisabledState))(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * \\@description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     * @return {?}\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * \\@description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * \\@description\n     * The `FormControl` bound to this directive.\n     * @return {?}\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * \\@description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param {?} newValue The new value for the view model.\n     * @return {?}\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n}\nFormControlDirective.ɵfac = function FormControlDirective_Factory(t) { return new (t || FormControlDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlDirective, selectors: [[\"\", \"formControl\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], form: [\"formControl\", \"form\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formControlBinding$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * \\@description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlDirective. Used to support warning config of \"once\".\n *\n * \\@internal\n */\nFormControlDirective._ngModelWarningSentOnce = false;\n/** @nocollapse */\nFormControlDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlDirective.propDecorators = {\n    form: [{ type: Input, args: ['formControl',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlDirective, [{\n        type: Directive,\n        args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], form: [{\n            type: Input,\n            args: ['formControl']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * \\@internal\n     * @type {?}\n     */\n    FormControlDirective._ngModelWarningSentOnce;\n    /**\n     * \\@description\n     * Internal reference to the view model value.\n     * @type {?}\n     */\n    FormControlDirective.prototype.viewModel;\n    /**\n     * \\@description\n     * Tracks the `FormControl` instance bound to the directive.\n     * @type {?}\n     */\n    FormControlDirective.prototype.form;\n    /**\n     * @deprecated as of v6\n     * @type {?}\n     */\n    FormControlDirective.prototype.model;\n    /**\n     * @deprecated as of v6\n     * @type {?}\n     */\n    FormControlDirective.prototype.update;\n    /**\n     * \\@description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n     *\n     * \\@internal\n     * @type {?}\n     */\n    FormControlDirective.prototype._ngModelWarningSent;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormControlDirective.prototype._ngModelWarningConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/reactive_directives/form_group_directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => FormGroupDirective))\n};\n/**\n * \\@description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    /**\n     * @param {?} _validators\n     * @param {?} _asyncValidators\n     */\n    constructor(_validators, _asyncValidators) {\n        super();\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        /**\n         * \\@description\n         * Reports whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        /**\n         * \\@description\n         * Tracks the list of added `FormControlName` instances\n         */\n        this.directives = [];\n        /**\n         * \\@description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        this.form = (/** @type {?} */ (null));\n        /**\n         * \\@description\n         * Emits an event when the form submission has been triggered.\n         */\n        this.ngSubmit = new EventEmitter();\n    }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    }\n    /**\n     * \\@description\n     * Returns this directive's instance.\n     * @return {?}\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * \\@description\n     * Returns the `FormGroup` bound to this directive.\n     * @return {?}\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * \\@description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     * @return {?}\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * \\@description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param {?} dir The `FormControlName` directive instance.\n     * @return {?}\n     */\n    addControl(dir) {\n        /** @type {?} */\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * \\@description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param {?} dir The `FormControlName` directive instance.\n     * @return {?}\n     */\n    getControl(dir) {\n        return (/** @type {?} */ (this.form.get(dir.path)));\n    }\n    /**\n     * \\@description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param {?} dir The `FormControlName` directive instance.\n     * @return {?}\n     */\n    removeControl(dir) {\n        removeDir(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param {?} dir The `FormGroupName` directive instance.\n     * @return {?}\n     */\n    addFormGroup(dir) {\n        /** @type {?} */\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form group.\n     *\n     * @param {?} dir The `FormGroupName` directive instance.\n     * @return {?}\n     */\n    removeFormGroup(dir) { }\n    /**\n     * \\@description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param {?} dir The `FormGroupName` directive instance.\n     * @return {?}\n     */\n    getFormGroup(dir) {\n        return (/** @type {?} */ (this.form.get(dir.path)));\n    }\n    /**\n     * Adds a new `FormArrayName` directive instance to the form.\n     *\n     * @param {?} dir The `FormArrayName` directive instance.\n     * @return {?}\n     */\n    addFormArray(dir) {\n        /** @type {?} */\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * No-op method to remove the form array.\n     *\n     * @param {?} dir The `FormArrayName` directive instance.\n     * @return {?}\n     */\n    removeFormArray(dir) { }\n    /**\n     * \\@description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param {?} dir The `FormArrayName` directive instance.\n     * @return {?}\n     */\n    getFormArray(dir) {\n        return (/** @type {?} */ (this.form.get(dir.path)));\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param {?} dir The `FormControlName` directive instance.\n     * @param {?} value The new value for the directive's control.\n     * @return {?}\n     */\n    updateModel(dir, value) {\n        /** @type {?} */\n        const ctrl = (/** @type {?} */ (this.form.get(dir.path)));\n        ctrl.setValue(value);\n    }\n    /**\n     * \\@description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param {?} $event The \"submit\" event object\n     * @return {?}\n     */\n    onSubmit($event) {\n        ((/** @type {?} */ (this))).submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * \\@description\n     * Method called when the \"reset\" event is triggered on the form.\n     * @return {?}\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * \\@description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param {?=} value The new value for the form.\n     * @return {?}\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        ((/** @type {?} */ (this))).submitted = false;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateDomValue() {\n        this.directives.forEach((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => {\n            /** @type {?} */\n            const newCtrl = this.form.get(dir.path);\n            if (dir.control !== newCtrl) {\n                cleanUpControl(dir.control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                ((/** @type {?} */ (dir))).control = newCtrl;\n            }\n        }));\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange((/**\n         * @return {?}\n         */\n        () => this._updateDomValue()));\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange((/**\n             * @return {?}\n             */\n            () => { }));\n        this._oldForm = this.form;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateValidators() {\n        /** @type {?} */\n        const sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([(/** @type {?} */ (this.form.validator)), (/** @type {?} */ (sync))]);\n        /** @type {?} */\n        const async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([(/** @type {?} */ (this.form.asyncValidator)), (/** @type {?} */ (async))]);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkFormPresent() {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    }\n}\nFormGroupDirective.ɵfac = function FormGroupDirective_Factory(t) { return new (t || FormGroupDirective)(ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupDirective, selectors: [[\"\", \"formGroup\", \"\"]], hostBindings: function FormGroupDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) { return ctx.onSubmit($event); })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() { return ctx.onReset(); });\n    } }, inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, exportAs: [\"ngForm\"], features: [ɵngcc0.ɵɵProvidersFeature([formDirectiveProvider$1]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nFormGroupDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupDirective.propDecorators = {\n    form: [{ type: Input, args: ['formGroup',] }],\n    ngSubmit: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            }]\n    }], function () { return [{ type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { form: [{\n            type: Input,\n            args: ['formGroup']\n        }], ngSubmit: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Reports whether the form submission has been triggered.\n     * @type {?}\n     */\n    FormGroupDirective.prototype.submitted;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormGroupDirective.prototype._oldForm;\n    /**\n     * \\@description\n     * Tracks the list of added `FormControlName` instances\n     * @type {?}\n     */\n    FormGroupDirective.prototype.directives;\n    /**\n     * \\@description\n     * Tracks the `FormGroup` bound to this directive.\n     * @type {?}\n     */\n    FormGroupDirective.prototype.form;\n    /**\n     * \\@description\n     * Emits an event when the form submission has been triggered.\n     * @type {?}\n     */\n    FormGroupDirective.prototype.ngSubmit;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormGroupDirective.prototype._validators;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormGroupDirective.prototype._asyncValidators;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/reactive_directives/form_group_name.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => FormGroupName))\n};\n/**\n * \\@description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` to link, and\n * looks for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * \\@usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the {\\@link AbstractControl#get get} method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the {\\@link AbstractControl#get get} method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    }\n}\nFormGroupName.ɵfac = function FormGroupName_Factory(t) { return new (t || FormGroupName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormGroupName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormGroupName, selectors: [[\"\", \"formGroupName\", \"\"]], inputs: { name: [\"formGroupName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formGroupNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nFormGroupName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupName.propDecorators = {\n    name: [{ type: Input, args: ['formGroupName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormGroupName, [{\n        type: Directive,\n        args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formGroupName']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form groups to be bound\n     * to indices when iterating over groups in a `FormArray`.\n     * @type {?}\n     */\n    FormGroupName.prototype.name;\n}\n/** @type {?} */\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => FormArrayName))\n};\n/**\n * \\@description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass FormArrayName extends ControlContainer {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     *\n     * @throws If the directive does not have a valid parent.\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkParentType();\n        (/** @type {?} */ (this.formDirective)).addFormArray(this);\n    }\n    /**\n     * \\@description\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * \\@description\n     * The `FormArray` bound to this directive.\n     * @return {?}\n     */\n    get control() {\n        return (/** @type {?} */ (this.formDirective)).getFormArray(this);\n    }\n    /**\n     * \\@description\n     * The top-level directive for this group if present, otherwise null.\n     * @return {?}\n     */\n    get formDirective() {\n        return this._parent ? (/** @type {?} */ (this._parent.formDirective)) : null;\n    }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * \\@description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     * @return {?}\n     */\n    get validator() {\n        return composeValidators(this._validators);\n    }\n    /**\n     * \\@description\n     * Async validator function composed of all the async validators registered with this directive.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    }\n}\nFormArrayName.ɵfac = function FormArrayName_Factory(t) { return new (t || FormArrayName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10)); };\nFormArrayName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormArrayName, selectors: [[\"\", \"formArrayName\", \"\"]], inputs: { name: [\"formArrayName\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([formArrayNameProvider]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nFormArrayName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormArrayName.propDecorators = {\n    name: [{ type: Input, args: ['formArrayName',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormArrayName, [{\n        type: Directive,\n        args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['formArrayName']\n        }] }); })();\nif (false) {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormArrayName.prototype._parent;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormArrayName.prototype._validators;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    FormArrayName.prototype._asyncValidators;\n    /**\n     * \\@description\n     * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form arrays to be bound\n     * to indices when iterating over arrays in a `FormArray`.\n     * @type {?}\n     */\n    FormArrayName.prototype.name;\n}\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/reactive_directives/form_control_name.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => FormControlName))\n};\n/**\n * \\@description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * \\@usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass FormControlName extends NgControl {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     * @param {?} _ngModelWarningConfig\n     */\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /**\n         * @deprecated as of v6\n         */\n        this.update = new EventEmitter();\n        /**\n         * \\@description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * \\@internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * \\@description\n     * Triggers a warning that this input should not be used with reactive forms.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    set isDisabled(isDisabled) {\n        ReactiveErrors.disabledAttrWarning();\n    }\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /**\n     * \\@description\n     * Lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * \\@description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param {?} newValue The new value for the view model.\n     * @return {?}\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), (/** @type {?} */ (this._parent)));\n    }\n    /**\n     * \\@description\n     * The top-level directive for this group if present, otherwise null.\n     * @return {?}\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * \\@description\n     * Synchronous validator function composed of all the synchronous validators\n     * registered with this directive.\n     * @return {?}\n     */\n    get validator() {\n        return composeValidators(this._rawValidators);\n    }\n    /**\n     * \\@description\n     * Async validator function composed of all the async validators registered with this\n     * directive.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return (/** @type {?} */ (composeAsyncValidators(this._rawAsyncValidators)));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkParentType() {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _setUpControl() {\n        this._checkParentType();\n        ((/** @type {?} */ (this))).control = this.formDirective.addControl(this);\n        if (this.control.disabled && (/** @type {?} */ (this.valueAccessor)).setDisabledState) {\n            (/** @type {?} */ ((/** @type {?} */ (this.valueAccessor)).setDisabledState))(true);\n        }\n        this._added = true;\n    }\n}\nFormControlName.ɵfac = function FormControlName_Factory(t) { return new (t || FormControlName)(ɵngcc0.ɵɵdirectiveInject(ControlContainer, 13), ɵngcc0.ɵɵdirectiveInject(NG_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), ɵngcc0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8)); };\nFormControlName.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FormControlName, selectors: [[\"\", \"formControlName\", \"\"]], inputs: { isDisabled: [\"disabled\", \"isDisabled\"], name: [\"formControlName\", \"name\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([controlNameBinding]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/**\n * \\@description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlName. Used to support warning config of \"once\".\n *\n * \\@internal\n */\nFormControlName._ngModelWarningSentOnce = false;\n/** @nocollapse */\nFormControlName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlName.propDecorators = {\n    name: [{ type: Input, args: ['formControlName',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormControlName, [{\n        type: Directive,\n        args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n    }], function () { return [{ type: ControlContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: SkipSelf\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_ASYNC_VALIDATORS]\n            }] }, { type: Array, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [NG_VALUE_ACCESSOR]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n            }] }]; }, { update: [{\n            type: Output,\n            args: ['ngModelChange']\n        }], isDisabled: [{\n            type: Input,\n            args: ['disabled']\n        }], name: [{\n            type: Input,\n            args: ['formControlName']\n        }], model: [{\n            type: Input,\n            args: ['ngModel']\n        }] }); })();\nif (false) {\n    /**\n     * \\@description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * \\@internal\n     * @type {?}\n     */\n    FormControlName._ngModelWarningSentOnce;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormControlName.prototype._added;\n    /**\n     * \\@description\n     * Internal reference to the view model value.\n     * \\@internal\n     * @type {?}\n     */\n    FormControlName.prototype.viewModel;\n    /**\n     * \\@description\n     * Tracks the `FormControl` instance bound to the directive.\n     * @type {?}\n     */\n    FormControlName.prototype.control;\n    /**\n     * \\@description\n     * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n     * to a key in the parent `FormGroup` or `FormArray`.\n     * Accepts a name as a string or a number.\n     * The name in the form of a string is useful for individual forms,\n     * while the numerical form allows for form controls to be bound\n     * to indices when iterating over controls in a `FormArray`.\n     * @type {?}\n     */\n    FormControlName.prototype.name;\n    /**\n     * @deprecated as of v6\n     * @type {?}\n     */\n    FormControlName.prototype.model;\n    /**\n     * @deprecated as of v6\n     * @type {?}\n     */\n    FormControlName.prototype.update;\n    /**\n     * \\@description\n     * Instance property used to track whether an ngModel warning has been sent out for this\n     * particular FormControlName instance. Used to support warning config of \"always\".\n     *\n     * \\@internal\n     * @type {?}\n     */\n    FormControlName.prototype._ngModelWarningSent;\n    /**\n     * @type {?}\n     * @private\n     */\n    FormControlName.prototype._ngModelWarningConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives/validators.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * An interface implemented by classes that perform synchronous validation.\n *\n * \\@usageNotes\n *\n * ### Provide a custom validator\n *\n * The following example implements the `Validator` interface to create a\n * validator directive with a custom error key.\n *\n * ```typescript\n * \\@Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors|null {\n *     return {'custom': true};\n *   }\n * }\n * ```\n *\n * \\@publicApi\n * @record\n */\nfunction Validator() { }\nif (false) {\n    /**\n     * \\@description\n     * Method that performs synchronous validation against the provided control.\n     *\n     * @param {?} control The control to validate against.\n     *\n     * @return {?} A map of validation errors if validation fails,\n     * otherwise null.\n     */\n    Validator.prototype.validate = function (control) { };\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    Validator.prototype.registerOnValidatorChange = function (fn) { };\n}\n/**\n * \\@description\n * An interface implemented by classes that perform asynchronous validation.\n *\n * \\@usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * import { of } from 'rxjs';\n *\n * \\@Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Observable<ValidationErrors|null> {\n *     return of({'custom': true});\n *   }\n * }\n * ```\n *\n * \\@publicApi\n * @record\n */\nfunction AsyncValidator() { }\nif (false) {\n    /**\n     * \\@description\n     * Method that performs async validation against the provided control.\n     *\n     * @param {?} control The control to validate against.\n     *\n     * @return {?} A promise or observable that resolves a map of validation errors\n     * if validation fails, otherwise null.\n     */\n    AsyncValidator.prototype.validate = function (control) { };\n}\n/**\n * \\@description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => RequiredValidator)),\n    multi: true\n};\n/**\n * \\@description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => CheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * \\@description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n * \\@publicApi\n */\nclass RequiredValidator {\n    /**\n     * \\@description\n     * Tracks changes to the required attribute bound to this directive.\n     * @return {?}\n     */\n    get required() {\n        return this._required;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = value != null && value !== false && `${value}` !== 'false';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * \\@description\n     * Method that validates whether the control is empty.\n     * Returns the validation result if enabled, otherwise null.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.required ? Validators.required(control) : null;\n    }\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nRequiredValidator.ɵfac = function RequiredValidator_Factory(t) { return new (t || RequiredValidator)(); };\nRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RequiredValidator, selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]], hostVars: 1, hostBindings: function RequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, inputs: { required: \"required\" }, features: [ɵngcc0.ɵɵProvidersFeature([REQUIRED_VALIDATOR])] });\nRequiredValidator.propDecorators = {\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, { required: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RequiredValidator.prototype._required;\n    /**\n     * @type {?}\n     * @private\n     */\n    RequiredValidator.prototype._onChange;\n}\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@publicApi\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    /**\n     * \\@description\n     * Method that validates whether or not the checkbox has been checked.\n     * Returns the validation result if enabled, otherwise null.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.required ? Validators.requiredTrue(control) : null;\n    }\n}\nCheckboxRequiredValidator.ɵfac = function CheckboxRequiredValidator_Factory(t) { return ɵCheckboxRequiredValidator_BaseFactory(t || CheckboxRequiredValidator); };\nCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CheckboxRequiredValidator, selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"required\", ctx.required ? \"\" : null);\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            }]\n    }], null, null); })();\n/**\n * \\@description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => EmailValidator)),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@publicApi\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass EmailValidator {\n    /**\n     * \\@description\n     * Tracks changes to the email attribute bound to this directive.\n     * @param {?} value\n     * @return {?}\n     */\n    set email(value) {\n        this._enabled = value === '' || value === true || value === 'true';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * \\@description\n     * Method that validates whether an email address is valid.\n     * Returns the validation result if enabled, otherwise null.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this._enabled ? Validators.email(control) : null;\n    }\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n}\nEmailValidator.ɵfac = function EmailValidator_Factory(t) { return new (t || EmailValidator)(); };\nEmailValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: EmailValidator, selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]], inputs: { email: \"email\" }, features: [ɵngcc0.ɵɵProvidersFeature([EMAIL_VALIDATOR])] });\nEmailValidator.propDecorators = {\n    email: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(EmailValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            }]\n    }], null, { email: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    EmailValidator.prototype._enabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    EmailValidator.prototype._onChange;\n}\n/**\n * \\@description\n * A function that receives a control and synchronously returns a map of\n * validation errors if present, otherwise null.\n *\n * \\@publicApi\n * @record\n */\nfunction ValidatorFn() { }\n/**\n * \\@description\n * A function that receives a control and returns a Promise or observable\n * that emits validation errors if present, otherwise null.\n *\n * \\@publicApi\n * @record\n */\nfunction AsyncValidatorFn() { }\n/**\n * \\@description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MinLengthValidator)),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass MinLengthValidator {\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * \\@description\n     * Method that validates whether the value meets a minimum length\n     * requirement. Returns the validation result if enabled, otherwise null.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.minlength == null ? null : this._validator(control);\n    }\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createValidator() {\n        this._validator = Validators.minLength(typeof this.minlength === 'number' ? this.minlength : parseInt(this.minlength, 10));\n    }\n}\nMinLengthValidator.ɵfac = function MinLengthValidator_Factory(t) { return new (t || MinLengthValidator)(); };\nMinLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MinLengthValidator, selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MinLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"minlength\", ctx.minlength ? ctx.minlength : null);\n    } }, inputs: { minlength: \"minlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMinLengthValidator.propDecorators = {\n    minlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MinLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            }]\n    }], null, { minlength: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MinLengthValidator.prototype._validator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MinLengthValidator.prototype._onChange;\n    /**\n     * \\@description\n     * Tracks changes to the the minimum length bound to this directive.\n     * @type {?}\n     */\n    MinLengthValidator.prototype.minlength;\n}\n/**\n * \\@description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MaxLengthValidator)),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass MaxLengthValidator {\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * \\@description\n     * Method that validates whether the value exceeds\n     * the maximum length requirement.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.maxlength != null ? this._validator(control) : null;\n    }\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createValidator() {\n        this._validator = Validators.maxLength(typeof this.maxlength === 'number' ? this.maxlength : parseInt(this.maxlength, 10));\n    }\n}\nMaxLengthValidator.ɵfac = function MaxLengthValidator_Factory(t) { return new (t || MaxLengthValidator)(); };\nMaxLengthValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MaxLengthValidator, selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"maxlength\", ctx.maxlength ? ctx.maxlength : null);\n    } }, inputs: { maxlength: \"maxlength\" }, features: [ɵngcc0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nMaxLengthValidator.propDecorators = {\n    maxlength: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MaxLengthValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            }]\n    }], null, { maxlength: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MaxLengthValidator.prototype._validator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MaxLengthValidator.prototype._onChange;\n    /**\n     * \\@description\n     * Tracks changes to the the maximum length bound to this directive.\n     * @type {?}\n     */\n    MaxLengthValidator.prototype.maxlength;\n}\n/**\n * \\@description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n * @type {?}\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => PatternValidator)),\n    multi: true\n};\n/**\n * \\@description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * \\@usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n * \\@publicApi\n */\nclass PatternValidator {\n    /**\n     * \\@description\n     * A lifecycle method called when the directive's inputs change. For internal use\n     * only.\n     *\n     * @param {?} changes A object of key/value pairs for the set of changed inputs.\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * \\@description\n     * Method that validates whether the value matches the\n     * the pattern requirement.\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this._validator(control);\n    }\n    /**\n     * \\@description\n     * Registers a callback function to call when the validator inputs change.\n     *\n     * @param {?} fn The callback function\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createValidator() {\n        this._validator = Validators.pattern(this.pattern);\n    }\n}\nPatternValidator.ɵfac = function PatternValidator_Factory(t) { return new (t || PatternValidator)(); };\nPatternValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PatternValidator, selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]], hostVars: 1, hostBindings: function PatternValidator_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"pattern\", ctx.pattern ? ctx.pattern : null);\n    } }, inputs: { pattern: \"pattern\" }, features: [ɵngcc0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\nPatternValidator.propDecorators = {\n    pattern: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PatternValidator, [{\n        type: Directive,\n        args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            }]\n    }], null, { pattern: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PatternValidator.prototype._validator;\n    /**\n     * @type {?}\n     * @private\n     */\n    PatternValidator.prototype._onChange;\n    /**\n     * \\@description\n     * Tracks changes to the pattern bound to this directive.\n     * @type {?}\n     */\n    PatternValidator.prototype.pattern;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\n/** @type {?} */\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n/** @type {?} */\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n}\nɵInternalFormsSharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ɵInternalFormsSharedModule });\nɵInternalFormsSharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ɵInternalFormsSharedModule_Factory(t) { return new (t || ɵInternalFormsSharedModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ɵInternalFormsSharedModule, { declarations: [ɵNgNoValidate,\n        NgSelectOption,\n        ɵNgSelectMultipleOption,\n        DefaultValueAccessor,\n        NumberValueAccessor,\n        RangeValueAccessor,\n        CheckboxControlValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n        NgControlStatus,\n        NgControlStatusGroup,\n        RequiredValidator,\n        MinLengthValidator,\n        MaxLengthValidator,\n        PatternValidator,\n        CheckboxRequiredValidator,\n        EmailValidator], exports: [ɵNgNoValidate,\n        NgSelectOption,\n        ɵNgSelectMultipleOption,\n        DefaultValueAccessor,\n        NumberValueAccessor,\n        RangeValueAccessor,\n        CheckboxControlValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n        NgControlStatus,\n        NgControlStatusGroup,\n        RequiredValidator,\n        MinLengthValidator,\n        MaxLengthValidator,\n        PatternValidator,\n        CheckboxRequiredValidator,\n        EmailValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ɵInternalFormsSharedModule, [{\n        type: NgModule,\n        args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/form_builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} options\n * @return {?}\n */\nfunction isAbstractControlOptions(options) {\n    return ((/** @type {?} */ (options))).asyncValidators !== undefined ||\n        ((/** @type {?} */ (options))).validators !== undefined ||\n        ((/** @type {?} */ (options))).updateOn !== undefined;\n}\n/**\n * \\@description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n * \\@publicApi\n */\nclass FormBuilder {\n    /**\n     * \\@description\n     * Construct a new `FormGroup` instance.\n     *\n     * @param {?} controlsConfig A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param {?=} options Configuration options object for the `FormGroup`. The object can\n     * have two shapes:\n     *\n     * 1) `AbstractControlOptions` object (preferred), which consists of:\n     * * `validators`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidators`: A single async validator or array of async validator functions\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur' |\n     * submit')\n     *\n     * 2) Legacy configuration object, which consists of:\n     * * `validator`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidator`: A single async validator or array of async validator functions\n     *\n     * @return {?}\n     */\n    group(controlsConfig, options = null) {\n        /** @type {?} */\n        const controls = this._reduceControls(controlsConfig);\n        /** @type {?} */\n        let validators = null;\n        /** @type {?} */\n        let asyncValidators = null;\n        /** @type {?} */\n        let updateOn = undefined;\n        if (options != null) {\n            if (isAbstractControlOptions(options)) {\n                // `options` are `AbstractControlOptions`\n                validators = options.validators != null ? options.validators : null;\n                asyncValidators = options.asyncValidators != null ? options.asyncValidators : null;\n                updateOn = options.updateOn != null ? options.updateOn : undefined;\n            }\n            else {\n                // `options` are legacy form group options\n                validators = options['validator'] != null ? options['validator'] : null;\n                asyncValidators = options['asyncValidator'] != null ? options['asyncValidator'] : null;\n            }\n        }\n        return new FormGroup(controls, { asyncValidators, updateOn, validators });\n    }\n    /**\n     * \\@description\n     * Construct a new `FormControl` with the given state, validators and options.\n     *\n     * \\@usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     * @param {?} formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @return {?}\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options.\n     *\n     * @param {?} controlsConfig An array of child controls or control configs. Each\n     * child control is given an index when it is registered.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator\n     * functions.\n     * @return {?}\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        /** @type {?} */\n        const controls = controlsConfig.map((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => this._createControl(c)));\n        return new FormArray(controls, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    _reduceControls(controlsConfig) {\n        /** @type {?} */\n        const controls = {};\n        Object.keys(controlsConfig).forEach((/**\n         * @param {?} controlName\n         * @return {?}\n         */\n        controlName => {\n            controls[controlName] = this._createControl(controlsConfig[controlName]);\n        }));\n        return controls;\n    }\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    _createControl(controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            /** @type {?} */\n            const value = controlConfig[0];\n            /** @type {?} */\n            const validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            /** @type {?} */\n            const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    }\n}\nFormBuilder.ɵfac = function FormBuilder_Factory(t) { return new (t || FormBuilder)(); };\nFormBuilder.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FormBuilder, factory: FormBuilder.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormBuilder, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@publicApi\n * @type {?}\n */\nconst VERSION = new Version('9.1.7');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/form_providers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * \\@publicApi\n */\nclass FormsModule {\n}\nFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FormsModule });\nFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FormsModule_Factory(t) { return new (t || FormsModule)(); }, providers: [RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormsModule, { declarations: [NgModel,\n        NgModelGroup,\n        NgForm], exports: [ɵInternalFormsSharedModule,\n        NgModel,\n        NgModelGroup,\n        NgForm] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * \\@publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * \\@description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param {?} opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * @return {?}\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                { provide: NG_MODEL_WITH_FORM_CONTROL_WARNING, useValue: opts.warnOnNgModelWithFormControl }\n            ]\n        };\n    }\n}\nReactiveFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ReactiveFormsModule });\nReactiveFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ReactiveFormsModule_Factory(t) { return new (t || ReactiveFormsModule)(); }, providers: [FormBuilder, RadioControlRegistry], imports: [ɵInternalFormsSharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ReactiveFormsModule, { declarations: [FormControlDirective,\n        FormGroupDirective,\n        FormControlName,\n        FormGroupName,\n        FormArrayName], exports: [ɵInternalFormsSharedModule,\n        FormControlDirective,\n        FormGroupDirective,\n        FormControlName,\n        FormGroupName,\n        FormArrayName] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ReactiveFormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/src/forms.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: packages/forms/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormsModule, MaxLengthValidator, MinLengthValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, VERSION, Validators, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption, SHARED_FORM_DIRECTIVES as ɵangular_packages_forms_forms_a, TEMPLATE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_b, CHECKBOX_REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_ba, EMAIL_VALIDATOR as ɵangular_packages_forms_forms_bb, MIN_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bc, MAX_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_bd, PATTERN_VALIDATOR as ɵangular_packages_forms_forms_be, REACTIVE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_c, ɵInternalFormsSharedModule as ɵangular_packages_forms_forms_d, CHECKBOX_VALUE_ACCESSOR as ɵangular_packages_forms_forms_e, DEFAULT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_f, AbstractControlStatus as ɵangular_packages_forms_forms_g, ngControlStatusHost as ɵangular_packages_forms_forms_h, formDirectiveProvider as ɵangular_packages_forms_forms_i, formControlBinding as ɵangular_packages_forms_forms_j, modelGroupProvider as ɵangular_packages_forms_forms_k, NUMBER_VALUE_ACCESSOR as ɵangular_packages_forms_forms_l, RADIO_VALUE_ACCESSOR as ɵangular_packages_forms_forms_m, RadioControlRegistry as ɵangular_packages_forms_forms_n, RANGE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_o, NG_MODEL_WITH_FORM_CONTROL_WARNING as ɵangular_packages_forms_forms_p, formControlBinding$1 as ɵangular_packages_forms_forms_q, controlNameBinding as ɵangular_packages_forms_forms_r, formDirectiveProvider$1 as ɵangular_packages_forms_forms_s, formGroupNameProvider as ɵangular_packages_forms_forms_t, formArrayNameProvider as ɵangular_packages_forms_forms_u, SELECT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_v, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_w, ɵNgSelectMultipleOption as ɵangular_packages_forms_forms_x, ɵNgNoValidate as ɵangular_packages_forms_forms_y, REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_z };\n\n//# sourceMappingURL=forms.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatButtonBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 3, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the button is round.\n     * @type {?}\n     */\n    MatButton.prototype.isRoundButton;\n    /**\n     * Whether the button is icon button.\n     * @type {?}\n     */\n    MatButton.prototype.isIconButton;\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @type {?}\n     */\n    MatButton.prototype.ripple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButton.prototype._focusMonitor;\n    /** @type {?} */\n    MatButton.prototype._animationMode;\n}\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tabindex of the button.\n     * @type {?}\n     */\n    MatAnchor.prototype.tabIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton,\n        MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton,\n        MatAnchor,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\", [[\"mat-card-footer\"]]];\nconst _c1 = [\"*\", \"mat-card-footer\"];\nconst _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nconst _c5 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\nclass MatCardContent {\n}\nMatCardContent.ɵfac = function MatCardContent_Factory(t) { return new (t || MatCardContent)(); };\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardContent, selectors: [[\"mat-card-content\"], [\"\", \"mat-card-content\", \"\"], [\"\", \"matCardContent\", \"\"]], hostAttrs: [1, \"mat-card-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                host: { 'class': 'mat-card-content' }\n            }]\n    }], null, null); })();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardTitle {\n}\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) { return new (t || MatCardTitle)(); };\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardTitle, selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]], hostAttrs: [1, \"mat-card-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n                host: {\n                    'class': 'mat-card-title'\n                }\n            }]\n    }], null, null); })();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardSubtitle {\n}\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) { return new (t || MatCardSubtitle)(); };\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSubtitle, selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], hostAttrs: [1, \"mat-card-subtitle\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n        type: Directive,\n        args: [{\n                selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n                host: {\n                    'class': 'mat-card-subtitle'\n                }\n            }]\n    }], null, null); })();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardActions {\n    constructor() {\n        /**\n         * Position of the actions inside the card.\n         */\n        this.align = 'start';\n    }\n}\nMatCardActions.ɵfac = function MatCardActions_Factory(t) { return new (t || MatCardActions)(); };\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardActions, selectors: [[\"mat-card-actions\"]], hostAttrs: [1, \"mat-card-actions\"], hostVars: 2, hostBindings: function MatCardActions_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    } }, inputs: { align: \"align\" }, exportAs: [\"matCardActions\"] });\nMatCardActions.propDecorators = {\n    align: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-actions',\n                exportAs: 'matCardActions',\n                host: {\n                    'class': 'mat-card-actions',\n                    '[class.mat-card-actions-align-end]': 'align === \"end\"'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Position of the actions inside the card.\n     * @type {?}\n     */\n    MatCardActions.prototype.align;\n}\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nclass MatCardFooter {\n}\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) { return new (t || MatCardFooter)(); };\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardFooter, selectors: [[\"mat-card-footer\"]], hostAttrs: [1, \"mat-card-footer\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-card-footer',\n                host: { 'class': 'mat-card-footer' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardImage {\n}\nMatCardImage.ɵfac = function MatCardImage_Factory(t) { return new (t || MatCardImage)(); };\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardImage, selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]], hostAttrs: [1, \"mat-card-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-image], [matCardImage]',\n                host: { 'class': 'mat-card-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardSmImage {\n}\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) { return new (t || MatCardSmImage)(); };\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardSmImage, selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]], hostAttrs: [1, \"mat-card-sm-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-sm-image], [matCardImageSmall]',\n                host: { 'class': 'mat-card-sm-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardMdImage {\n}\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) { return new (t || MatCardMdImage)(); };\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardMdImage, selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]], hostAttrs: [1, \"mat-card-md-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-md-image], [matCardImageMedium]',\n                host: { 'class': 'mat-card-md-image' }\n            }]\n    }], null, null); })();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardLgImage {\n}\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) { return new (t || MatCardLgImage)(); };\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardLgImage, selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]], hostAttrs: [1, \"mat-card-lg-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-lg-image], [matCardImageLarge]',\n                host: { 'class': 'mat-card-lg-image' }\n            }]\n    }], null, null); })();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardXlImage {\n}\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) { return new (t || MatCardXlImage)(); };\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardXlImage, selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], hostAttrs: [1, \"mat-card-xl-image\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                host: { 'class': 'mat-card-xl-image' }\n            }]\n    }], null, null); })();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nclass MatCardAvatar {\n}\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) { return new (t || MatCardAvatar)(); };\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCardAvatar, selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], hostAttrs: [1, \"mat-card-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-card-avatar], [matCardAvatar]',\n                host: { 'class': 'mat-card-avatar' }\n            }]\n    }], null, null); })();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\nclass MatCard {\n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n    }\n}\nMatCard.ɵfac = function MatCard_Factory(t) { return new (t || MatCard)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCard, selectors: [[\"mat-card\"]], hostAttrs: [1, \"mat-card\", \"mat-focus-indicator\"], hostVars: 2, hostBindings: function MatCard_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, exportAs: [\"matCard\"], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatCard_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCard.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCard, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card',\n                exportAs: 'matCard',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-card mat-focus-indicator',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatCard.prototype._animationMode;\n}\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nclass MatCardHeader {\n}\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) { return new (t || MatCardHeader)(); };\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardHeader, selectors: [[\"mat-card-header\"]], hostAttrs: [1, \"mat-card-header\"], ngContentSelectors: _c3, decls: 4, vars: 0, consts: [[1, \"mat-card-header-text\"]], template: function MatCardHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-header',\n                template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-header' }\n            }]\n    }], null, null); })();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nclass MatCardTitleGroup {\n}\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) { return new (t || MatCardTitleGroup)(); };\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCardTitleGroup, selectors: [[\"mat-card-title-group\"]], hostAttrs: [1, \"mat-card-title-group\"], ngContentSelectors: _c5, decls: 4, vars: 0, template: function MatCardTitleGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n    } }, encapsulation: 2, changeDetection: 0 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-card-title-group',\n                template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'class': 'mat-card-title-group' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/card-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatCardModule {\n}\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCardModule });\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCardModule_Factory(t) { return new (t || MatCardModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, { declarations: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatCard,\n        MatCardHeader,\n        MatCardTitleGroup,\n        MatCardContent,\n        MatCardTitle,\n        MatCardSubtitle,\n        MatCardActions,\n        MatCardFooter,\n        MatCardSmImage,\n        MatCardMdImage,\n        MatCardLgImage,\n        MatCardImage,\n        MatCardXlImage,\n        MatCardAvatar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [\n                    MatCard,\n                    MatCardHeader,\n                    MatCardTitleGroup,\n                    MatCardContent,\n                    MatCardTitle,\n                    MatCardSubtitle,\n                    MatCardActions,\n                    MatCardFooter,\n                    MatCardSmImage,\n                    MatCardMdImage,\n                    MatCardLgImage,\n                    MatCardImage,\n                    MatCardXlImage,\n                    MatCardAvatar,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                    MatCardXlImage, MatCardAvatar,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/card/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n\n//# sourceMappingURL=card.js.map","import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nconst VERSION = new Version('9.2.3');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/animation/animation.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\nif (false) {\n    /** @type {?} */\n    AnimationCurves.STANDARD_CURVE;\n    /** @type {?} */\n    AnimationCurves.DECELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.ACCELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.SHARP_CURVE;\n}\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\nif (false) {\n    /** @type {?} */\n    AnimationDurations.COMPLEX;\n    /** @type {?} */\n    AnimationDurations.ENTERING;\n    /** @type {?} */\n    AnimationDurations.EXITING;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/common-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$1 = new Version('9.2.3');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Object that can be used to configure the sanity checks granularly.\n * @record\n */\nfunction GranularSanityChecks() { }\nif (false) {\n    /** @type {?} */\n    GranularSanityChecks.prototype.doctype;\n    /** @type {?} */\n    GranularSanityChecks.prototype.theme;\n    /** @type {?} */\n    GranularSanityChecks.prototype.version;\n    /**\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    GranularSanityChecks.prototype.hammer;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} highContrastModeDetector\n     * @param {?} sanityChecks\n     * @param {?=} document\n     */\n    constructor(highContrastModeDetector, sanityChecks, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        this._document = document;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        /** @type {?} */\n        const doc = this._document || document;\n        return typeof doc === 'object' && doc ? doc : null;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        /** @type {?} */\n        const win = (doc === null || doc === void 0 ? void 0 : doc.defaultView) || window;\n        return typeof win === 'object' && win ? win : null;\n    }\n    /**\n     * Whether any sanity checks are enabled.\n     * @private\n     * @return {?}\n     */\n    _checksAreEnabled() {\n        return isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._getWindow()));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).doctype);\n        /** @type {?} */\n        const document = this._getDocument();\n        if (isEnabled && document && !document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        /** @type {?} */\n        const isDisabled = !this._checksAreEnabled() ||\n            (this._sanityChecks === false || !((/** @type {?} */ (this._sanityChecks))).theme);\n        /** @type {?} */\n        const document = this._getDocument();\n        if (isDisabled || !document || !document.body ||\n            typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).version);\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8)); }, imports: [[BidiModule],\n        BidiModule] });\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._hasDoneGlobalChecks;\n    /**\n     * Configured sanity checks.\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._sanityChecks;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    MatCommonModule.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disabled.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisable() { }\nif (false) {\n    /**\n     * Whether the component is disabled.\n     * @type {?}\n     */\n    CanDisable.prototype.disabled;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/color.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanColor() { }\nif (false) {\n    /**\n     * Theme color palette for the component.\n     * @type {?}\n     */\n    CanColor.prototype.color;\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasElementRef() { }\nif (false) {\n    /** @type {?} */\n    HasElementRef.prototype._elementRef;\n}\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disable-ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisableRipple() { }\nif (false) {\n    /**\n     * Whether ripples are disabled.\n     * @type {?}\n     */\n    CanDisableRipple.prototype.disableRipple;\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/tabindex.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction HasTabIndex() { }\nif (false) {\n    /**\n     * Tabindex of the component.\n     * @type {?}\n     */\n    HasTabIndex.prototype.tabIndex;\n}\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/error-state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanUpdateErrorState() { }\nif (false) {\n    /** @type {?} */\n    CanUpdateErrorState.prototype.stateChanges;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorState;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorStateMatcher;\n    /**\n     * @return {?}\n     */\n    CanUpdateErrorState.prototype.updateErrorState = function () { };\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasErrorState() { }\nif (false) {\n    /** @type {?} */\n    HasErrorState.prototype._parentFormGroup;\n    /** @type {?} */\n    HasErrorState.prototype._parentForm;\n    /** @type {?} */\n    HasErrorState.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    HasErrorState.prototype.ngControl;\n}\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/initialized.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * \\@docs-private\n * @record\n */\nfunction HasInitialized() { }\nif (false) {\n    /**\n     * Stream that emits once during the directive/component's ngOnInit.\n     * @type {?}\n     */\n    HasInitialized.prototype.initialized;\n    /**\n     * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n     * the directive has been initialized.\n     * \\@docs-private\n     * @type {?}\n     */\n    HasInitialized.prototype._markInitialized;\n}\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\nif (false) {\n    /**\n     * The locale to use for all dates.\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype.locale;\n    /**\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype._localeChanges;\n    /**\n     * Gets the year component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the year from.\n     * @return {?} The year component.\n     */\n    DateAdapter.prototype.getYear = function (date) { };\n    /**\n     * Gets the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the month from.\n     * @return {?} The month component (0-indexed, 0 = January).\n     */\n    DateAdapter.prototype.getMonth = function (date) { };\n    /**\n     * Gets the date of the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the date of the month from.\n     * @return {?} The month component (1-indexed, 1 = first of month).\n     */\n    DateAdapter.prototype.getDate = function (date) { };\n    /**\n     * Gets the day of the week component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the day of the week from.\n     * @return {?} The month component (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getDayOfWeek = function (date) { };\n    /**\n     * Gets a list of names for the months.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n     * @return {?} An ordered list of all month names, starting with January.\n     */\n    DateAdapter.prototype.getMonthNames = function (style) { };\n    /**\n     * Gets a list of names for the dates of the month.\n     * @abstract\n     * @return {?} An ordered list of all date of the month names, starting with '1'.\n     */\n    DateAdapter.prototype.getDateNames = function () { };\n    /**\n     * Gets a list of names for the days of the week.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n     * @return {?} An ordered list of all weekday names, starting with Sunday.\n     */\n    DateAdapter.prototype.getDayOfWeekNames = function (style) { };\n    /**\n     * Gets the name for the year of the given date.\n     * @abstract\n     * @param {?} date The date to get the year name for.\n     * @return {?} The name of the given year (e.g. '2017').\n     */\n    DateAdapter.prototype.getYearName = function (date) { };\n    /**\n     * Gets the first day of the week.\n     * @abstract\n     * @return {?} The first day of the week (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getFirstDayOfWeek = function () { };\n    /**\n     * Gets the number of days in the month of the given date.\n     * @abstract\n     * @param {?} date The date whose month should be checked.\n     * @return {?} The number of days in the month of the given date.\n     */\n    DateAdapter.prototype.getNumDaysInMonth = function (date) { };\n    /**\n     * Clones the given date.\n     * @abstract\n     * @param {?} date The date to clone\n     * @return {?} A new date equal to the given date.\n     */\n    DateAdapter.prototype.clone = function (date) { };\n    /**\n     * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n     * month and date.\n     * @abstract\n     * @param {?} year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n     * @param {?} month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n     * @param {?} date The date of month of the date. Must be an integer 1 - length of the given month.\n     * @return {?} The new date, or null if invalid.\n     */\n    DateAdapter.prototype.createDate = function (year, month, date) { };\n    /**\n     * Gets today's date.\n     * @abstract\n     * @return {?} Today's date.\n     */\n    DateAdapter.prototype.today = function () { };\n    /**\n     * Parses a date from a user-provided value.\n     * @abstract\n     * @param {?} value The value to parse.\n     * @param {?} parseFormat The expected format of the value being parsed\n     *     (type is implementation-dependent).\n     * @return {?} The parsed date.\n     */\n    DateAdapter.prototype.parse = function (value, parseFormat) { };\n    /**\n     * Formats a date as a string according to the given format.\n     * @abstract\n     * @param {?} date The value to format.\n     * @param {?} displayFormat The format to use to display the date as a string.\n     * @return {?} The formatted date string.\n     */\n    DateAdapter.prototype.format = function (date, displayFormat) { };\n    /**\n     * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n     * calendar for each year and then finding the closest date in the new month. For example when\n     * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add years to.\n     * @param {?} years The number of years to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of years added.\n     */\n    DateAdapter.prototype.addCalendarYears = function (date, years) { };\n    /**\n     * Adds the given number of months to the date. Months are counted as if flipping a page on the\n     * calendar for each month and then finding the closest date in the new month. For example when\n     * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add months to.\n     * @param {?} months The number of months to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of months added.\n     */\n    DateAdapter.prototype.addCalendarMonths = function (date, months) { };\n    /**\n     * Adds the given number of days to the date. Days are counted as if moving one cell on the\n     * calendar for each day.\n     * @abstract\n     * @param {?} date The date to add days to.\n     * @param {?} days The number of days to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of days added.\n     */\n    DateAdapter.prototype.addCalendarDays = function (date, days) { };\n    /**\n     * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n     * This method is used to generate date strings that are compatible with native HTML attributes\n     * such as the `min` or `max` attribute of an `<input>`.\n     * @abstract\n     * @param {?} date The date to get the ISO date string for.\n     * @return {?} The ISO date string date string.\n     */\n    DateAdapter.prototype.toIso8601 = function (date) { };\n    /**\n     * Checks whether the given object is considered a date instance by this DateAdapter.\n     * @abstract\n     * @param {?} obj The object to check\n     * @return {?} Whether the object is a date instance.\n     */\n    DateAdapter.prototype.isDateInstance = function (obj) { };\n    /**\n     * Checks whether the given date is valid.\n     * @abstract\n     * @param {?} date The date to check.\n     * @return {?} Whether the date is valid.\n     */\n    DateAdapter.prototype.isValid = function (date) { };\n    /**\n     * Gets date instance that is not valid.\n     * @abstract\n     * @return {?} An invalid date.\n     */\n    DateAdapter.prototype.invalid = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors.\n     * @type {?}\n     * @private\n     */\n    NativeDateAdapter.prototype._clampDate;\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     * @type {?}\n     */\n    NativeDateAdapter.prototype.useUtcForDisplay;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); }, providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/error/error-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\n/** @nocollapse */ ErrorStateMatcher.ɵprov = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-annotations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Stripped-down HammerJS annotations to be used within Material, which are necessary,\n * because HammerJS is an optional dependency. For the full annotations see:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/hammerjs/index.d.ts\n */\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInput() { }\nif (false) {\n    /** @type {?} */\n    HammerInput.prototype.preventDefault;\n    /** @type {?} */\n    HammerInput.prototype.deltaX;\n    /** @type {?} */\n    HammerInput.prototype.deltaY;\n    /** @type {?} */\n    HammerInput.prototype.center;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerStatic() { }\nif (false) {\n    /** @type {?} */\n    HammerStatic.prototype.Pan;\n    /** @type {?} */\n    HammerStatic.prototype.Swipe;\n    /** @type {?} */\n    HammerStatic.prototype.Press;\n    /* Skipping unhandled member: new(element: HTMLElement | SVGElement, options?: any): HammerManager;*/\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction Recognizer() { }\nif (false) {\n    /* Skipping unhandled member: new(options?: any): Recognizer;*/\n    /**\n     * @param {?} otherRecognizer\n     * @return {?}\n     */\n    Recognizer.prototype.recognizeWith = function (otherRecognizer) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction RecognizerStatic() { }\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInstance() { }\nif (false) {\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.on = function (eventName, callback) { };\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.off = function (eventName, callback) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerManager() { }\nif (false) {\n    /**\n     * @param {?} recogniser\n     * @return {?}\n     */\n    HammerManager.prototype.add = function (recogniser) { };\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    HammerManager.prototype.set = function (options) { };\n    /**\n     * @param {?} event\n     * @param {?} data\n     * @return {?}\n     */\n    HammerManager.prototype.emit = function (event, data) { };\n    /**\n     * @param {?} events\n     * @param {?=} handler\n     * @return {?}\n     */\n    HammerManager.prototype.off = function (events, handler) { };\n    /**\n     * @param {?} events\n     * @param {?} handler\n     * @return {?}\n     */\n    HammerManager.prototype.on = function (events, handler) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    HammerOptions.prototype.cssProps;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.domEvents;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.enable;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.preset;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.touchAction;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.recognizers;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputClass;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputTarget;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = /**\n * @return {?}\n */\n() => { }, ɵ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (ɵ0$2),\n    off: (ɵ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} _commonModule\n     */\n    constructor(_hammerOptions, _commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) { return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8)); };\nGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GestureConfig, factory: GestureConfig.ɵfac });\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_HAMMER_OPTIONS]\n            }] }, { type: MatCommonModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * List of new event names to add to the gesture support list\n     * @type {?}\n     */\n    GestureConfig.prototype.events;\n    /**\n     * @type {?}\n     * @private\n     */\n    GestureConfig.prototype._hammerOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/line/line.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @param {?=} prefix\n * @return {?}\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatLineModule_Factory(t) { return new (t || MatLineModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine,\n        MatCommonModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = 3 /* HIDDEN */;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\nif (false) {\n    /**\n     * Current state of the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRef.prototype._renderer;\n    /**\n     * Reference to the ripple HTML element.\n     * @type {?}\n     */\n    RippleRef.prototype.element;\n    /**\n     * Ripple configuration used for the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-renderer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n * @record\n */\nfunction RippleAnimationConfig() { }\nif (false) {\n    /**\n     * Duration in milliseconds for the enter animation (expansion from point of contact).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.enterDuration;\n    /**\n     * Duration in milliseconds for the exit animation (fade-out).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.exitDuration;\n}\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * \\@docs-private\n * @record\n */\nfunction RippleTarget() { }\nif (false) {\n    /**\n     * Configuration for ripples that are launched on pointer down.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleConfig;\n    /**\n     * Whether ripples on pointer down should be disabled.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleDisabled;\n}\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Events that signal that the pointer is down.\n * @type {?}\n */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/**\n * Events that signal that the pointer is up.\n * @type {?}\n */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementOrElementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Whether pointer-up event listeners have been registered.\n         */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = 3 /* HIDDEN */;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} elementOrElementRef\n     * @return {?}\n     */\n    setupTriggerEvents(elementOrElementRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown((/** @type {?} */ (event)));\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart((/** @type {?} */ (event)));\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        /** @type {?} */\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        /** @type {?} */\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            /** @type {?} */\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /**\n     * Function being called whenever the trigger is being released.\n     * @private\n     * @return {?}\n     */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            /** @type {?} */\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        }));\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Registers event listeners for a given list of events.\n     * @private\n     * @param {?} eventTypes\n     * @return {?}\n     */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            eventTypes.forEach((/**\n             * @param {?} type\n             * @return {?}\n             */\n            (type) => {\n                (/** @type {?} */ (this._triggerElement)).addEventListener(type, this, passiveEventOptions);\n            }));\n        }));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach((/**\n             * @param {?} type\n             * @return {?}\n             */\n            (type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, this, passiveEventOptions);\n            }));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach((/**\n                 * @param {?} type\n                 * @return {?}\n                 */\n                (type) => {\n                    (/** @type {?} */ (this._triggerElement)).removeEventListener(type, this, passiveEventOptions);\n                }));\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Element where the ripples are being added to.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerElement;\n    /**\n     * Element which triggers the ripple elements on mouse events.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._triggerElement;\n    /**\n     * Whether the pointer is currently down or not.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._isPointerDown;\n    /**\n     * Set of currently active ripple references.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._activeRipples;\n    /**\n     * Latest non-persistent ripple that was triggered.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._mostRecentTransientRipple;\n    /**\n     * Time in milliseconds when the last touchstart event happened.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._lastTouchStartEvent;\n    /**\n     * Whether pointer-up event listeners have been registered.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._pointerUpEventsRegistered;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerRect;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._target;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._ngZone;\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configurable options for `matRipple`.\n * @record\n */\nfunction RippleGlobalOptions() { }\nif (false) {\n    /**\n     * Whether ripples should be disabled. Ripples can be still launched manually by using\n     * the `launch()` method. Therefore focus indicators will still show up.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.disabled;\n    /**\n     * Configuration for the animation duration of the ripples. There are two phases with different\n     * durations for the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.animation;\n    /**\n     * Whether ripples should start fading out immediately after the mouse or touch is released. By\n     * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.terminateOnPointerUp;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\nif (false) {\n    /**\n     * Custom color for all ripples.\n     * @type {?}\n     */\n    MatRipple.prototype.color;\n    /**\n     * Whether the ripples should be visible outside the component's bounds.\n     * @type {?}\n     */\n    MatRipple.prototype.unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     * @type {?}\n     */\n    MatRipple.prototype.centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     * @type {?}\n     */\n    MatRipple.prototype.radius;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?}\n     */\n    MatRipple.prototype.animation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._trigger;\n    /**\n     * Renderer for the ripple DOM manipulations.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._rippleRenderer;\n    /**\n     * Options that are set globally for all ripples.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._globalOptions;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._isInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); }, imports: [[MatCommonModule, PlatformModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule,\n        PlatformModule]; }, exports: function () { return [MatRipple,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/pseudo-checkbox/pseudo-checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Display state of the checkbox.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.state;\n    /**\n     * Whether the checkbox is disabled.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.disabled;\n    /** @type {?} */\n    MatPseudoCheckbox.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/optgroup.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", label: \"label\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\nconst ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                },\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n            }]\n    }], null, { label: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatOptgroup.ngAcceptInputType_disabled;\n    /**\n     * Label for the option group.\n     * @type {?}\n     */\n    MatOptgroup.prototype.label;\n    /**\n     * Unique id for the underlying label.\n     * @type {?}\n     */\n    MatOptgroup.prototype._labelId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/option.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the option that emitted the event.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.source;\n    /**\n     * Whether the change in the option's value was a result of a user action.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.isUserInput;\n}\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * \\@docs-private\n * @record\n */\nfunction MatOptionParentComponent() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.disableRipple;\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.multiple;\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @param {?=} _origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, exportAs: [\"matOption\"], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc3.NgIf, MatRipple,\n        MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                },\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }] }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatOption.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._active;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._mostRecentViewValue;\n    /**\n     * The form value of the option.\n     * @type {?}\n     */\n    MatOption.prototype.value;\n    /**\n     * The unique ID of the option.\n     * @type {?}\n     */\n    MatOption.prototype.id;\n    /**\n     * Event emitted when the option is selected or deselected.\n     * @type {?}\n     */\n    MatOption.prototype.onSelectionChange;\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     * @type {?}\n     */\n    MatOption.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._parent;\n    /** @type {?} */\n    MatOption.prototype.group;\n}\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); }, imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption,\n        MatOptgroup]; }, imports: function () { return [MatRippleModule,\n        CommonModule,\n        MatPseudoCheckboxModule]; }, exports: function () { return [MatOption,\n        MatOptgroup]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/label/label-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\n * Configurable options for floating labels.\n * @deprecated Use `MatFormFieldDefaultOptions` from `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @record\n */\nfunction LabelOptions() { }\nif (false) {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     * @type {?|undefined}\n     */\n    LabelOptions.prototype.float;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/month-constants.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, GestureConfig, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_HAMMER_OPTIONS, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n//# sourceMappingURL=core.js.map","import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Possible overrides for a dialog's position.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nfunction DialogPosition() { }\nif (false) {\n    /**\n     * Override for the dialog's top position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.top;\n    /**\n     * Override for the dialog's bottom position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.bottom;\n    /**\n     * Override for the dialog's left position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.left;\n    /**\n     * Override for the dialog's right position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.right;\n}\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n * @template D\n */\nclass MatDialogConfig {\n    constructor() {\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the dialog has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Custom class for the backdrop.\n         */\n        this.backdropClass = '';\n        /**\n         * Whether the user can use escape or clicking on the backdrop to close the modal.\n         */\n        this.disableClose = false;\n        /**\n         * Width of the dialog.\n         */\n        this.width = '';\n        /**\n         * Height of the dialog.\n         */\n        this.height = '';\n        /**\n         * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n         */\n        this.maxWidth = '80vw';\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * ID of the element that labels the dialog.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Aria label to assign to the dialog element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the dialog should focus the first focusable element on open.\n         */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\nif (false) {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.viewContainerRef;\n    /**\n     * ID for the dialog. If omitted, a unique one will be generated.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.id;\n    /**\n     * The ARIA role of the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.role;\n    /**\n     * Custom class for the overlay pane.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.panelClass;\n    /**\n     * Whether the dialog has a backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking on the backdrop to close the modal.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.disableClose;\n    /**\n     * Width of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.width;\n    /**\n     * Height of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.height;\n    /**\n     * Min-width of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minWidth;\n    /**\n     * Min-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minHeight;\n    /**\n     * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxWidth;\n    /**\n     * Max-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxHeight;\n    /**\n     * Position overrides.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.position;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.data;\n    /**\n     * Layout direction for the dialog's content.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.direction;\n    /**\n     * ID of the element that describes the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaDescribedBy;\n    /**\n     * ID of the element that labels the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabelledBy;\n    /**\n     * Aria label to assign to the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabel;\n    /**\n     * Whether the dialog should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.autoFocus;\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.scrollStrategy;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatDialogConfig.prototype.closeOnNavigation;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.componentFactoryResolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatDialog.\n * \\@docs-private\n * @type {?}\n */\nconst matDialogAnimations = {\n    /**\n     * Animation that is applied on the dialog container by defalt.\n     */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nclass MatDialogContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _changeDetectorRef\n     * @param {?} _document\n     * @param {?} _config\n     */\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, _config) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        /**\n         * Element that was focused before the dialog was opened. Save this to restore upon close.\n         */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * State of the dialog animation.\n         */\n        this._state = 'enter';\n        /**\n         * Emits when an animation state changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            if (this._portalOutlet.hasAttached()) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Moves focus back into the dialog if it was moved out.\n     * @return {?}\n     */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            /** @type {?} */\n            const focusWasTrapped = this._getFocusTrap().focusInitialElement();\n            if (!focusWasTrapped) {\n                this._elementRef.nativeElement.focus();\n            }\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._getFocusTrap().focusInitialElementWhenReady();\n        }\n        else if (!this._containsFocus()) {\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Saves a reference to the element that was focused before the dialog was opened.\n     * @private\n     * @return {?}\n     */\n    _savePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = (/** @type {?} */ (this._document.activeElement));\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._elementRef.nativeElement.focus()));\n            }\n        }\n    }\n    /**\n     * Returns whether focus is inside the dialog.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const activeElement = this._document.activeElement;\n        return element === activeElement || element.contains(activeElement);\n    }\n    /**\n     * Gets the focus trap associated with the dialog.\n     * @private\n     * @return {?}\n     */\n    _getFocusTrap() {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        return this._focusTrap;\n    }\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) { return new (t || MatDialogContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig)); };\nMatDialogContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], viewQuery: function MatDialogContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx._id)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\n/** @nocollapse */\nMatDialogContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig }\n];\nMatDialogContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[attr.id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._document;\n    /**\n     * The portal outlet inside of this container into which the dialog content will be loaded.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._portalOutlet;\n    /**\n     * The class that traps and manages focus within the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the dialog was opened. Save this to restore upon close.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n    /**\n     * State of the dialog animation.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._state;\n    /**\n     * Emits when an animation state changes.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._animationStateChanged;\n    /**\n     * ID of the element that should be considered as the dialog's label.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._ariaLabelledBy;\n    /**\n     * ID for the container DOM element.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._id;\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDialogContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._changeDetectorRef;\n    /**\n     * The dialog configuration.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\n/** @type {?} */\nlet uniqueId = 0;\n/** @enum {number} */\nconst MatDialogState = {\n    OPEN: 0, CLOSING: 1, CLOSED: 2,\n};\n/**\n * Reference to a dialog opened via the MatDialog service.\n * @template T, R\n */\nclass MatDialogRef {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     * @param {?=} id\n     */\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /**\n         * Whether the user is allowed to close the dialog.\n         */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /**\n         * Subject for notifying the user that the dialog has finished opening.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has finished closing.\n         */\n        this._afterClosed = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has started closing.\n         */\n        this._beforeClosed = new Subject();\n        /**\n         * Current state of the dialog.\n         */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'enter')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'exit')), take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        }));\n        _overlayRef.detachments().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = (/** @type {?} */ (null));\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.keydownEvents()\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.preventDefault();\n            this.close();\n        }));\n        _overlayRef.backdropClick().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                this.close();\n            }\n        }));\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'start')), take(1))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => this._finishDialogClose()), event.totalTime + 100);\n        }));\n        this._containerInstance._startExitAnimation();\n        this._state = 1 /* CLOSING */;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    beforeClosed() {\n        return this._beforeClosed.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} position New dialog position.\n     * @return {THIS}\n     */\n    updatePosition(position) {\n        /** @type {?} */\n        let strategy = (/** @type {?} */ (this))._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {THIS}\n     */\n    updateSize(width = '', height = '') {\n        (/** @type {?} */ (this))._getPositionStrategy().width(width).height(height);\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    addPanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.addPanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    removePanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.removePanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the current state of the dialog's lifecycle.\n     * @return {?}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     * @private\n     * @return {?}\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @private\n     * @return {?}\n     */\n    _getPositionStrategy() {\n        return (/** @type {?} */ (this._overlayRef.getConfig().positionStrategy));\n    }\n}\nif (false) {\n    /**\n     * The instance of component opened into the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.componentInstance;\n    /**\n     * Whether the user is allowed to close the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the dialog has finished opening.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the dialog has finished closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterClosed;\n    /**\n     * Subject for notifying the user that the dialog has started closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._beforeClosed;\n    /**\n     * Result to be passed to afterClosed.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._closeFallbackTimeout;\n    /**\n     * Current state of the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._state;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._overlayRef;\n    /** @type {?} */\n    MatDialogRef.prototype._containerInstance;\n    /** @type {?} */\n    MatDialogRef.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a dialog.\n * @type {?}\n */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that can be used to specify default dialog options.\n * @type {?}\n */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _location\n     * @param {?} _defaultOptions\n     * @param {?} scrollStrategy\n     * @param {?} _parentDialog\n     * @param {?} _overlayContainer\n     */\n    constructor(_overlay, _injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    _location, _defaultOptions, scrollStrategy, _parentDialog, _overlayContainer) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => this.openDialogs.length ?\n            this._afterAllClosed :\n            this._afterAllClosed.pipe(startWith(undefined))))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Keeps track of the currently-open dialogs.\n     * @return {?}\n     */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @return {?}\n     */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * @return {?}\n     */\n    get _afterAllClosed() {\n        /** @type {?} */\n        const parent = this._parentDialog;\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        /** @type {?} */\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this._removeOpenDialog(dialogRef)));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    getDialogById(id) {\n        return this.openDialogs.find((/**\n         * @param {?} dialog\n         * @return {?}\n         */\n        dialog => dialog.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @private\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @private\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        /** @type {?} */\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @private\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector, config.componentFactoryResolver);\n        /** @type {?} */\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @private\n     * @template T, R\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        /** @type {?} */\n        const dialogRef = new MatDialogRef(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({ $implicit: config.data, dialogRef }))));\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            /** @type {?} */\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @private\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        /** @type {?} */\n        const providers = [\n            { provide: MatDialogContainer, useValue: dialogContainer },\n            { provide: MAT_DIALOG_DATA, useValue: config.data },\n            { provide: MatDialogRef, useValue: dialogRef }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @private\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    _removeOpenDialog(dialogRef) {\n        /** @type {?} */\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((/**\n                 * @param {?} previousValue\n                 * @param {?} element\n                 * @return {?}\n                 */\n                (previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                }));\n                this._ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     * @private\n     * @return {?}\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        /** @type {?} */\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            /** @type {?} */\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                /** @type {?} */\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /**\n     * Closes all of the dialogs in an array.\n     * @private\n     * @param {?} dialogs\n     * @return {?}\n     */\n    _closeDialogs(dialogs) {\n        /** @type {?} */\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\n/** @nocollapse */\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._openDialogsAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterAllClosedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterOpenedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._ariaHiddenElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._scrollStrategy;\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     * @type {?}\n     */\n    MatDialog.prototype.afterAllClosed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._defaultOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._parentDialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlayContainer;\n}\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @param {?=} defaultOptions Default options provided.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-content-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for dialog elements.\n * @type {?}\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    /**\n     * @param {?} dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /**\n         * Default to \"button\" to prevents accidental form submits.\n         */\n        this.type = 'button';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler() { return ctx.dialogRef.close(ctx.dialogResult); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': 'dialogRef.close(dialogResult)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\nif (false) {\n    /**\n     * Screenreader label for the button.\n     * @type {?}\n     */\n    MatDialogClose.prototype.ariaLabel;\n    /**\n     * Default to \"button\" to prevents accidental form submits.\n     * @type {?}\n     */\n    MatDialogClose.prototype.type;\n    /**\n     * Dialog close input.\n     * @type {?}\n     */\n    MatDialogClose.prototype.dialogResult;\n    /** @type {?} */\n    MatDialogClose.prototype._matDialogClose;\n    /** @type {?} */\n    MatDialogClose.prototype.dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._dialog;\n}\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    /**\n     * @param {?} _dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(_dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            }));\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\n/** @nocollapse */\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDialogTitle.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialog;\n}\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param {?} element Element relative to which to look for a dialog.\n * @param {?} openDialogs References to the currently-open dialogs.\n * @return {?}\n */\nfunction getClosestDialog(element, openDialogs) {\n    /** @type {?} */\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find((/**\n     * @param {?} dialog\n     * @return {?}\n     */\n    dialog => dialog.id === (/** @type {?} */ (parent)).id)) : null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); }, providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { SecurityContext, Injectable, Optional, Inject, ErrorHandler, ɵɵdefineInjectable, ɵɵinject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { of, throwError, forkJoin } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/common/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Options that can be used to configure how an icon or the icons in an icon set are presented.\n * @record\n */\nfunction IconOptions() { }\nif (false) {\n    /**\n     * View box to set on the icon.\n     * @type {?|undefined}\n     */\n    IconOptions.prototype.viewBox;\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n    /**\n     * @param {?} data\n     * @param {?=} options\n     */\n    constructor(data, options) {\n        this.options = options;\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    SvgIconConfig.prototype.url;\n    /** @type {?} */\n    SvgIconConfig.prototype.svgElement;\n    /** @type {?} */\n    SvgIconConfig.prototype.options;\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    /**\n     * @param {?} _httpClient\n     * @param {?} _sanitizer\n     * @param {?} document\n     * @param {?=} _errorHandler\n     */\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIcon(iconName, url, options) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral, options);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSet(url, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    registerFontClassAlias(alias, className = alias) {\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    setDefaultFontSetClass(className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    getSvgIconFromUrl(safeUrl) {\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg))), map((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => cloneSvg(svg))));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        const key = iconKey(namespace, name);\n        /** @type {?} */\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => config.svgElement = svg)), map((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => cloneSvg(svg))));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        const iconSetFetchRequests = iconSetConfigs\n            .filter((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => !iconSetConfig.svgElement))\n            .map((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                /** @type {?} */\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                /** @type {?} */\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                // @breaking-change 9.0.0 _errorHandler parameter to be made required\n                if (this._errorHandler) {\n                    this._errorHandler.handleError(new Error(errorMessage));\n                }\n                else {\n                    console.error(errorMessage);\n                }\n                return of(null);\n            })));\n        }));\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        })));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchUrl(config.url)\n            .pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => this._createSvgElementForSingleIcon(svgText, config.options))));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconSetFromConfig(config) {\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        })));\n    }\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @param {?=} options\n     * @return {?}\n     */\n    _createSvgElementForSingleIcon(responseText, options) {\n        /** @type {?} */\n        const svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, options);\n        return svg;\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @param {?=} options\n     * @return {?}\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        /** @type {?} */\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        const iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)), options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    _svgElementFromString(str) {\n        /** @type {?} */\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        const svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _toSvgElement(element) {\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        /** @type {?} */\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @param {?=} options\n     * @return {?}\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    _fetchUrl(safeUrl) {\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        const req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize((/**\n         * @return {?}\n         */\n        () => this._inProgressUrlFetches.delete(url))), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        /** @type {?} */\n        const configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler, 8)); };\n/** @nocollapse */\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\n/** @nocollapse */ MatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._svgIconConfigs;\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._iconSetConfigs;\n    /**\n     * Cache for icons loaded by direct URLs.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._cachedIconsByUrl;\n    /**\n     * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._inProgressUrlFetches;\n    /**\n     * Map from font identifiers to their CSS class names. Used for icon fonts.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._fontCssClassesByAlias;\n    /**\n     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n     * The default 'material-icons' value assumes that the material icon font has been loaded as\n     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._defaultFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._httpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._errorHandler;\n}\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @param {?=} errorHandler\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document, errorHandler) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), ErrorHandler],\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nclass MatIconBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatIconBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * Stubbed out location for `MatIcon`.\n * \\@docs-private\n * @record\n */\nfunction MatIconLocation() { }\nif (false) {\n    /** @type {?} */\n    MatIconLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = /**\n * @param {?} attr\n * @return {?}\n */\nattr => `[${attr}]`;\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nconst funcIriAttributeSelector = funcIriAttributes.map((ɵ0)).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _iconRegistry\n     * @param {?} ariaHidden\n     * @param {?=} _location\n     * @param {?=} _errorHandler\n     */\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     * @return {?}\n     */\n    get inline() {\n        return this._inline;\n    }\n    /**\n     * @param {?} inline\n     * @return {?}\n     */\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /**\n     * Font set that the icon is a part of.\n     * @return {?}\n     */\n    get fontSet() { return this._fontSet; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /**\n     * Name of an icon within a font set.\n     * @return {?}\n     */\n    get fontIcon() { return this._fontIcon; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(`Invalid icon name: \"${iconName}\"`);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        /** @type {?} */\n        const svgIconChanges = changes['svgIcon'];\n        if (svgIconChanges) {\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe((/**\n                 * @param {?} svg\n                 * @return {?}\n                 */\n                svg => this._setSvgElement(svg)), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    /** @type {?} */\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    // @breaking-change 9.0.0 _errorHandler parameter to be made required.\n                    if (this._errorHandler) {\n                        this._errorHandler.handleError(new Error(errorMessage));\n                    }\n                    else {\n                        console.error(errorMessage);\n                    }\n                }));\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        /** @type {?} */\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        const styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearSvgElement() {\n        /** @type {?} */\n        const layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        const elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    _prependPathToReferences(path) {\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((/**\n             * @param {?} attrs\n             * @param {?} element\n             * @return {?}\n             */\n            (attrs, element) => {\n                attrs.forEach((/**\n                 * @param {?} attr\n                 * @return {?}\n                 */\n                attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                }));\n            }));\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        /** @type {?} */\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                /** @type {?} */\n                const elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                const value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            }));\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler, 8)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 4, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatIcon.ngAcceptInputType_inline;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._inline;\n    /**\n     * Name of the icon in the SVG icon set.\n     * @type {?}\n     */\n    MatIcon.prototype.svgIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontIconClass;\n    /**\n     * Keeps track of the current page path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousPath;\n    /**\n     * Keeps track of the elements and attributes that we've prefixed with the current path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._elementsWithExternalReferences;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._iconRegistry;\n    /**\n     * @deprecated `location` parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._errorHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n\n//# sourceMappingURL=icon.js.map","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c4 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c5 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSelectionList)))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    /** @type {?} */\n                    const shouldSelect = this.options.some((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.disabled && !option.selected));\n                    this._setAllOptionsSelected(shouldSelect, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @param {?=} skipDisabled\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelectionList_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelectionList_blur_HostBindingHandler() { return ctx._onTouched(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","import { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, END, hasModifierKey, HOME, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, query, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._handleKeydown($event); })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.closed.emit(\"click\"); })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._onAnimationStart($event); })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        (/** @type {?} */ (element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._outlet;\n    /**\n     * Emits when the menu content has been attached.\n     * @type {?}\n     */\n    MatMenuContent.prototype._attached;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._template;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n/**\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction MatMenuPanel() { }\nif (false) {\n    /** @type {?} */\n    MatMenuPanel.prototype.xPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.yPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.overlapTrigger;\n    /** @type {?} */\n    MatMenuPanel.prototype.templateRef;\n    /** @type {?} */\n    MatMenuPanel.prototype.close;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.parentMenu;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.direction;\n    /** @type {?} */\n    MatMenuPanel.prototype.focusFirstItem;\n    /** @type {?} */\n    MatMenuPanel.prototype.resetActiveItem;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.setPositionClasses;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.lazyContent;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.backdropClass;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.hasBackdrop;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.panelId;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.addItem;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.removeItem;\n    /**\n     * @param {?} depth\n     * @return {?}\n     */\n    MatMenuPanel.prototype.setElevation = function (depth) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * ARIA role for the menu item.\n         */\n        this.role = 'menuitem';\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Stream that emits when the menu item is focused.\n         */\n        this._focused = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disableRipple;\n    /**\n     * ARIA role for the menu item.\n     * @type {?}\n     */\n    MatMenuItem.prototype.role;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._document;\n    /**\n     * Stream that emits when the menu item is hovered.\n     * @type {?}\n     */\n    MatMenuItem.prototype._hovered;\n    /**\n     * Stream that emits when the menu item is focused.\n     * @type {?}\n     */\n    MatMenuItem.prototype._focused;\n    /**\n     * Whether the menu item is highlighted.\n     * @type {?}\n     */\n    MatMenuItem.prototype._highlighted;\n    /**\n     * Whether the menu item acts as a trigger for a sub-menu.\n     * @type {?}\n     */\n    MatMenuItem.prototype._triggersSubmenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._focusMonitor;\n    /** @type {?} */\n    MatMenuItem.prototype._parentMenu;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-menu` options that can be overridden.\n * @record\n */\nfunction MatMenuDefaultOptions() { }\nif (false) {\n    /**\n     * The x-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.xPosition;\n    /**\n     * The y-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.yPosition;\n    /**\n     * Whether the menu should overlap the menu trigger.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.overlapTrigger;\n    /**\n     * Class to be applied to the menu's backdrop.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.backdropClass;\n    /**\n     * Whether the menu has a backdrop.\n     * @type {?|undefined}\n     */\n    MatMenuDefaultOptions.prototype.hasBackdrop;\n}\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n * @type {?}\n */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n/** @type {?} */\nlet menuPanelUid = 0;\n/**\n * Base class with all of the `MatMenu` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Only the direct descendant menu items.\n         */\n        this._directDescendantItems = new QueryList();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        /** @type {?} */\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = false;\n            }));\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = true;\n            }));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe((/**\n         * @return {?}\n         */\n        () => this.closed.emit('tab')));\n        // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._focused)))))).subscribe((/**\n         * @param {?} focusedItem\n         * @return {?}\n         */\n        focusedItem => this._keyManager.updateActiveItem(focusedItem)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        /** @type {?} */\n        const itemChanges = (/** @type {?} */ (this._directDescendantItems.changes));\n        return (/** @type {?} */ (itemChanges.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._hovered))))))));\n    }\n    /*\n       * Registers a menu item with the menu.\n       * @docs-private\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 9.0.0\n       */\n    /**\n     * @param {?} _item\n     * @return {?}\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 9.0.0\n     * @param {?} _item\n     * @return {?}\n     */\n    removeItem(_item) { }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._focusFirstItem(origin)));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _focusFirstItem(origin) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            /** @type {?} */\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        /** @type {?} */\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${elevation}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => c.startsWith('mat-elevation-z')));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     * @private\n     * @return {?}\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._directDescendantItems.reset(items.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => item._parentMenu === this)));\n            this._directDescendantItems.notifyOnChanges();\n        }));\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n/** @nocollapse */\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MatMenuContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_overlapTrigger;\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._keyManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._xPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._yPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousElevation;\n    /**\n     * All items inside the menu. Includes items nested inside another menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._allItems;\n    /**\n     * Only the direct descendant menu items.\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._directDescendantItems;\n    /**\n     * Subscription to tab events on the menu panel\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._tabSubscription;\n    /**\n     * Config object to be passed into the menu's ngClass\n     * @type {?}\n     */\n    _MatMenuBase.prototype._classList;\n    /**\n     * Current state of the panel animation.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._panelAnimationState;\n    /**\n     * Emits whenever an animation on the menu completes.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._animationDone;\n    /**\n     * Whether the menu is animating.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._isAnimating;\n    /**\n     * Parent menu of the current menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.parentMenu;\n    /**\n     * Layout direction of the menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.direction;\n    /**\n     * Class to be added to the backdrop element.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.backdropClass;\n    /**\n     * aria-label for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabel;\n    /**\n     * aria-labelledby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabelledby;\n    /**\n     * aria-describedby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaDescribedby;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.templateRef;\n    /**\n     * List of the items inside of a menu.\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.items;\n    /**\n     * Menu content that will be rendered lazily.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.lazyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._overlapTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousPanelClass;\n    /**\n     * Event emitted when the menu is closed.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.closed;\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.close;\n    /** @type {?} */\n    _MatMenuBase.prototype.panelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._defaultOptions;\n}\n/**\n * \\@docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs.\n */\nclass MatMenu extends _MatMenuBase {\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return ɵMatMenu_BaseFactory(t || MatMenu); };\nMatMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenu, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatMenu_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatMenu);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Directive\n    }], null, null); })();\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/**\n * \\@docs-public MatMenu\n */\n// tslint:disable-next-line:class-name\nclass _MatMenu extends MatMenu {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} defaultOptions\n     */\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ɵfac = function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/** @nocollapse */\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ],\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @type {?}\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * Options for binding a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * Directive applied to an element that should trigger a `mat-menu`.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (/**\n         * @return {?}\n         */\n        () => this._openedBy = 'touch');\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * References the menu instance that the trigger is associated with.\n     * @return {?}\n     */\n    get menu() { return this._menu; }\n    /**\n     * @param {?} menu\n     * @return {?}\n     */\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            this._menuCloseSubscription = menu.close.asObservable().subscribe((/**\n             * @param {?} reason\n             * @return {?}\n             */\n            reason => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        /** @type {?} */\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition((/** @type {?} */ (overlayConfig.positionStrategy)));\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe((/**\n         * @return {?}\n         */\n        () => this.closeMenu()));\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @private\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        this._restoreFocus();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                event => event.toState === 'void')), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: (/**\n                     * @return {?}\n                     */\n                    () => (/** @type {?} */ (menu.lazyContent)).detach()),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: (/**\n                     * @return {?}\n                     */\n                    () => this._setIsMenuOpen(false))\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @private\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the menu was open.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    /**\n     * @private\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @private\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions((/** @type {?} */ (config.positionStrategy)));\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @private\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                (/** @type {?} */ (this.menu.setPositionClasses))(posX, posY);\n            }));\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @private\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @private\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = (/** @type {?} */ (this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = (/** @type {?} */ (this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active !== this._menuItemInstance)), filter((/**\n         * @return {?}\n         */\n        () => this._menuOpen))) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @private\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active === this._menuItemInstance && !active.disabled)), delay(0, asapScheduler))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.openMenu()));\n            }\n            else {\n                this.openMenu();\n            }\n        }));\n    }\n    /**\n     * Gets the portal that should be attached to the overlay.\n     * @private\n     * @return {?}\n     */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._closingActionsSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._hoverSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuCloseSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._scrollStrategy;\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._handleTouchStart;\n    /** @type {?} */\n    MatMenuTrigger.prototype._openedBy;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menu;\n    /**\n     * Data to be passed along to any lazily-rendered content.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuData;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.restoreFocus;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuOpened;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuOpen;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuClosed;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._parentMenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuItemInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger,\n        MatMenuContent]; }, exports: function () { return [MatMenuTrigger,\n        MatMenuContent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ],\n        CdkScrollableModule, MatCommonModule,\n        _MatMenuDirectivesModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu,\n        MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule,\n        _MatMenu,\n        MatMenuItem,\n        _MatMenuDirectivesModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, _MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-positions.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenu, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n//# sourceMappingURL=menu.js.map","import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Last animation end data.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"primaryValueBar\"];\nfunction ProgressAnimationEnd() { }\nif (false) {\n    /** @type {?} */\n    ProgressAnimationEnd.prototype.value;\n}\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressBarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * Stubbed out location for `MatProgressBar`.\n * \\@docs-private\n * @record\n */\nfunction MatProgressBarLocation() { }\nif (false) {\n    /** @type {?} */\n    MatProgressBarLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                    .pipe(filter(((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => e.target === element))))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this.animationEnd.next({ value: this.value })));\n                    }\n                }));\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) { return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8)); };\nMatProgressBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressBar, selectors: [[\"mat-progress-bar\"]], viewQuery: function MatProgressBar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    } }, hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"mat-progress-bar\"], hostVars: 4, hostBindings: function MatProgressBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    } }, inputs: { color: \"color\", mode: \"mode\", value: \"value\", bufferValue: \"bufferValue\" }, outputs: { animationEnd: \"animationEnd\" }, exportAs: [\"matProgressBar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 4, consts: [[\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]], template: function MatProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"defs\");\n        ɵngcc0.ɵɵelementStart(2, \"pattern\", 1);\n        ɵngcc0.ɵɵelement(3, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"rect\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵelement(6, \"div\", 5, 6);\n        ɵngcc0.ɵɵelement(8, \"div\", 7);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    } }, directives: [ɵngcc1.NgStyle], styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  The background div is named as such because it appears below the other divs and is not sized based\\n  on values.\\n-->\\n<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n  <defs>\\n    <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n      <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    </pattern>\\n  </defs>\\n  <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n</svg>\\n<div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n<div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n<div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PROGRESS_BAR_LOCATION]\n            }] }]; }, { animationEnd: [{\n            type: Output\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], bufferValue: [{\n            type: Input\n        }], _primaryValueBar: [{\n            type: ViewChild,\n            args: ['primaryValueBar']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatProgressBar.ngAcceptInputType_value;\n    /**\n     * Flag that indicates whether NoopAnimations mode is set to true.\n     * @type {?}\n     */\n    MatProgressBar.prototype._isNoopAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._bufferValue;\n    /** @type {?} */\n    MatProgressBar.prototype._primaryValueBar;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     * @type {?}\n     */\n    MatProgressBar.prototype.animationEnd;\n    /**\n     * Reference to animation end subscription to be unsubscribed on destroy.\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._animationEndSubscription;\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     * @type {?}\n     */\n    MatProgressBar.prototype.mode;\n    /**\n     * ID of the progress bar.\n     * @type {?}\n     */\n    MatProgressBar.prototype.progressbarId;\n    /**\n     * Attribute to be used for the `fill` attribute on the internal `rect` element.\n     * @type {?}\n     */\n    MatProgressBar.prototype._rectangleFillValue;\n    /** @type {?} */\n    MatProgressBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._ngZone;\n    /** @type {?} */\n    MatProgressBar.prototype._animationMode;\n}\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressBarModule });\nMatProgressBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressBarModule_Factory(t) { return new (t || MatProgressBarModule)(); }, imports: [[CommonModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, { declarations: function () { return [MatProgressBar]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatProgressBar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n\n//# sourceMappingURL=progress-bar.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base reference size of the spinner.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * \\@docs-private\n * @type {?}\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/**\n * \\@docs-private\n */\nclass MatProgressSpinnerBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressSpinnerBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/**\n * Default `mat-progress-spinner` options that can be overridden.\n * @record\n */\nfunction MatProgressSpinnerDefaultOptions() { }\nif (false) {\n    /**\n     * Diameter of the spinner.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.diameter;\n    /**\n     * Width of the spinner's stroke.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.strokeWidth;\n    /**\n     * Whether the animations should be force to be enabled, ignoring if the current environment is\n     * using NoopAnimationsModule.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype._forceAnimations;\n}\n/**\n * Injection token to be used to override the default options for `mat-progress-spinner`.\n * @type {?}\n */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\n/** @type {?} */\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} platform\n     * @param {?} _document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /**\n         * Mode of the progress circle\n         */\n        this.mode = 'determinate';\n        /** @type {?} */\n        const trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * The diameter of the progress spinner (will set width and height of svg).\n     * @return {?}\n     */\n    get diameter() { return this._diameter; }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /**\n     * Stroke width of the progress spinner.\n     * @return {?}\n     */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /**\n     * Value of the progress circle.\n     * @return {?}\n     */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        /** @type {?} */\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /**\n     * The radius of the spinner, adjusted for stroke width.\n     * @return {?}\n     */\n    get _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /**\n     * The view box of the spinner's svg element.\n     * @return {?}\n     */\n    get _viewBox() {\n        /** @type {?} */\n        const viewBox = this._circleRadius * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /**\n     * The stroke circumference of the svg circle.\n     * @return {?}\n     */\n    get _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius;\n    }\n    /**\n     * The dash offset of the svg circle.\n     * @return {?}\n     */\n    get _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._strokeCircumference * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._strokeCircumference * 0.2;\n        }\n        return null;\n    }\n    /**\n     * Stroke width of the circle in percent.\n     * @return {?}\n     */\n    get _circleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /**\n     * Dynamically generates a style tag containing the correct animation for this diameter.\n     * @private\n     * @return {?}\n     */\n    _attachStyleNode() {\n        /** @type {?} */\n        const styleRoot = this._styleRoot;\n        /** @type {?} */\n        const currentDiameter = this._diameter;\n        /** @type {?} */\n        const diameters = MatProgressSpinner._diameters;\n        /** @type {?} */\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            /** @type {?} */\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /**\n     * Generates animation styles adjusted for the spinner's diameter.\n     * @private\n     * @return {?}\n     */\n    _getAnimationText() {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this.diameter}`);\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\n/** @nocollapse */\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n     * We need to keep track of which elements the diameters were attached to, because for\n     * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n     * than the document head.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner._diameters;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_diameter;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_strokeWidth;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._diameter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._strokeWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._fallbackAnimation;\n    /**\n     * Element to which we should add the generated style tags for the indeterminate animation.\n     * For most elements this is the document, but for the ones in the Shadow DOM we need to\n     * use the shadow root.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._styleRoot;\n    /**\n     * Whether the _mat-animation-noopable class should be applied, disabling animations.\n     * @type {?}\n     */\n    MatProgressSpinner.prototype._noopAnimations;\n    /**\n     * Mode of the progress circle\n     * @type {?}\n     */\n    MatProgressSpinner.prototype.mode;\n    /** @type {?} */\n    MatProgressSpinner.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._document;\n}\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    /**\n     * @param {?} elementRef\n     * @param {?} platform\n     * @param {?} document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner,\n        MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner,\n        MatSpinner,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ],\n        CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, PortalInjector, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgZone, ElementRef, ChangeDetectorRef, ViewChild, NgModule, TemplateRef, Injectable, Injector, Optional, SkipSelf, ɵɵdefineInjectable, ɵɵinject, INJECTOR } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Event that is emitted when a snack bar is dismissed.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/layout';\n\nfunction SimpleSnackBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function SimpleSnackBar_div_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.action(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.data.action);\n} }\nfunction MatSnackBarContainer_ng_template_0_Template(rf, ctx) { }\nfunction MatSnackBarDismiss() { }\nif (false) {\n    /**\n     * Whether the snack bar was dismissed using the action button.\n     * @type {?}\n     */\n    MatSnackBarDismiss.prototype.dismissedByAction;\n}\n/**\n * Maximum amount of milliseconds that can be passed into setTimeout.\n * @type {?}\n */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n * @template T\n */\nclass MatSnackBarRef {\n    /**\n     * @param {?} containerInstance\n     * @param {?} _overlayRef\n     */\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /**\n         * Subject for notifying the user that the snack bar has been dismissed.\n         */\n        this._afterDismissed = new Subject();\n        /**\n         * Subject for notifying the user that the snack bar has opened and appeared.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the snack bar action was called.\n         */\n        this._onAction = new Subject();\n        /**\n         * Whether the snack bar was dismissed using the action button.\n         */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe((/**\n         * @return {?}\n         */\n        () => this.dismiss()));\n        containerInstance._onExit.subscribe((/**\n         * @return {?}\n         */\n        () => this._finishDismiss()));\n    }\n    /**\n     * Dismisses the snack bar.\n     * @return {?}\n     */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @return {?}\n     */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /**\n     * Dismisses the snack bar after some duration\n     * @param {?} duration\n     * @return {?}\n     */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => this.dismiss()), Math.min(duration, MAX_TIMEOUT));\n    }\n    /**\n     * Marks the snackbar as opened\n     * @return {?}\n     */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /**\n     * Cleans up the DOM after closing.\n     * @private\n     * @return {?}\n     */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /**\n     * Gets an observable that is notified when the snack bar is finished closing.\n     * @return {?}\n     */\n    afterDismissed() {\n        return this._afterDismissed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the snack bar has opened and appeared.\n     * @return {?}\n     */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /**\n     * Gets an observable that is notified when the snack bar action is called.\n     * @return {?}\n     */\n    onAction() {\n        return this._onAction.asObservable();\n    }\n}\nif (false) {\n    /**\n     * The instance of the component making up the content of the snack bar.\n     * @type {?}\n     */\n    MatSnackBarRef.prototype.instance;\n    /**\n     * The instance of the component making up the content of the snack bar.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSnackBarRef.prototype.containerInstance;\n    /**\n     * Subject for notifying the user that the snack bar has been dismissed.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._afterDismissed;\n    /**\n     * Subject for notifying the user that the snack bar has opened and appeared.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the snack bar action was called.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._onAction;\n    /**\n     * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\n     * dismissed before the duration passes.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._durationTimeoutId;\n    /**\n     * Whether the snack bar was dismissed using the action button.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._dismissedByAction;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarRef.prototype._overlayRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a snack bar.\n * @type {?}\n */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n * @template D\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /**\n         * The politeness level for the MatAriaLiveAnnouncer announcement.\n         */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /**\n         * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n         */\n        this.duration = 0;\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * The horizontal position to place the snack bar.\n         */\n        this.horizontalPosition = 'center';\n        /**\n         * The vertical position to place the snack bar.\n         */\n        this.verticalPosition = 'bottom';\n    }\n}\nif (false) {\n    /**\n     * The politeness level for the MatAriaLiveAnnouncer announcement.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.politeness;\n    /**\n     * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n     * component or template, the announcement message will default to the specified message.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.announcementMessage;\n    /**\n     * The view container that serves as the parent for the snackbar for the purposes of dependency\n     * injection. Note: this does not affect where the snackbar is inserted in the DOM.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.viewContainerRef;\n    /**\n     * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.duration;\n    /**\n     * Extra CSS classes to be added to the snack bar container.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.panelClass;\n    /**\n     * Text layout direction for the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.direction;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.data;\n    /**\n     * The horizontal position to place the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.horizontalPosition;\n    /**\n     * The vertical position to place the snack bar.\n     * @type {?}\n     */\n    MatSnackBarConfig.prototype.verticalPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/simple-snack-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nclass SimpleSnackBar {\n    /**\n     * @param {?} snackBarRef\n     * @param {?} data\n     */\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /**\n     * Performs the action on the snack bar.\n     * @return {?}\n     */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /**\n     * If the action button should be shown.\n     * @return {?}\n     */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nSimpleSnackBar.ɵfac = function SimpleSnackBar_Factory(t) { return new (t || SimpleSnackBar)(ɵngcc0.ɵɵdirectiveInject(MatSnackBarRef), ɵngcc0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA)); };\nSimpleSnackBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SimpleSnackBar, selectors: [[\"simple-snack-bar\"]], hostAttrs: [1, \"mat-simple-snackbar\"], decls: 3, vars: 2, consts: [[\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]], template: function SimpleSnackBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, SimpleSnackBar_div_2_Template, 3, 1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton], styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nSimpleSnackBar.ctorParameters = () => [\n    { type: MatSnackBarRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SimpleSnackBar, [{\n        type: Component,\n        args: [{\n                selector: 'simple-snack-bar',\n                template: \"<span>{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-simple-snackbar'\n                },\n                styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DATA]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Data that was injected into the snack bar.\n     * @type {?}\n     */\n    SimpleSnackBar.prototype.data;\n    /** @type {?} */\n    SimpleSnackBar.prototype.snackBarRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material snack bar.\n * \\@docs-private\n * @type {?}\n */\nconst matSnackBarAnimations = {\n    /**\n     * Animation that shows and hides a snack bar.\n     */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0\n        }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * \\@docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} snackBarConfig\n     */\n    constructor(_ngZone, _elementRef, _changeDetectorRef, snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.snackBarConfig = snackBarConfig;\n        /**\n         * Whether the component has been destroyed.\n         */\n        this._destroyed = false;\n        /**\n         * Subject for notifying that the snack bar has exited from view.\n         */\n        this._onExit = new Subject();\n        /**\n         * Subject for notifying that the snack bar has finished entering the view.\n         */\n        this._onEnter = new Subject();\n        /**\n         * The state of the snack bar animations.\n         */\n        this._animationState = 'void';\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            this._assertNotAttached();\n            this._applySnackBarClasses();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        // Based on the ARIA spec, `alert` and `status` roles have an\n        // implicit `assertive` and `polite` politeness respectively.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._role = 'alert';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._role = null;\n        }\n        else {\n            this._role = 'status';\n        }\n    }\n    /**\n     * Attach a component portal as content to this snack bar container.\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a template portal as content to this snack bar container.\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Handle end of animations, updating the state of the snackbar.\n     * @param {?} event\n     * @return {?}\n     */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            /** @type {?} */\n            const onEnter = this._onEnter;\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                onEnter.next();\n                onEnter.complete();\n            }));\n        }\n    }\n    /**\n     * Begin animation of snack bar entrance into view.\n     * @return {?}\n     */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Begin animation of the snack bar exiting from view.\n     * @return {?}\n     */\n    exit() {\n        // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n        // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n        // `MatSnackBar.open`).\n        this._animationState = 'hidden';\n        // Mark this element with an 'exit' attribute to indicate that the snackbar has\n        // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n        // test harness.\n        this._elementRef.nativeElement.setAttribute('mat-exit', '');\n        return this._onExit;\n    }\n    /**\n     * Makes sure the exit callbacks have been invoked when the element is destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     * @private\n     * @return {?}\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._onExit.next();\n            this._onExit.complete();\n        }));\n    }\n    /**\n     * Applies the various positioning and user-configured CSS classes to the snack bar.\n     * @private\n     * @return {?}\n     */\n    _applySnackBarClasses() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach((/**\n                 * @param {?} cssClass\n                 * @return {?}\n                 */\n                cssClass => element.classList.add(cssClass)));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    }\n    /**\n     * Asserts that no content is already attached to the container.\n     * @private\n     * @return {?}\n     */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n}\nMatSnackBarContainer.ɵfac = function MatSnackBarContainer_Factory(t) { return new (t || MatSnackBarContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSnackBarConfig)); };\nMatSnackBarContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSnackBarContainer, selectors: [[\"snack-bar-container\"]], viewQuery: function MatSnackBarContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [1, \"mat-snack-bar-container\"], hostVars: 2, hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@state.done\", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) { return ctx.onAnimationEnd($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx._role);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatSnackBarContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatSnackBarContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc3.CdkPortalOutlet], styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"], encapsulation: 2, data: { animation: [matSnackBarAnimations.snackBarState] } });\n/** @nocollapse */\nMatSnackBarContainer.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSnackBarConfig }\n];\nMatSnackBarContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarContainer, [{\n        type: Component,\n        args: [{\n                selector: 'snack-bar-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than\n                // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                // because it might cause snack bars that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matSnackBarAnimations.snackBarState],\n                host: {\n                    '[attr.role]': '_role',\n                    'class': 'mat-snack-bar-container',\n                    '[@state]': '_animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSnackBarConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Whether the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._destroyed;\n    /**\n     * The portal outlet inside of this container into which the snack bar content will be loaded.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._portalOutlet;\n    /**\n     * Subject for notifying that the snack bar has exited from view.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._onExit;\n    /**\n     * Subject for notifying that the snack bar has finished entering the view.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._onEnter;\n    /**\n     * The state of the snack bar animations.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._animationState;\n    /**\n     * ARIA role for the snack bar container.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype._role;\n    /**\n     * Attaches a DOM portal to the snack bar container.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBarContainer.prototype._changeDetectorRef;\n    /**\n     * The snack bar configuration.\n     * @type {?}\n     */\n    MatSnackBarContainer.prototype.snackBarConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSnackBarModule {\n}\nMatSnackBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSnackBarModule });\nMatSnackBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSnackBarModule_Factory(t) { return new (t || MatSnackBarModule)(); }, imports: [[\n            OverlayModule,\n            PortalModule,\n            CommonModule,\n            MatButtonModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSnackBarModule, { declarations: function () { return [MatSnackBarContainer,\n        SimpleSnackBar]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        CommonModule,\n        MatButtonModule,\n        MatCommonModule]; }, exports: function () { return [MatSnackBarContainer,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    MatButtonModule,\n                    MatCommonModule,\n                ],\n                exports: [MatSnackBarContainer, MatCommonModule],\n                declarations: [MatSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MatSnackBarContainer, SimpleSnackBar]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/snack-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to specify default snack bar.\n * @type {?}\n */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    /**\n     * @param {?} _overlay\n     * @param {?} _live\n     * @param {?} _injector\n     * @param {?} _breakpointObserver\n     * @param {?} _parentSnackBar\n     * @param {?} _defaultConfig\n     */\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n    }\n    /**\n     * Reference to the currently opened snackbar at *any* level.\n     * @return {?}\n     */\n    get _openedSnackBarRef() {\n        /** @type {?} */\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @template T\n     * @param {?} component Component to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    openFromComponent(component, config) {\n        return (/** @type {?} */ (this._attach(component, config)));\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param {?} template Template to be instantiated.\n     * @param {?=} config Extra configuration for the snack bar.\n     * @return {?}\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param {?} message The message to show in the snackbar.\n     * @param {?=} action The label for the snackbar action.\n     * @param {?=} config Additional configuration options for the snackbar.\n     * @return {?}\n     */\n    open(message, action = '', config) {\n        /** @type {?} */\n        const _config = Object.assign(Object.assign({}, this._defaultConfig), config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        if (!_config.announcementMessage) {\n            _config.announcementMessage = message;\n        }\n        return this.openFromComponent(SimpleSnackBar, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     * @return {?}\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     * @private\n     * @param {?} overlayRef\n     * @param {?} config\n     * @return {?}\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatSnackBarConfig, config]\n        ]));\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatSnackBarContainer, config.viewContainerRef, injector);\n        /** @type {?} */\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     * @private\n     * @template T\n     * @param {?} content\n     * @param {?=} userConfig\n     * @return {?}\n     */\n    _attach(content, userConfig) {\n        /** @type {?} */\n        const config = Object.assign(Object.assign(Object.assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        /** @type {?} */\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            /** @type {?} */\n            const portal = new TemplatePortal(content, (/** @type {?} */ (null)), (/** @type {?} */ ({\n                $implicit: config.data,\n                snackBarRef\n            })));\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, snackBarRef);\n            /** @type {?} */\n            const portal = new ComponentPortal(content, undefined, injector);\n            /** @type {?} */\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => {\n            /** @type {?} */\n            const classList = overlayRef.overlayElement.classList;\n            /** @type {?} */\n            const className = 'mat-snack-bar-handset';\n            state.matches ? classList.add(className) : classList.remove(className);\n        }));\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /**\n     * Animates the old snack bar out and the new one in.\n     * @private\n     * @param {?} snackBarRef\n     * @param {?} config\n     * @return {?}\n     */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        }));\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                snackBarRef.containerInstance.enter();\n            }));\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe((/**\n             * @return {?}\n             */\n            () => snackBarRef._dismissAfter((/** @type {?} */ (config.duration)))));\n        }\n        if (config.announcementMessage) {\n            this._live.announce(config.announcementMessage, config.politeness);\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @private\n     * @param {?} config The user-specified snack bar config.\n     * @return {?}\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        /** @type {?} */\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        /** @type {?} */\n        const isRtl = config.direction === 'rtl';\n        /** @type {?} */\n        const isLeft = (config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl));\n        /** @type {?} */\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @private\n     * @template T\n     * @param {?} config Config that was used to create the snack bar.\n     * @param {?} snackBarRef Reference to the snack bar.\n     * @return {?}\n     */\n    _createInjector(config, snackBarRef) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return new PortalInjector(userInjector || this._injector, new WeakMap([\n            [MatSnackBarRef, snackBarRef],\n            [MAT_SNACK_BAR_DATA, config.data]\n        ]));\n    }\n}\nMatSnackBar.ɵfac = function MatSnackBar_Factory(t) { return new (t || MatSnackBar)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc6.BreakpointObserver), ɵngcc0.ɵɵinject(MatSnackBar, 12), ɵngcc0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); };\n/** @nocollapse */\nMatSnackBar.ctorParameters = () => [\n    { type: Overlay },\n    { type: LiveAnnouncer },\n    { type: Injector },\n    { type: BreakpointObserver },\n    { type: MatSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: MatSnackBarConfig, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ MatSnackBar.ɵprov = ɵɵdefineInjectable({ factory: function MatSnackBar_Factory() { return new MatSnackBar(ɵɵinject(Overlay), ɵɵinject(LiveAnnouncer), ɵɵinject(INJECTOR), ɵɵinject(BreakpointObserver), ɵɵinject(MatSnackBar, 12), ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); }, token: MatSnackBar, providedIn: MatSnackBarModule });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBar, [{\n        type: Injectable,\n        args: [{ providedIn: MatSnackBarModule }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc5.LiveAnnouncer }, { type: ɵngcc0.Injector }, { type: ɵngcc6.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: MatSnackBarConfig, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n     * If there is a parent snack-bar service, all operations should delegate to that parent\n     * via `_openedSnackBarRef`.\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._snackBarRefAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._live;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._breakpointObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._parentSnackBar;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSnackBar.prototype._defaultConfig;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/snack-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n\n//# sourceMappingURL=snack-bar.js.map","import { Directive, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatToolbar.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._checkToolbarMixedModes()));\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @private\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !(node.classList && node.classList.contains('mat-toolbar-row'))))\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)))\n            .some((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !!(node.textContent && node.textContent.trim())));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._document;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar,\n        MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar,\n        MatToolbarRow,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n//# sourceMappingURL=toolbar.js.map","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    // 'Authorization': 'my-auth-token'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BotService {\n  \n  baseUrl = environment.apiEndpoint + '/api/';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  public getAllBots = () => {\n    return this.http.get(this.baseUrl + 'Ai/Bots');\n  }\n  public getById = (botId: any) => {\n    return this.http.get(this.baseUrl + 'Ai/Bots/'+ botId);\n  }\n  public createBots = (data: any) => this.http.post<any>(this.baseUrl + 'Ai/Bots', data, httpOptions);\n  public removeBot = (botId: any) => {\n    return this.http.delete<any>(this.baseUrl + 'Ai/Bots/' + botId);\n  }\n}\n"]}