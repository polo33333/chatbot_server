{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-bar.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js","webpack:///src/app/customer/bots/bots.component.ts","webpack:///src/app/customer/bots/bots.component.html","webpack:///src/app/customer/customer-routing.module.ts","webpack:///src/app/customer/customer.component.ts","webpack:///src/app/customer/customer.component.html","webpack:///src/app/customer/customer.module.ts","webpack:///src/app/customer/dialog/bot-create/bot-create.component.ts","webpack:///src/app/customer/dialog/bot-create/bot-create.component.html","webpack:///src/app/customer/dialog/bot-remove/bot-remove.component.ts","webpack:///src/app/customer/dialog/bot-remove/bot-remove.component.html","webpack:///src/app/customer/guides/guides.component.ts","webpack:///src/app/customer/guides/guides.component.html","webpack:///src/app/customer/overview/overview.component.ts","webpack:///src/app/customer/overview/overview.component.html","webpack:///src/app/customer/profiles/profiles.component.ts","webpack:///src/app/customer/profiles/profiles.component.html","webpack:///src/app/customer/supports/supports.component.ts","webpack:///src/app/customer/supports/supports.component.html","webpack:///src/app/shared/models/bots.model.ts","webpack:///src/app/shared/services/bots.service.ts"],"names":["MatDialogContainer_ng_template_0_Template","rf","ctx","DialogPosition","MatDialogConfig","role","panelClass","hasBackdrop","backdropClass","disableClose","width","height","maxWidth","data","ariaDescribedBy","ariaLabelledBy","ariaLabel","autoFocus","restoreFocus","closeOnNavigation","matDialogAnimations","dialogContainer","opacity","transform","throwMatDialogContentAlreadyAttachedError","Error","MatDialogContainer","_elementRef","_focusTrapFactory","_changeDetectorRef","_document","_config","_elementFocusedBeforeDialogWasOpened","_state","_animationStateChanged","attachDomPortal","portal","_portalOutlet","hasAttached","_savePreviouslyFocusedElement","_ariaLabelledBy","attachComponentPortal","attachTemplatePortal","_containsFocus","focusWasTrapped","_getFocusTrap","focusInitialElement","nativeElement","focus","focusInitialElementWhenReady","toFocus","activeElement","element","body","contains","_focusTrap","destroy","Promise","resolve","then","create","event","toState","_trapFocus","_restoreFocus","emit","markForCheck","ɵfac","MatDialogContainer_Factory","t","ɵcmp","type","selectors","viewQuery","MatDialogContainer_Query","_t","first","hostAttrs","hostVars","hostBindings","MatDialogContainer_HostBindings","MatDialogContainer_animation_dialogContainer_start_HostBindingHandler","$event","_onAnimationStart","MatDialogContainer_animation_dialogContainer_done_HostBindingHandler","_onAnimationDone","_id","features","decls","vars","consts","template","MatDialogContainer_Template","directives","styles","encapsulation","animation","ctorParameters","undefined","decorators","args","propDecorators","selector","None","changeDetection","Default","animations","host","uniqueId","MatDialogState","OPEN","CLOSING","CLOSED","MatDialogRef","_overlayRef","_containerInstance","id","_afterOpened","_afterClosed","_beforeClosed","pipe","phaseName","subscribe","next","complete","clearTimeout","_closeFallbackTimeout","_finishDialogClose","detachments","_result","componentInstance","dispose","keydownEvents","keyCode","preventDefault","close","backdropClick","_recaptureFocus","dialogResult","detachBackdrop","setTimeout","totalTime","_startExitAnimation","asObservable","position","strategy","_getPositionStrategy","left","right","centerHorizontally","top","bottom","centerVertically","updatePosition","classes","addPanelClass","removePanelClass","getConfig","positionStrategy","MAT_DIALOG_DATA","MAT_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_SCROLL_STRATEGY","MAT_DIALOG_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","block","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_DIALOG_SCROLL_STRATEGY_PROVIDER","provide","deps","useFactory","MatDialog","_overlay","_injector","_location","_defaultOptions","scrollStrategy","_parentDialog","_overlayContainer","_openDialogsAtThisLevel","_afterAllClosedAtThisLevel","_afterOpenedAtThisLevel","_ariaHiddenElements","Map","afterAllClosed","openDialogs","length","_afterAllClosed","_scrollStrategy","componentOrTemplateRef","config","_applyConfigDefaults","getDialogById","overlayRef","_createOverlay","_attachDialogContainer","dialogRef","_attachDialogContent","_hideNonDialogContentFromAssistiveTechnology","push","afterClosed","_removeOpenDialog","afterOpened","_closeDialogs","find","dialog","overlayConfig","_getOverlayConfig","dialogConfig","state","global","direction","minWidth","minHeight","maxHeight","disposeOnNavigation","userInjector","viewContainerRef","injector","parent","providers","useValue","containerPortal","componentFactoryResolver","containerRef","attach","instance","$implicit","_createInjector","contentRef","updateSize","get","value","change","index","indexOf","splice","forEach","previousValue","setAttribute","removeAttribute","clear","overlayContainer","getContainerElement","parentElement","siblings","children","i","sibling","nodeName","hasAttribute","set","getAttribute","dialogs","MatDialog_Factory","ɵprov","token","factory","defaultOptions","Object","assign","dialogElementUid","MatDialogClose","_dialog","getClosestDialog","changes","proxiedChange","currentValue","MatDialogClose_Factory","ɵdir","MatDialogClose_HostBindings","MatDialogClose_click_HostBindingHandler","inputs","_matDialogClose","exportAs","MatDialogTitle","_dialogRef","container","MatDialogTitle_Factory","MatDialogTitle_HostBindings","MatDialogContent","MatDialogContent_Factory","MatDialogActions","MatDialogActions_Factory","classList","MatDialogModule","ɵmod","ɵinj","MatDialogModule_Factory","imports","ngJitMode","declarations","exports","entryComponents","MatDivider","_vertical","_inset","MatDivider_Factory","MatDivider_HostBindings","vertical","inset","MatDivider_Template","OnPush","MatDividerModule","MatDividerModule_Factory","_c0","_c1","_c2","_c3","MatListOption_mat_pseudo_checkbox_2_Template","ctx_r0","selected","disabled","_c4","_c5","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MatNavList","arguments","_stateChanges","MatNavList_Factory","ɵMatNavList_BaseFactory","disableRipple","ngContentSelectors","MatNavList_Template","MatList","_getListType","add","toLowerCase","MatList_Factory","MatList_Template","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","_element","navList","list","_isInteractiveList","_destroyed","_disabled","_list","_getHostElement","_lines","MatListItem_Factory","contentQueries","MatListItem_ContentQueries","dirIndex","_avatar","_icon","MatListItem_HostBindings","MatListItem_Template","_isRippleDisabled","descendants","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","useExisting","MatSelectionList","multi","MatSelectionListChange","source","option","MatListOption","_changeDetector","selectionList","_selected","_hasFocus","checkboxPosition","_inputsInitialized","_value","some","compareWith","_setSelected","wasSelected","hadFocus","newActiveItem","_removeOptionFromList","_text","textContent","multiple","toggle","_emitChangeEvent","_setFocusedOption","_onTouched","selectedOptions","select","deselect","_color","color","newValue","isSelected","_reportValueChange","MatListOption_Factory","MatListOption_ContentQueries","MatListOption_Query","MatListOption_HostBindings","MatListOption_focus_HostBindingHandler","_handleFocus","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","_handleClick","MatListOption_Template","tabIndex","_multiple","_contentInitialized","selectionChange","a1","a2","_tabIndex","_onChange","_","_keyManager","options","withWrap","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","_updateTabIndex","changed","added","item","removed","disableRippleChanges","colorChanges","firstChange","_markOptionsForCheck","_isDestroyed","_setAllOptionsSelected","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","Math","min","activeItem","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","setFirstItemActive","setLastItemActive","shouldSelect","onKeydown","shiftKey","_getSelectedOptionValues","activeIndex","setActiveItem","values","isDisabled","fn","correspondingOption","filter","map","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","hasChanged","_markForCheck","MatSelectionList_Factory","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_focus_HostBindingHandler","_onFocus","MatSelectionList_blur_HostBindingHandler","MatSelectionList_keydown_HostBindingHandler","_keydown","toString","outputs","MatSelectionList_Template","String","MatListModule","MatListModule_Factory","_MatMenu_ng_template_0_Template","_r2","_MatMenu_ng_template_0_Template_div_keydown_0_listener","ctx_r1","_handleKeydown","_MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r3","closed","_MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r4","_MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r5","panelId","_classList","_panelAnimationState","ariaLabelledby","ariaDescribedby","matMenuAnimations","transformMenu","fadeInItems","MatMenuContent","_template","_componentFactoryResolver","_appRef","_viewContainerRef","_attached","context","_portal","detach","_outlet","createElement","elementRef","parentNode","insertBefore","outletElement","isAttached","MatMenuContent_Factory","throwMatMenuMissingError","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_PANEL","MatMenuPanel","MatMenuItemBase","_MatMenuItemMixinBase","MatMenuItem","document","_focusMonitor","_parentMenu","_hovered","_focused","_highlighted","_triggersSubmenu","monitor","addItem","origin","focusVia","stopMonitoring","removeItem","stopPropagation","textNodeType","TEXT_NODE","output","childNodes","nodeType","trim","MatMenuItem_Factory","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","_checkDisabled","MatMenuItem_mouseenter_HostBindingHandler","_handleMouseEnter","_getTabIndex","attrs","MatMenuItem_Template","MatMenuDefaultOptions","MAT_MENU_DEFAULT_OPTIONS","providedIn","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","MAT_MENU_BASE_ELEVATION","menuPanelUid","_MatMenuBase","_ngZone","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","EMPTY","_animationDone","_overlapTrigger","_hasBackdrop","setPositionClasses","_updateDirectDescendants","items","focusedItem","unsubscribe","itemChanges","_item","parentMenu","setFocusOrigin","lazyContent","onStable","_focusFirstItem","depth","elevation","newElevation","customElevation","keys","c","startsWith","_previousElevation","posX","posY","_isAnimating","scrollTop","_allItems","reset","notifyOnChanges","previousPanelClass","_previousPanelClass","split","className","_MatMenuBase_Factory","_MatMenuBase_ContentQueries","_MatMenuBase_Query","templateRef","MatMenu","MatMenu_Factory","ɵMatMenu_BaseFactory","_MatMenu","ngZone","_MatMenu_Factory","_MatMenu_Template","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","MatMenuTrigger","_menuItemInstance","_dir","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","menuOpened","onMenuOpen","menuClosed","onMenuClose","addEventListener","triggersSubmenu","_checkMenu","_handleHover","removeEventListener","closeMenu","openMenu","_setPosition","menu","_getPortal","menuData","_menuClosingActions","_initMenu","_startAnimation","menuOpen","_resetAnimation","_setIsMenuOpen","dir","_setMenuElevation","focusFirstItem","setElevation","isOpen","_subscribeToPositions","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","positionChanges","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","parentClose","hover","active","button","toggleMenu","v","_menu","reason","_destroyMenu","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","_handleMousedown","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","_MatMenuDirectivesModule_Factory","MatMenuModule","MatMenuModule_Factory","ProgressAnimationEnd","MatProgressBarBase","_MatProgressBarMixinBase","MAT_PROGRESS_BAR_LOCATION","MAT_PROGRESS_BAR_LOCATION_FACTORY","MatProgressBarLocation","location","getPathname","pathname","search","progressbarId","MatProgressBar","_animationMode","_isNoopAnimation","_bufferValue","animationEnd","_animationEndSubscription","mode","path","_rectangleFillValue","scale","bufferValue","runOutsideAngular","_primaryValueBar","e","target","run","clamp","MatProgressBar_Factory","MatProgressBar_Query","MatProgressBar_HostBindings","MatProgressBar_Template","_bufferTransform","_primaryTransform","max","MatProgressBarModule","MatProgressBarModule_Factory","MatProgressSpinner__svg_circle_1_Template","diameter","_strokeDashOffset","_strokeCircumference","_circleStrokeWidth","_circleRadius","MatProgressSpinner__svg_circle_2_Template","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MatProgressSpinnerDefaultOptions","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","platform","animationMode","defaults","_diameter","_fallbackAnimation","trackedDiameters","_diameters","has","head","Set","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","animationClass","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","appendChild","replace","size","_strokeWidth","viewBox","PI","MatProgressSpinner_Factory","MatProgressSpinner_HostBindings","MatProgressSpinner_Template","_viewBox","WeakMap","MatSpinner","MatSpinner_Factory","MatSpinner_HostBindings","MatSpinner_Template","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","MatDrawerContainer_div_0_Template","_r3","MatDrawerContainer_div_0_Template_div_click_0_listener","ctx_r2","_onBackdropClicked","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","MAT_DRAWER_DEFAULT_AUTOSIZE","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","scrollDispatcher","_contentMarginChanges","MatDrawerContent_Factory","MatDrawerContainer","MatDrawerContent_HostBindings","_contentMargins","MatDrawerContent_Template","MatDrawer","_platform","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","onPositionChanged","_modeChanged","opened","_takeFocus","x","y","fromState","hasMovedFocus","activeEl","_openedVia","blur","_updateFocusTrapState","isBrowser","openedVia","open","enabled","_autoFocus","o","offsetWidth","MatDrawer_Factory","MatDrawer_HostBindings","MatDrawer_animation_transform_start_HostBindingHandler","_animationStartListener","MatDrawer_animation_transform_done_HostBindingHandler","_animationDoneListener","_openedStream","openedStart","_closedStream","closedStart","MatDrawer_Template","viewportRuler","defaultAutosize","_drawers","_doCheckSubject","_validateDrawers","updateContentMargins","_autosize","_allDrawers","drawer","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_start","_end","_left","_width","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","isAdd","remove","_closeModalDrawer","_canHaveBackdrop","_backdropOverride","_userContent","_content","MatDrawerContainer_Factory","MatDrawerContainer_ContentQueries","MatDrawerContainer_Query","MatDrawerContainer_HostBindings","autosize","MatDrawerContainer_Template","MatSidenavContent","changeDetectorRef","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","MatSidenav_Factory","ɵMatSidenav_BaseFactory","MatSidenav_HostBindings","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenav_Template","MatSidenavContainer_Factory","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","MatToolbarBase","_MatToolbarMixinBase","MatToolbarRow","MatToolbarRow_Factory","MatToolbar","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","Array","from","node","COMMENT_NODE","throwToolbarMixedModesError","MatToolbar_Factory","MatToolbar_ContentQueries","MatToolbar_HostBindings","MatToolbar_Template","MatToolbarModule","MatToolbarModule_Factory","BotsComponent","botServer","_snackBar","loading","bots","getAllBot","createBot","removeBot","getAllBots","res","localStorage","setItem","JSON","stringify","error","duration","result","action","createBots","status","bot","botId","refresh","templateUrl","styleUrls","routes","component","loadChildren","m","BotModule","canActivate","redirectTo","CustomerRoutingModule","forChild","CustomerComponent","router","authService","screenWidth","window","innerWidth","onresize","events","navigationInterceptor","logOut","logout","CustomerModule","useClass","BotCreateComponent","langs","code","name","model","f","newBot","BotRemoveComponent","currentBot","GuidesComponent","OverviewComponent","ProfilesComponent","SupportsComponent","Bot","_Id","desc","lang","appId","appToken","isActive","httpOptions","headers","BotService","http","baseUrl","apiEndpoint","getById","post"],"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","file":"customer-customer-module-es5.js","sourcesContent":["import { Overlay, OverlayConfig, OverlayContainer, OverlayModule } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, ViewChild, InjectionToken, Injector, TemplateRef, Injectable, SkipSelf, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Subject, defer, of } from 'rxjs';\nimport { filter, take, startWith } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Possible overrides for a dialog's position.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/overlay';\nimport * as ɵngcc4 from '@angular/common';\n\nfunction MatDialogContainer_ng_template_0_Template(rf, ctx) { }\nfunction DialogPosition() { }\nif (false) {\n    /**\n     * Override for the dialog's top position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.top;\n    /**\n     * Override for the dialog's bottom position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.bottom;\n    /**\n     * Override for the dialog's left position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.left;\n    /**\n     * Override for the dialog's right position.\n     * @type {?|undefined}\n     */\n    DialogPosition.prototype.right;\n}\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n * @template D\n */\nclass MatDialogConfig {\n    constructor() {\n        /**\n         * The ARIA role of the dialog element.\n         */\n        this.role = 'dialog';\n        /**\n         * Custom class for the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the dialog has a backdrop.\n         */\n        this.hasBackdrop = true;\n        /**\n         * Custom class for the backdrop.\n         */\n        this.backdropClass = '';\n        /**\n         * Whether the user can use escape or clicking on the backdrop to close the modal.\n         */\n        this.disableClose = false;\n        /**\n         * Width of the dialog.\n         */\n        this.width = '';\n        /**\n         * Height of the dialog.\n         */\n        this.height = '';\n        /**\n         * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n         */\n        this.maxWidth = '80vw';\n        /**\n         * Data being injected into the child component.\n         */\n        this.data = null;\n        /**\n         * ID of the element that describes the dialog.\n         */\n        this.ariaDescribedBy = null;\n        /**\n         * ID of the element that labels the dialog.\n         */\n        this.ariaLabelledBy = null;\n        /**\n         * Aria label to assign to the dialog element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Whether the dialog should focus the first focusable element on open.\n         */\n        this.autoFocus = true;\n        /**\n         * Whether the dialog should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n        /**\n         * Whether the dialog should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n    }\n}\nif (false) {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.viewContainerRef;\n    /**\n     * ID for the dialog. If omitted, a unique one will be generated.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.id;\n    /**\n     * The ARIA role of the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.role;\n    /**\n     * Custom class for the overlay pane.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.panelClass;\n    /**\n     * Whether the dialog has a backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.hasBackdrop;\n    /**\n     * Custom class for the backdrop.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.backdropClass;\n    /**\n     * Whether the user can use escape or clicking on the backdrop to close the modal.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.disableClose;\n    /**\n     * Width of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.width;\n    /**\n     * Height of the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.height;\n    /**\n     * Min-width of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minWidth;\n    /**\n     * Min-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.minHeight;\n    /**\n     * Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxWidth;\n    /**\n     * Max-height of the dialog. If a number is provided, assumes pixel units.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.maxHeight;\n    /**\n     * Position overrides.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.position;\n    /**\n     * Data being injected into the child component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.data;\n    /**\n     * Layout direction for the dialog's content.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.direction;\n    /**\n     * ID of the element that describes the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaDescribedBy;\n    /**\n     * ID of the element that labels the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabelledBy;\n    /**\n     * Aria label to assign to the dialog element.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.ariaLabel;\n    /**\n     * Whether the dialog should focus the first focusable element on open.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.autoFocus;\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.restoreFocus;\n    /**\n     * Scroll strategy to be used for the dialog.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.scrollStrategy;\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    MatDialogConfig.prototype.closeOnNavigation;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * @type {?}\n     */\n    MatDialogConfig.prototype.componentFactoryResolver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatDialog.\n * \\@docs-private\n * @type {?}\n */\nconst matDialogAnimations = {\n    /**\n     * Animation that is applied on the dialog container by defalt.\n     */\n    dialogContainer: trigger('dialogContainer', [\n        // Note: The `enter` animation transitions to `transform: none`, because for some reason\n        // specifying the transform explicitly, causes IE both to blur the dialog content and\n        // decimate the animation performance. Leaving it as `none` solves both issues.\n        state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n        state('enter', style({ transform: 'none' })),\n        transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n        transition('* => void, * => exit', animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatDialogContentAlreadyAttachedError() {\n    throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nclass MatDialogContainer extends BasePortalOutlet {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _changeDetectorRef\n     * @param {?} _document\n     * @param {?} _config\n     */\n    constructor(_elementRef, _focusTrapFactory, _changeDetectorRef, _document, _config) {\n        super();\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._config = _config;\n        /**\n         * Element that was focused before the dialog was opened. Save this to restore upon close.\n         */\n        this._elementFocusedBeforeDialogWasOpened = null;\n        /**\n         * State of the dialog animation.\n         */\n        this._state = 'enter';\n        /**\n         * Emits when an animation state changes.\n         */\n        this._animationStateChanged = new EventEmitter();\n        /**\n         * Attaches a DOM portal to the dialog container.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            if (this._portalOutlet.hasAttached()) {\n                throwMatDialogContentAlreadyAttachedError();\n            }\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        });\n        this._ariaLabelledBy = _config.ariaLabelledBy || null;\n        this._document = _document;\n    }\n    /**\n     * Attach a ComponentPortal as content to this dialog container.\n     * @template T\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachComponentPortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /**\n     * Attach a TemplatePortal as content to this dialog container.\n     * @template C\n     * @param {?} portal Portal to be attached as the dialog content.\n     * @return {?}\n     */\n    attachTemplatePortal(portal) {\n        if (this._portalOutlet.hasAttached()) {\n            throwMatDialogContentAlreadyAttachedError();\n        }\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /**\n     * Moves focus back into the dialog if it was moved out.\n     * @return {?}\n     */\n    _recaptureFocus() {\n        if (!this._containsFocus()) {\n            /** @type {?} */\n            const focusWasTrapped = this._getFocusTrap().focusInitialElement();\n            if (!focusWasTrapped) {\n                this._elementRef.nativeElement.focus();\n            }\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap.\n     * @private\n     * @return {?}\n     */\n    _trapFocus() {\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this._config.autoFocus) {\n            this._getFocusTrap().focusInitialElementWhenReady();\n        }\n        else if (!this._containsFocus()) {\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the dialog opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        /** @type {?} */\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this._config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            /** @type {?} */\n            const activeElement = this._document.activeElement;\n            /** @type {?} */\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the dialog or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement || activeElement === this._document.body || activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /**\n     * Saves a reference to the element that was focused before the dialog was opened.\n     * @private\n     * @return {?}\n     */\n    _savePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = (/** @type {?} */ (this._document.activeElement));\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._elementRef.nativeElement.focus()));\n            }\n        }\n    }\n    /**\n     * Returns whether focus is inside the dialog.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const activeElement = this._document.activeElement;\n        return element === activeElement || element.contains(activeElement);\n    }\n    /**\n     * Gets the focus trap associated with the dialog.\n     * @private\n     * @return {?}\n     */\n    _getFocusTrap() {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        return this._focusTrap;\n    }\n    /**\n     * Callback, invoked whenever an animation on the host completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else if (event.toState === 'exit') {\n            this._restoreFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Callback, invoked when an animation on the host starts.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    /**\n     * Starts the dialog exit animation.\n     * @return {?}\n     */\n    _startExitAnimation() {\n        this._state = 'exit';\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n}\nMatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) { return new (t || MatDialogContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MatDialogConfig)); };\nMatDialogContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDialogContainer, selectors: [[\"mat-dialog-container\"]], viewQuery: function MatDialogContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\", 1, \"mat-dialog-container\"], hostVars: 6, hostBindings: function MatDialogContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@dialogContainer.start\", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) { return ctx._onAnimationStart($event); })(\"@dialogContainer.done\", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) { return ctx._onAnimationDone($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx._id)(\"role\", ctx._config.role)(\"aria-labelledby\", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)(\"aria-label\", ctx._config.ariaLabel)(\"aria-describedby\", ctx._config.ariaDescribedBy || null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@dialogContainer\", ctx._state);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatDialogContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatDialogContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matDialogAnimations.dialogContainer] } });\n/** @nocollapse */\nMatDialogContainer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDialogConfig }\n];\nMatDialogContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-dialog-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matDialogAnimations.dialogContainer],\n                host: {\n                    'class': 'mat-dialog-container',\n                    'tabindex': '-1',\n                    'aria-modal': 'true',\n                    '[attr.id]': '_id',\n                    '[attr.role]': '_config.role',\n                    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n                    '[attr.aria-label]': '_config.ariaLabel',\n                    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n                    '[@dialogContainer]': '_state',\n                    '(@dialogContainer.start)': '_onAnimationStart($event)',\n                    '(@dialogContainer.done)': '_onAnimationDone($event)'\n                },\n                styles: [\".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusTrapFactory }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDialogConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._document;\n    /**\n     * The portal outlet inside of this container into which the dialog content will be loaded.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._portalOutlet;\n    /**\n     * The class that traps and manages focus within the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrap;\n    /**\n     * Element that was focused before the dialog was opened. Save this to restore upon close.\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n    /**\n     * State of the dialog animation.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._state;\n    /**\n     * Emits when an animation state changes.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._animationStateChanged;\n    /**\n     * ID of the element that should be considered as the dialog's label.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._ariaLabelledBy;\n    /**\n     * ID for the container DOM element.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._id;\n    /**\n     * Attaches a DOM portal to the dialog container.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDialogContainer.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogContainer.prototype._changeDetectorRef;\n    /**\n     * The dialog configuration.\n     * @type {?}\n     */\n    MatDialogContainer.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(jelbourn): resizing\n// Counter for unique dialog ids.\n/** @type {?} */\nlet uniqueId = 0;\n/** @enum {number} */\nconst MatDialogState = {\n    OPEN: 0, CLOSING: 1, CLOSED: 2,\n};\n/**\n * Reference to a dialog opened via the MatDialog service.\n * @template T, R\n */\nclass MatDialogRef {\n    /**\n     * @param {?} _overlayRef\n     * @param {?} _containerInstance\n     * @param {?=} id\n     */\n    constructor(_overlayRef, _containerInstance, id = `mat-dialog-${uniqueId++}`) {\n        this._overlayRef = _overlayRef;\n        this._containerInstance = _containerInstance;\n        this.id = id;\n        /**\n         * Whether the user is allowed to close the dialog.\n         */\n        this.disableClose = this._containerInstance._config.disableClose;\n        /**\n         * Subject for notifying the user that the dialog has finished opening.\n         */\n        this._afterOpened = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has finished closing.\n         */\n        this._afterClosed = new Subject();\n        /**\n         * Subject for notifying the user that the dialog has started closing.\n         */\n        this._beforeClosed = new Subject();\n        /**\n         * Current state of the dialog.\n         */\n        this._state = 0 /* OPEN */;\n        // Pass the id along to the container.\n        _containerInstance._id = id;\n        // Emit when opening animation completes\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'enter')), take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }));\n        // Dispose overlay when closing animation is complete\n        _containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'done' && event.toState === 'exit')), take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            clearTimeout(this._closeFallbackTimeout);\n            this._finishDialogClose();\n        }));\n        _overlayRef.detachments().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = (/** @type {?} */ (null));\n            this._overlayRef.dispose();\n        }));\n        _overlayRef.keydownEvents()\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n        })))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.preventDefault();\n            this.close();\n        }));\n        _overlayRef.backdropClick().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disableClose) {\n                this._containerInstance._recaptureFocus();\n            }\n            else {\n                this.close();\n            }\n        }));\n    }\n    /**\n     * Close the dialog.\n     * @param {?=} dialogResult Optional result to return to the dialog opener.\n     * @return {?}\n     */\n    close(dialogResult) {\n        this._result = dialogResult;\n        // Transition the backdrop in parallel to the dialog.\n        this._containerInstance._animationStateChanged.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event.phaseName === 'start')), take(1))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._beforeClosed.next(dialogResult);\n            this._beforeClosed.complete();\n            this._overlayRef.detachBackdrop();\n            // The logic that disposes of the overlay depends on the exit animation completing, however\n            // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n            // timeout which will clean everything up if the animation hasn't fired within the specified\n            // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n            // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n            this._closeFallbackTimeout = setTimeout((/**\n             * @return {?}\n             */\n            () => this._finishDialogClose()), event.totalTime + 100);\n        }));\n        this._containerInstance._startExitAnimation();\n        this._state = 1 /* CLOSING */;\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     * @return {?}\n     */\n    afterOpened() {\n        return this._afterOpened.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     * @return {?}\n     */\n    afterClosed() {\n        return this._afterClosed.asObservable();\n    }\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     * @return {?}\n     */\n    beforeClosed() {\n        return this._beforeClosed.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n    /**\n     * Updates the dialog's position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} position New dialog position.\n     * @return {THIS}\n     */\n    updatePosition(position) {\n        /** @type {?} */\n        let strategy = (/** @type {?} */ (this))._getPositionStrategy();\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        }\n        else {\n            strategy.centerHorizontally();\n        }\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        }\n        else {\n            strategy.centerVertically();\n        }\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Updates the dialog's width and height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} width New width of the dialog.\n     * @param {?=} height New height of the dialog.\n     * @return {THIS}\n     */\n    updateSize(width = '', height = '') {\n        (/** @type {?} */ (this))._getPositionStrategy().width(width).height(height);\n        (/** @type {?} */ (this))._overlayRef.updatePosition();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    addPanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.addPanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} classes\n     * @return {THIS}\n     */\n    removePanelClass(classes) {\n        (/** @type {?} */ (this))._overlayRef.removePanelClass(classes);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the current state of the dialog's lifecycle.\n     * @return {?}\n     */\n    getState() {\n        return this._state;\n    }\n    /**\n     * Finishes the dialog close by updating the state of the dialog\n     * and disposing the overlay.\n     * @private\n     * @return {?}\n     */\n    _finishDialogClose() {\n        this._state = 2 /* CLOSED */;\n        this._overlayRef.dispose();\n    }\n    /**\n     * Fetches the position strategy object from the overlay ref.\n     * @private\n     * @return {?}\n     */\n    _getPositionStrategy() {\n        return (/** @type {?} */ (this._overlayRef.getConfig().positionStrategy));\n    }\n}\nif (false) {\n    /**\n     * The instance of component opened into the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.componentInstance;\n    /**\n     * Whether the user is allowed to close the dialog.\n     * @type {?}\n     */\n    MatDialogRef.prototype.disableClose;\n    /**\n     * Subject for notifying the user that the dialog has finished opening.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterOpened;\n    /**\n     * Subject for notifying the user that the dialog has finished closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._afterClosed;\n    /**\n     * Subject for notifying the user that the dialog has started closing.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._beforeClosed;\n    /**\n     * Result to be passed to afterClosed.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._result;\n    /**\n     * Handle to the timeout that's running as a fallback in case the exit animation doesn't fire.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._closeFallbackTimeout;\n    /**\n     * Current state of the dialog.\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._state;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogRef.prototype._overlayRef;\n    /** @type {?} */\n    MatDialogRef.prototype._containerInstance;\n    /** @type {?} */\n    MatDialogRef.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to access the data that was passed in to a dialog.\n * @type {?}\n */\nconst MAT_DIALOG_DATA = new InjectionToken('MatDialogData');\n/**\n * Injection token that can be used to specify default dialog options.\n * @type {?}\n */\nconst MAT_DIALOG_DEFAULT_OPTIONS = new InjectionToken('mat-dialog-default-options');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY = new InjectionToken('mat-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.block());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_DIALOG_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nclass MatDialog {\n    /**\n     * @param {?} _overlay\n     * @param {?} _injector\n     * @param {?} _location\n     * @param {?} _defaultOptions\n     * @param {?} scrollStrategy\n     * @param {?} _parentDialog\n     * @param {?} _overlayContainer\n     */\n    constructor(_overlay, _injector, \n    /**\n     * @deprecated `_location` parameter to be removed.\n     * @breaking-change 10.0.0\n     */\n    _location, _defaultOptions, scrollStrategy, _parentDialog, _overlayContainer) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._defaultOptions = _defaultOptions;\n        this._parentDialog = _parentDialog;\n        this._overlayContainer = _overlayContainer;\n        this._openDialogsAtThisLevel = [];\n        this._afterAllClosedAtThisLevel = new Subject();\n        this._afterOpenedAtThisLevel = new Subject();\n        this._ariaHiddenElements = new Map();\n        // TODO (jelbourn): tighten the typing right-hand side of this expression.\n        /**\n         * Stream that emits when all open dialog have finished closing.\n         * Will emit on subscribe if there are no open dialogs to begin with.\n         */\n        this.afterAllClosed = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => this.openDialogs.length ?\n            this._afterAllClosed :\n            this._afterAllClosed.pipe(startWith(undefined))))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Keeps track of the currently-open dialogs.\n     * @return {?}\n     */\n    get openDialogs() {\n        return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n    }\n    /**\n     * Stream that emits when a dialog has been opened.\n     * @return {?}\n     */\n    get afterOpened() {\n        return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n    }\n    /**\n     * @return {?}\n     */\n    get _afterAllClosed() {\n        /** @type {?} */\n        const parent = this._parentDialog;\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n    }\n    /**\n     * Opens a modal dialog containing the given component.\n     * @template T, D, R\n     * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n     *     or a TemplateRef to instantiate as the dialog content.\n     * @param {?=} config Extra configuration options.\n     * @return {?} Reference to the newly-opened dialog.\n     */\n    open(componentOrTemplateRef, config) {\n        config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n        if (config.id && this.getDialogById(config.id)) {\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay(config);\n        /** @type {?} */\n        const dialogContainer = this._attachDialogContainer(overlayRef, config);\n        /** @type {?} */\n        const dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n        // If this is the first dialog that we're opening, hide all the non-overlay content.\n        if (!this.openDialogs.length) {\n            this._hideNonDialogContentFromAssistiveTechnology();\n        }\n        this.openDialogs.push(dialogRef);\n        dialogRef.afterClosed().subscribe((/**\n         * @return {?}\n         */\n        () => this._removeOpenDialog(dialogRef)));\n        this.afterOpened.next(dialogRef);\n        return dialogRef;\n    }\n    /**\n     * Closes all of the currently-open dialogs.\n     * @return {?}\n     */\n    closeAll() {\n        this._closeDialogs(this.openDialogs);\n    }\n    /**\n     * Finds an open dialog by its id.\n     * @param {?} id ID to use when looking up the dialog.\n     * @return {?}\n     */\n    getDialogById(id) {\n        return this.openDialogs.find((/**\n         * @param {?} dialog\n         * @return {?}\n         */\n        dialog => dialog.id === id));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // Only close the dialogs at this level on destroy\n        // since the parent service may still be active.\n        this._closeDialogs(this._openDialogsAtThisLevel);\n        this._afterAllClosedAtThisLevel.complete();\n        this._afterOpenedAtThisLevel.complete();\n    }\n    /**\n     * Creates the overlay into which the dialog will be loaded.\n     * @private\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the OverlayRef for the created overlay.\n     */\n    _createOverlay(config) {\n        /** @type {?} */\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an overlay config from a dialog config.\n     * @private\n     * @param {?} dialogConfig The dialog configuration.\n     * @return {?} The overlay configuration.\n     */\n    _getOverlayConfig(dialogConfig) {\n        /** @type {?} */\n        const state = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n            panelClass: dialogConfig.panelClass,\n            hasBackdrop: dialogConfig.hasBackdrop,\n            direction: dialogConfig.direction,\n            minWidth: dialogConfig.minWidth,\n            minHeight: dialogConfig.minHeight,\n            maxWidth: dialogConfig.maxWidth,\n            maxHeight: dialogConfig.maxHeight,\n            disposeOnNavigation: dialogConfig.closeOnNavigation\n        });\n        if (dialogConfig.backdropClass) {\n            state.backdropClass = dialogConfig.backdropClass;\n        }\n        return state;\n    }\n    /**\n     * Attaches an MatDialogContainer to a dialog's already-created overlay.\n     * @private\n     * @param {?} overlay Reference to the dialog's underlying overlay.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to a ComponentRef for the attached container.\n     */\n    _attachDialogContainer(overlay, config) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        /** @type {?} */\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatDialogConfig, useValue: config }]\n        });\n        /** @type {?} */\n        const containerPortal = new ComponentPortal(MatDialogContainer, config.viewContainerRef, injector, config.componentFactoryResolver);\n        /** @type {?} */\n        const containerRef = overlay.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Attaches the user-provided component to the already-created MatDialogContainer.\n     * @private\n     * @template T, R\n     * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n     *     or a TemplateRef to instantiate as the content.\n     * @param {?} dialogContainer Reference to the wrapping MatDialogContainer.\n     * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n     * @param {?} config The dialog configuration.\n     * @return {?} A promise resolving to the MatDialogRef that should be returned to the user.\n     */\n    _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        /** @type {?} */\n        const dialogRef = new MatDialogRef(overlayRef, dialogContainer, config.id);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            dialogContainer.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, (/** @type {?} */ (null)), (/** @type {?} */ ({ $implicit: config.data, dialogRef }))));\n        }\n        else {\n            /** @type {?} */\n            const injector = this._createInjector(config, dialogRef, dialogContainer);\n            /** @type {?} */\n            const contentRef = dialogContainer.attachComponentPortal(new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n            dialogRef.componentInstance = contentRef.instance;\n        }\n        dialogRef\n            .updateSize(config.width, config.height)\n            .updatePosition(config.position);\n        return dialogRef;\n    }\n    /**\n     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n     * of a dialog to close itself and, optionally, to return a value.\n     * @private\n     * @template T\n     * @param {?} config Config object that is used to construct the dialog.\n     * @param {?} dialogRef Reference to the dialog.\n     * @param {?} dialogContainer\n     * @return {?} The custom injector that can be used inside the dialog.\n     */\n    _createInjector(config, dialogRef, dialogContainer) {\n        /** @type {?} */\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The MatDialogContainer is injected in the portal as the MatDialogContainer and the dialog's\n        // content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the MatDialogContainer is explicitly\n        // added to the injection tokens.\n        /** @type {?} */\n        const providers = [\n            { provide: MatDialogContainer, useValue: dialogContainer },\n            { provide: MAT_DIALOG_DATA, useValue: config.data },\n            { provide: MatDialogRef, useValue: dialogRef }\n        ];\n        if (config.direction &&\n            (!userInjector || !userInjector.get(Directionality, null))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() }\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    /**\n     * Removes a dialog from the array of open dialogs.\n     * @private\n     * @param {?} dialogRef Dialog to be removed.\n     * @return {?}\n     */\n    _removeOpenDialog(dialogRef) {\n        /** @type {?} */\n        const index = this.openDialogs.indexOf(dialogRef);\n        if (index > -1) {\n            this.openDialogs.splice(index, 1);\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\n            // to a the siblings and emit to the `afterAllClosed` stream.\n            if (!this.openDialogs.length) {\n                this._ariaHiddenElements.forEach((/**\n                 * @param {?} previousValue\n                 * @param {?} element\n                 * @return {?}\n                 */\n                (previousValue, element) => {\n                    if (previousValue) {\n                        element.setAttribute('aria-hidden', previousValue);\n                    }\n                    else {\n                        element.removeAttribute('aria-hidden');\n                    }\n                }));\n                this._ariaHiddenElements.clear();\n                this._afterAllClosed.next();\n            }\n        }\n    }\n    /**\n     * Hides all of the content that isn't an overlay from assistive technology.\n     * @private\n     * @return {?}\n     */\n    _hideNonDialogContentFromAssistiveTechnology() {\n        /** @type {?} */\n        const overlayContainer = this._overlayContainer.getContainerElement();\n        // Ensure that the overlay container is attached to the DOM.\n        if (overlayContainer.parentElement) {\n            /** @type {?} */\n            const siblings = overlayContainer.parentElement.children;\n            for (let i = siblings.length - 1; i > -1; i--) {\n                /** @type {?} */\n                let sibling = siblings[i];\n                if (sibling !== overlayContainer &&\n                    sibling.nodeName !== 'SCRIPT' &&\n                    sibling.nodeName !== 'STYLE' &&\n                    !sibling.hasAttribute('aria-live')) {\n                    this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            }\n        }\n    }\n    /**\n     * Closes all of the dialogs in an array.\n     * @private\n     * @param {?} dialogs\n     * @return {?}\n     */\n    _closeDialogs(dialogs) {\n        /** @type {?} */\n        let i = dialogs.length;\n        while (i--) {\n            // The `_openDialogs` property isn't updated after close until the rxjs subscription\n            // runs on the next microtask, in addition to modifying the array as we're going\n            // through it. We loop through all of them and call close without assuming that\n            // they'll be removed from the list instantaneously.\n            dialogs[i].close();\n        }\n    }\n}\nMatDialog.ɵfac = function MatDialog_Factory(t) { return new (t || MatDialog)(ɵngcc0.ɵɵinject(ɵngcc3.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinject(MAT_DIALOG_SCROLL_STRATEGY), ɵngcc0.ɵɵinject(MatDialog, 12), ɵngcc0.ɵɵinject(ɵngcc3.OverlayContainer)); };\nMatDialog.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MatDialog, factory: MatDialog.ɵfac });\n/** @nocollapse */\nMatDialog.ctorParameters = () => [\n    { type: Overlay },\n    { type: Injector },\n    { type: Location, decorators: [{ type: Optional }] },\n    { type: MatDialogConfig, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DIALOG_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_SCROLL_STRATEGY,] }] },\n    { type: MatDialog, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: OverlayContainer }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialog, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc3.Overlay }, { type: ɵngcc0.Injector }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }, { type: MatDialogConfig, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DIALOG_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DIALOG_SCROLL_STRATEGY]\n            }] }, { type: MatDialog, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc3.OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._openDialogsAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterAllClosedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._afterOpenedAtThisLevel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._ariaHiddenElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._scrollStrategy;\n    /**\n     * Stream that emits when all open dialog have finished closing.\n     * Will emit on subscribe if there are no open dialogs to begin with.\n     * @type {?}\n     */\n    MatDialog.prototype.afterAllClosed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._defaultOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._parentDialog;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialog.prototype._overlayContainer;\n}\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @param {?=} defaultOptions Default options provided.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config, defaultOptions) {\n    return Object.assign(Object.assign({}, defaultOptions), config);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-content-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter used to generate unique IDs for dialog elements.\n * @type {?}\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nclass MatDialogClose {\n    /**\n     * @param {?} dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(dialogRef, _elementRef, _dialog) {\n        this.dialogRef = dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        /**\n         * Default to \"button\" to prevents accidental form submits.\n         */\n        this.type = 'button';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.dialogRef) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the DialogRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the DialogRef by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            this.dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n        if (proxiedChange) {\n            this.dialogResult = proxiedChange.currentValue;\n        }\n    }\n}\nMatDialogClose.ɵfac = function MatDialogClose_Factory(t) { return new (t || MatDialogClose)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogClose.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogClose, selectors: [[\"\", \"mat-dialog-close\", \"\"], [\"\", \"matDialogClose\", \"\"]], hostVars: 2, hostBindings: function MatDialogClose_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatDialogClose_click_HostBindingHandler() { return ctx.dialogRef.close(ctx.dialogResult); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"type\", ctx.type);\n    } }, inputs: { type: \"type\", dialogResult: [\"mat-dialog-close\", \"dialogResult\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], _matDialogClose: [\"matDialogClose\", \"_matDialogClose\"] }, exportAs: [\"matDialogClose\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatDialogClose.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogClose.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    type: [{ type: Input }],\n    dialogResult: [{ type: Input, args: ['mat-dialog-close',] }],\n    _matDialogClose: [{ type: Input, args: ['matDialogClose',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogClose, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-close], [matDialogClose]',\n                exportAs: 'matDialogClose',\n                host: {\n                    '(click)': 'dialogRef.close(dialogResult)',\n                    '[attr.aria-label]': 'ariaLabel || null',\n                    '[attr.type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { type: [{\n            type: Input\n        }], dialogResult: [{\n            type: Input,\n            args: ['mat-dialog-close']\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], _matDialogClose: [{\n            type: Input,\n            args: ['matDialogClose']\n        }] }); })();\nif (false) {\n    /**\n     * Screenreader label for the button.\n     * @type {?}\n     */\n    MatDialogClose.prototype.ariaLabel;\n    /**\n     * Default to \"button\" to prevents accidental form submits.\n     * @type {?}\n     */\n    MatDialogClose.prototype.type;\n    /**\n     * Dialog close input.\n     * @type {?}\n     */\n    MatDialogClose.prototype.dialogResult;\n    /** @type {?} */\n    MatDialogClose.prototype._matDialogClose;\n    /** @type {?} */\n    MatDialogClose.prototype.dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogClose.prototype._dialog;\n}\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nclass MatDialogTitle {\n    /**\n     * @param {?} _dialogRef\n     * @param {?} _elementRef\n     * @param {?} _dialog\n     */\n    constructor(_dialogRef, _elementRef, _dialog) {\n        this._dialogRef = _dialogRef;\n        this._elementRef = _elementRef;\n        this._dialog = _dialog;\n        this.id = `mat-dialog-title-${dialogElementUid++}`;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this._dialogRef) {\n            this._dialogRef = (/** @type {?} */ (getClosestDialog(this._elementRef, this._dialog.openDialogs)));\n        }\n        if (this._dialogRef) {\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const container = this._dialogRef._containerInstance;\n                if (container && !container._ariaLabelledBy) {\n                    container._ariaLabelledBy = this.id;\n                }\n            }));\n        }\n    }\n}\nMatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) { return new (t || MatDialogTitle)(ɵngcc0.ɵɵdirectiveInject(MatDialogRef, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatDialog)); };\nMatDialogTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogTitle, selectors: [[\"\", \"mat-dialog-title\", \"\"], [\"\", \"matDialogTitle\", \"\"]], hostAttrs: [1, \"mat-dialog-title\"], hostVars: 1, hostBindings: function MatDialogTitle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" }, exportAs: [\"matDialogTitle\"] });\n/** @nocollapse */\nMatDialogTitle.ctorParameters = () => [\n    { type: MatDialogRef, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: MatDialog }\n];\nMatDialogTitle.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogTitle, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-dialog-title], [matDialogTitle]',\n                exportAs: 'matDialogTitle',\n                host: {\n                    'class': 'mat-dialog-title',\n                    '[id]': 'id'\n                }\n            }]\n    }], function () { return [{ type: MatDialogRef, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: MatDialog }]; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDialogTitle.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialogRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDialogTitle.prototype._dialog;\n}\n/**\n * Scrollable content container of a dialog.\n */\nclass MatDialogContent {\n}\nMatDialogContent.ɵfac = function MatDialogContent_Factory(t) { return new (t || MatDialogContent)(); };\nMatDialogContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogContent, selectors: [[\"\", \"mat-dialog-content\", \"\"], [\"mat-dialog-content\"], [\"\", \"matDialogContent\", \"\"]], hostAttrs: [1, \"mat-dialog-content\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogContent, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n                host: { 'class': 'mat-dialog-content' }\n            }]\n    }], null, null); })();\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nclass MatDialogActions {\n}\nMatDialogActions.ɵfac = function MatDialogActions_Factory(t) { return new (t || MatDialogActions)(); };\nMatDialogActions.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatDialogActions, selectors: [[\"\", \"mat-dialog-actions\", \"\"], [\"mat-dialog-actions\"], [\"\", \"matDialogActions\", \"\"]], hostAttrs: [1, \"mat-dialog-actions\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogActions, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n                host: { 'class': 'mat-dialog-actions' }\n            }]\n    }], null, null); })();\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param {?} element Element relative to which to look for a dialog.\n * @param {?} openDialogs References to the currently-open dialogs.\n * @return {?}\n */\nfunction getClosestDialog(element, openDialogs) {\n    /** @type {?} */\n    let parent = element.nativeElement.parentElement;\n    while (parent && !parent.classList.contains('mat-dialog-container')) {\n        parent = parent.parentElement;\n    }\n    return parent ? openDialogs.find((/**\n     * @param {?} dialog\n     * @return {?}\n     */\n    dialog => dialog.id === (/** @type {?} */ (parent)).id)) : null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/dialog-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDialogModule {\n}\nMatDialogModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDialogModule });\nMatDialogModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDialogModule_Factory(t) { return new (t || MatDialogModule)(); }, providers: [\n        MatDialog,\n        MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[\n            OverlayModule,\n            PortalModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDialogModule, { declarations: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogActions,\n        MatDialogContent]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        MatCommonModule]; }, exports: function () { return [MatDialogContainer,\n        MatDialogClose,\n        MatDialogTitle,\n        MatDialogContent,\n        MatDialogActions,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDialogModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogContent,\n                    MatDialogActions,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatDialogContainer,\n                    MatDialogClose,\n                    MatDialogTitle,\n                    MatDialogActions,\n                    MatDialogContent,\n                ],\n                providers: [\n                    MatDialog,\n                    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n                ],\n                entryComponents: [MatDialogContainer]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/dialog/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, matDialogAnimations, throwMatDialogContentAlreadyAttachedError };\n\n//# sourceMappingURL=dialog.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c4 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c5 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSelectionList)))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    /** @type {?} */\n                    const shouldSelect = this.options.some((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.disabled && !option.selected));\n                    this._setAllOptionsSelected(shouldSelect, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @param {?=} skipDisabled\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelectionList_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelectionList_blur_HostBindingHandler() { return ctx._onTouched(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onTouched()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","import { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, END, hasModifierKey, HOME, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, query, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._handleKeydown($event); })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.closed.emit(\"click\"); })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._onAnimationStart($event); })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        (/** @type {?} */ (element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._outlet;\n    /**\n     * Emits when the menu content has been attached.\n     * @type {?}\n     */\n    MatMenuContent.prototype._attached;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._template;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n/**\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction MatMenuPanel() { }\nif (false) {\n    /** @type {?} */\n    MatMenuPanel.prototype.xPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.yPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.overlapTrigger;\n    /** @type {?} */\n    MatMenuPanel.prototype.templateRef;\n    /** @type {?} */\n    MatMenuPanel.prototype.close;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.parentMenu;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.direction;\n    /** @type {?} */\n    MatMenuPanel.prototype.focusFirstItem;\n    /** @type {?} */\n    MatMenuPanel.prototype.resetActiveItem;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.setPositionClasses;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.lazyContent;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.backdropClass;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.hasBackdrop;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.panelId;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.addItem;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.removeItem;\n    /**\n     * @param {?} depth\n     * @return {?}\n     */\n    MatMenuPanel.prototype.setElevation = function (depth) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * ARIA role for the menu item.\n         */\n        this.role = 'menuitem';\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Stream that emits when the menu item is focused.\n         */\n        this._focused = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disableRipple;\n    /**\n     * ARIA role for the menu item.\n     * @type {?}\n     */\n    MatMenuItem.prototype.role;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._document;\n    /**\n     * Stream that emits when the menu item is hovered.\n     * @type {?}\n     */\n    MatMenuItem.prototype._hovered;\n    /**\n     * Stream that emits when the menu item is focused.\n     * @type {?}\n     */\n    MatMenuItem.prototype._focused;\n    /**\n     * Whether the menu item is highlighted.\n     * @type {?}\n     */\n    MatMenuItem.prototype._highlighted;\n    /**\n     * Whether the menu item acts as a trigger for a sub-menu.\n     * @type {?}\n     */\n    MatMenuItem.prototype._triggersSubmenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._focusMonitor;\n    /** @type {?} */\n    MatMenuItem.prototype._parentMenu;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-menu` options that can be overridden.\n * @record\n */\nfunction MatMenuDefaultOptions() { }\nif (false) {\n    /**\n     * The x-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.xPosition;\n    /**\n     * The y-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.yPosition;\n    /**\n     * Whether the menu should overlap the menu trigger.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.overlapTrigger;\n    /**\n     * Class to be applied to the menu's backdrop.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.backdropClass;\n    /**\n     * Whether the menu has a backdrop.\n     * @type {?|undefined}\n     */\n    MatMenuDefaultOptions.prototype.hasBackdrop;\n}\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n * @type {?}\n */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n/** @type {?} */\nlet menuPanelUid = 0;\n/**\n * Base class with all of the `MatMenu` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Only the direct descendant menu items.\n         */\n        this._directDescendantItems = new QueryList();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        /** @type {?} */\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = false;\n            }));\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = true;\n            }));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe((/**\n         * @return {?}\n         */\n        () => this.closed.emit('tab')));\n        // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._focused)))))).subscribe((/**\n         * @param {?} focusedItem\n         * @return {?}\n         */\n        focusedItem => this._keyManager.updateActiveItem(focusedItem)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        /** @type {?} */\n        const itemChanges = (/** @type {?} */ (this._directDescendantItems.changes));\n        return (/** @type {?} */ (itemChanges.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._hovered))))))));\n    }\n    /*\n       * Registers a menu item with the menu.\n       * @docs-private\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 9.0.0\n       */\n    /**\n     * @param {?} _item\n     * @return {?}\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 9.0.0\n     * @param {?} _item\n     * @return {?}\n     */\n    removeItem(_item) { }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._focusFirstItem(origin)));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _focusFirstItem(origin) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            /** @type {?} */\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        /** @type {?} */\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${elevation}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => c.startsWith('mat-elevation-z')));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     * @private\n     * @return {?}\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._directDescendantItems.reset(items.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => item._parentMenu === this)));\n            this._directDescendantItems.notifyOnChanges();\n        }));\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n/** @nocollapse */\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MatMenuContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_overlapTrigger;\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._keyManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._xPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._yPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousElevation;\n    /**\n     * All items inside the menu. Includes items nested inside another menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._allItems;\n    /**\n     * Only the direct descendant menu items.\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._directDescendantItems;\n    /**\n     * Subscription to tab events on the menu panel\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._tabSubscription;\n    /**\n     * Config object to be passed into the menu's ngClass\n     * @type {?}\n     */\n    _MatMenuBase.prototype._classList;\n    /**\n     * Current state of the panel animation.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._panelAnimationState;\n    /**\n     * Emits whenever an animation on the menu completes.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._animationDone;\n    /**\n     * Whether the menu is animating.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._isAnimating;\n    /**\n     * Parent menu of the current menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.parentMenu;\n    /**\n     * Layout direction of the menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.direction;\n    /**\n     * Class to be added to the backdrop element.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.backdropClass;\n    /**\n     * aria-label for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabel;\n    /**\n     * aria-labelledby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabelledby;\n    /**\n     * aria-describedby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaDescribedby;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.templateRef;\n    /**\n     * List of the items inside of a menu.\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.items;\n    /**\n     * Menu content that will be rendered lazily.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.lazyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._overlapTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousPanelClass;\n    /**\n     * Event emitted when the menu is closed.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.closed;\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.close;\n    /** @type {?} */\n    _MatMenuBase.prototype.panelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._defaultOptions;\n}\n/**\n * \\@docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs.\n */\nclass MatMenu extends _MatMenuBase {\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return ɵMatMenu_BaseFactory(t || MatMenu); };\nMatMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenu, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatMenu_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatMenu);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Directive\n    }], null, null); })();\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/**\n * \\@docs-public MatMenu\n */\n// tslint:disable-next-line:class-name\nclass _MatMenu extends MatMenu {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} defaultOptions\n     */\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ɵfac = function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/** @nocollapse */\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ],\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @type {?}\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * Options for binding a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * Directive applied to an element that should trigger a `mat-menu`.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (/**\n         * @return {?}\n         */\n        () => this._openedBy = 'touch');\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * References the menu instance that the trigger is associated with.\n     * @return {?}\n     */\n    get menu() { return this._menu; }\n    /**\n     * @param {?} menu\n     * @return {?}\n     */\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            this._menuCloseSubscription = menu.close.asObservable().subscribe((/**\n             * @param {?} reason\n             * @return {?}\n             */\n            reason => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        /** @type {?} */\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition((/** @type {?} */ (overlayConfig.positionStrategy)));\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe((/**\n         * @return {?}\n         */\n        () => this.closeMenu()));\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @private\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        this._restoreFocus();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                event => event.toState === 'void')), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: (/**\n                     * @return {?}\n                     */\n                    () => (/** @type {?} */ (menu.lazyContent)).detach()),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: (/**\n                     * @return {?}\n                     */\n                    () => this._setIsMenuOpen(false))\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @private\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the menu was open.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    /**\n     * @private\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @private\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions((/** @type {?} */ (config.positionStrategy)));\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @private\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                (/** @type {?} */ (this.menu.setPositionClasses))(posX, posY);\n            }));\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @private\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @private\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = (/** @type {?} */ (this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = (/** @type {?} */ (this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active !== this._menuItemInstance)), filter((/**\n         * @return {?}\n         */\n        () => this._menuOpen))) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @private\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active === this._menuItemInstance && !active.disabled)), delay(0, asapScheduler))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.openMenu()));\n            }\n            else {\n                this.openMenu();\n            }\n        }));\n    }\n    /**\n     * Gets the portal that should be attached to the overlay.\n     * @private\n     * @return {?}\n     */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._closingActionsSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._hoverSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuCloseSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._scrollStrategy;\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._handleTouchStart;\n    /** @type {?} */\n    MatMenuTrigger.prototype._openedBy;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menu;\n    /**\n     * Data to be passed along to any lazily-rendered content.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuData;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.restoreFocus;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuOpened;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuOpen;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuClosed;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._parentMenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuItemInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger,\n        MatMenuContent]; }, exports: function () { return [MatMenuTrigger,\n        MatMenuContent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ],\n        CdkScrollableModule, MatCommonModule,\n        _MatMenuDirectivesModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu,\n        MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule,\n        _MatMenu,\n        MatMenuItem,\n        _MatMenuDirectivesModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, _MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-positions.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenu, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n//# sourceMappingURL=menu.js.map","import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Last animation end data.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = [\"primaryValueBar\"];\nfunction ProgressAnimationEnd() { }\nif (false) {\n    /** @type {?} */\n    ProgressAnimationEnd.prototype.value;\n}\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressBarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * Stubbed out location for `MatProgressBar`.\n * \\@docs-private\n * @record\n */\nfunction MatProgressBarLocation() { }\nif (false) {\n    /** @type {?} */\n    MatProgressBarLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                    .pipe(filter(((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => e.target === element))))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this.animationEnd.next({ value: this.value })));\n                    }\n                }));\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.ɵfac = function MatProgressBar_Factory(t) { return new (t || MatProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_BAR_LOCATION, 8)); };\nMatProgressBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressBar, selectors: [[\"mat-progress-bar\"]], viewQuery: function MatProgressBar_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._primaryValueBar = _t.first);\n    } }, hostAttrs: [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"mat-progress-bar\"], hostVars: 4, hostBindings: function MatProgressBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.mode === \"indeterminate\" || ctx.mode === \"query\" ? null : ctx.value)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._isNoopAnimation);\n    } }, inputs: { color: \"color\", mode: \"mode\", value: \"value\", bufferValue: \"bufferValue\" }, outputs: { animationEnd: \"animationEnd\" }, exportAs: [\"matProgressBar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 9, vars: 4, consts: [[\"width\", \"100%\", \"height\", \"4\", \"focusable\", \"false\", 1, \"mat-progress-bar-background\", \"mat-progress-bar-element\"], [\"x\", \"4\", \"y\", \"0\", \"width\", \"8\", \"height\", \"4\", \"patternUnits\", \"userSpaceOnUse\", 3, \"id\"], [\"cx\", \"2\", \"cy\", \"2\", \"r\", \"2\"], [\"width\", \"100%\", \"height\", \"100%\"], [1, \"mat-progress-bar-buffer\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [1, \"mat-progress-bar-primary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\", 3, \"ngStyle\"], [\"primaryValueBar\", \"\"], [1, \"mat-progress-bar-secondary\", \"mat-progress-bar-fill\", \"mat-progress-bar-element\"]], template: function MatProgressBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"defs\");\n        ɵngcc0.ɵɵelementStart(2, \"pattern\", 1);\n        ɵngcc0.ɵɵelement(3, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(4, \"rect\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(5, \"div\", 4);\n        ɵngcc0.ɵɵelement(6, \"div\", 5, 6);\n        ɵngcc0.ɵɵelement(8, \"div\", 7);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.progressbarId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"fill\", ctx._rectangleFillValue);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._bufferTransform());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._primaryTransform());\n    } }, directives: [ɵngcc1.NgStyle], styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  The background div is named as such because it appears below the other divs and is not sized based\\n  on values.\\n-->\\n<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n  <defs>\\n    <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n      <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    </pattern>\\n  </defs>\\n  <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n</svg>\\n<div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n<div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n<div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PROGRESS_BAR_LOCATION]\n            }] }]; }, { animationEnd: [{\n            type: Output\n        }], mode: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], bufferValue: [{\n            type: Input\n        }], _primaryValueBar: [{\n            type: ViewChild,\n            args: ['primaryValueBar']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatProgressBar.ngAcceptInputType_value;\n    /**\n     * Flag that indicates whether NoopAnimations mode is set to true.\n     * @type {?}\n     */\n    MatProgressBar.prototype._isNoopAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._bufferValue;\n    /** @type {?} */\n    MatProgressBar.prototype._primaryValueBar;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     * @type {?}\n     */\n    MatProgressBar.prototype.animationEnd;\n    /**\n     * Reference to animation end subscription to be unsubscribed on destroy.\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._animationEndSubscription;\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     * @type {?}\n     */\n    MatProgressBar.prototype.mode;\n    /**\n     * ID of the progress bar.\n     * @type {?}\n     */\n    MatProgressBar.prototype.progressbarId;\n    /**\n     * Attribute to be used for the `fill` attribute on the internal `rect` element.\n     * @type {?}\n     */\n    MatProgressBar.prototype._rectangleFillValue;\n    /** @type {?} */\n    MatProgressBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._ngZone;\n    /** @type {?} */\n    MatProgressBar.prototype._animationMode;\n}\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressBarModule });\nMatProgressBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressBarModule_Factory(t) { return new (t || MatProgressBarModule)(); }, imports: [[CommonModule, MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressBarModule, { declarations: function () { return [MatProgressBar]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatProgressBar,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n\n//# sourceMappingURL=progress-bar.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base reference size of the spinner.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0.diameter)(\"stroke-dashoffset\", ctx_r0._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r0._strokeCircumference, \"px\")(\"stroke-width\", ctx_r0._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._circleRadius);\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._strokeDashOffset, \"px\")(\"stroke-dasharray\", ctx_r1._strokeCircumference, \"px\")(\"stroke-width\", ctx_r1._circleStrokeWidth, \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._circleRadius);\n} }\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * \\@docs-private\n * @type {?}\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/**\n * \\@docs-private\n */\nclass MatProgressSpinnerBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressSpinnerBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/**\n * Default `mat-progress-spinner` options that can be overridden.\n * @record\n */\nfunction MatProgressSpinnerDefaultOptions() { }\nif (false) {\n    /**\n     * Diameter of the spinner.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.diameter;\n    /**\n     * Width of the spinner's stroke.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype.strokeWidth;\n    /**\n     * Whether the animations should be force to be enabled, ignoring if the current environment is\n     * using NoopAnimationsModule.\n     * @type {?|undefined}\n     */\n    MatProgressSpinnerDefaultOptions.prototype._forceAnimations;\n}\n/**\n * Injection token to be used to override the default options for `mat-progress-spinner`.\n * @type {?}\n */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\n/** @type {?} */\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} platform\n     * @param {?} _document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /**\n         * Mode of the progress circle\n         */\n        this.mode = 'determinate';\n        /** @type {?} */\n        const trackedDiameters = MatProgressSpinner._diameters;\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /**\n     * The diameter of the progress spinner (will set width and height of svg).\n     * @return {?}\n     */\n    get diameter() { return this._diameter; }\n    /**\n     * @param {?} size\n     * @return {?}\n     */\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /**\n     * Stroke width of the progress spinner.\n     * @return {?}\n     */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /**\n     * Value of the progress circle.\n     * @return {?}\n     */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        /** @type {?} */\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /**\n     * The radius of the spinner, adjusted for stroke width.\n     * @return {?}\n     */\n    get _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /**\n     * The view box of the spinner's svg element.\n     * @return {?}\n     */\n    get _viewBox() {\n        /** @type {?} */\n        const viewBox = this._circleRadius * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /**\n     * The stroke circumference of the svg circle.\n     * @return {?}\n     */\n    get _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius;\n    }\n    /**\n     * The dash offset of the svg circle.\n     * @return {?}\n     */\n    get _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._strokeCircumference * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._strokeCircumference * 0.2;\n        }\n        return null;\n    }\n    /**\n     * Stroke width of the circle in percent.\n     * @return {?}\n     */\n    get _circleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /**\n     * Dynamically generates a style tag containing the correct animation for this diameter.\n     * @private\n     * @return {?}\n     */\n    _attachStyleNode() {\n        /** @type {?} */\n        const styleRoot = this._styleRoot;\n        /** @type {?} */\n        const currentDiameter = this._diameter;\n        /** @type {?} */\n        const diameters = MatProgressSpinner._diameters;\n        /** @type {?} */\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            /** @type {?} */\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', currentDiameter + '');\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /**\n     * Generates animation styles adjusted for the spinner's diameter.\n     * @private\n     * @return {?}\n     */\n    _getAnimationText() {\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * this._strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * this._strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this.diameter}`);\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\n/** @nocollapse */\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n     * We need to keep track of which elements the diameters were attached to, because for\n     * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n     * than the document head.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner._diameters;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_diameter;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_strokeWidth;\n    /** @type {?} */\n    MatProgressSpinner.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._diameter;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._strokeWidth;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._fallbackAnimation;\n    /**\n     * Element to which we should add the generated style tags for the indeterminate animation.\n     * For most elements this is the document, but for the ones in the Shadow DOM we need to\n     * use the shadow root.\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._styleRoot;\n    /**\n     * Whether the _mat-animation-noopable class should be applied, disabling animations.\n     * @type {?}\n     */\n    MatProgressSpinner.prototype._noopAnimations;\n    /**\n     * Mode of the progress circle\n     * @type {?}\n     */\n    MatProgressSpinner.prototype.mode;\n    /** @type {?} */\n    MatProgressSpinner.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressSpinner.prototype._document;\n}\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    /**\n     * @param {?} elementRef\n     * @param {?} platform\n     * @param {?} document\n     * @param {?} animationMode\n     * @param {?=} defaults\n     */\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._viewBox);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_viewBox\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + diameter\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_circleRadius\\\"\\n    [style.stroke-dashoffset.px]=\\\"_strokeDashOffset\\\"\\n    [style.stroke-dasharray.px]=\\\"_strokeCircumference\\\"\\n    [style.stroke-width.%]=\\\"_circleStrokeWidth\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/progress-spinner-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner,\n        MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner,\n        MatSpinner,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-spinner/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ],\n        CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","import { Directive, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatToolbar.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._checkToolbarMixedModes()));\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @private\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !(node.classList && node.classList.contains('mat-toolbar-row'))))\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)))\n            .some((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !!(node.textContent && node.textContent.trim())));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._document;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar,\n        MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar,\n        MatToolbarRow,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n//# sourceMappingURL=toolbar.js.map","import { Component, OnInit } from '@angular/core';\nimport { BotCreateComponent } from '../dialog/bot-create/bot-create.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BotService } from 'src/app/shared/services/bots.service';\nimport { BotRemoveComponent } from '../dialog/bot-remove/bot-remove.component';\nimport { Bot } from 'src/app/shared/models/bots.model';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-bots',\n  templateUrl: './bots.component.html',\n  styleUrls: ['./bots.component.css']\n})\nexport class BotsComponent implements OnInit {\n\n  loading = true;\n  //variable\n  bots: any = [];\n\n\n\n  constructor(\n    private botServer: BotService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar\n    ) { }\n\n  ngOnInit() {\n    this.getAllBot();\n  }\n\n  // reload data bot\n  refresh() {\n    this.getAllBot();\n  }\n\n  // opne diaglog create bot\n  diagCreateBot() {\n    this.createBot();\n  }\n  // opne diaglog remove bot\n  diagRemoveBot(data: any) {\n    this.removeBot(data);\n  }\n\n\n\n\n\n\n\n\n\n\n  //get all bot\n  getAllBot() {\n    this.botServer.getAllBots()\n      .subscribe(res => {\n\n        //this.connectFail = false;\n        this.bots = res['data'] as Bot[];\n        localStorage.setItem('tpsoftbot_client', JSON.stringify(this.bots));\n        setTimeout(() => {\n          this.loading = false;\n        }, 500);\n\n      },\n        error => {\n          this.loading = false;\n          this._snackBar.open('Đã có lỗi xảy ra', 'OK', {\n            duration: 1000\n          });\n          //this.connectFail = true;\n        }\n      );\n  }\n\n  //save localstorage data info bot\n  saveLocalStorageBot(data: any){\n    localStorage.setItem('tpsoftbot_client', JSON.stringify(data));\n  }\n\n  //create bot\n  createBot() {\n    const dialogRef = this.dialog.open(BotCreateComponent, {\n      data: null,\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.action === 1) {\n        this.botServer.createBots(result.data).subscribe(\n          res => {\n            if (res.status === 200) {\n              this.getAllBot();\n              this._snackBar.open('Thao tác thành công', 'OK', {\n                duration: 1000\n              });\n            } else {\n              this._snackBar.open('Thao tác không thành công', 'OK', {\n                duration: 1000\n              });\n            }\n          },\n          error => {\n            this._snackBar.open('Thao tác không thành công', 'OK', {\n              duration: 1000\n            });\n            //this.connectFail = true;\n          }\n        );\n      }\n    });\n\n  }\n\n  //remove bot\n  removeBot(bot:any) {\n    const dialogRef = this.dialog.open(BotRemoveComponent, {\n      data: bot,\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.action === 1) {\n        this.botServer.removeBot(bot.botId).subscribe(\n          res => {\n            if (res.status === 200) {\n              this.getAllBot();\n              this._snackBar.open('Thao tác thành công', 'OK', {\n                duration: 1000\n              });\n            } else {\n              this._snackBar.open('Thao tác không thành công', 'OK', {\n                duration: 1000\n              });\n            }\n          },\n          error => {\n            this._snackBar.open('Thao tác không thành công', 'OK', {\n              duration: 1000\n            });\n            //this.connectFail = true;\n          }\n        );\n      }\n    });\n  }\n\n}\n","<!-- Applying the mat-tyography class adds styles for native elements. -->\n<mat-toolbar>\n\n    <button mat-icon-button color=\"primary\" class=\"btn-back\">\n        <mat-icon>arrow_back_ios</mat-icon>\n    </button>\n    <span class=\"title-header\">QUẢN LÝ BOT</span>\n\n    <div class=\"right-header\">\n        <div class=\"func-header\">\n            <span class=\"btn-header\">\n                <button mat-button color=\"primary\" (click)=\"refresh()\">\n                    <mat-icon>refresh</mat-icon>\n                    LÀM MỚI\n                </button>\n            </span>\n            <span class=\"btn-header\">\n                <!-- <button mat-button color=\"primary\" (click)=\"diagCreateBot()\">\n                    <mat-icon>add</mat-icon>\n                    TẠO MỚI BOT\n                </button> -->\n            </span>\n        </div>\n    </div>\n\n</mat-toolbar>\n<div class=\"page-content_1\" *ngIf=\"loading else isloading\">\n    <div class=\"loading\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n            style=\"margin:auto;background:transparent;display:block;\" width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\"\n            preserveAspectRatio=\"xMidYMid\">\n            <rect fill=\"#e91624\" x=\"55\" y=\"15\" width=\"30\" height=\"30\" rx=\"3\" ry=\"3\">\n                <animate attributeName=\"x\" dur=\"2s\" repeatCount=\"indefinite\"\n                    keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\"\n                    begin=\"-1.8333333333333333s\"></animate>\n                <animate attributeName=\"y\" dur=\"2s\" repeatCount=\"indefinite\"\n                    keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\"\n                    begin=\"-1.3333333333333333s\"></animate>\n            </rect>\n            <rect fill=\"#f0a65a\" x=\"15\" y=\"50.388\" width=\"30\" height=\"30\" rx=\"3\" ry=\"3\">\n                <animate attributeName=\"x\" dur=\"2s\" repeatCount=\"indefinite\"\n                    keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\"\n                    begin=\"-1.1666666666666667s\"></animate>\n                <animate attributeName=\"y\" dur=\"2s\" repeatCount=\"indefinite\"\n                    keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\"\n                    begin=\"-0.6666666666666666s\"></animate>\n            </rect>\n            <rect fill=\"#13d00d\" x=\"55\" y=\"55\" width=\"30\" height=\"30\" rx=\"3\" ry=\"3\">\n                <animate attributeName=\"x\" dur=\"2s\" repeatCount=\"indefinite\"\n                    keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\"\n                    begin=\"-0.5s\"></animate>\n                <animate attributeName=\"y\" dur=\"2s\" repeatCount=\"indefinite\"\n                    keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"0s\">\n                </animate>\n            </rect>\n        </svg>\n    </div>\n</div>\n\n<ng-template #isloading>\n\n    <div class=\"page-content\">\n        <!-- list-bot -->\n        <div class=\"container-fluid\" *ngIf=\"!(bots == undefined ||bots.length == 0)\">\n            <div class=\"list-bot\">\n                <div class=\"row\">\n                    <div class=\"col col-md-3 item-bot\" *ngFor=\"let item of bots\">\n                        <mat-card class=\"example-card\">\n                            <mat-card-content>\n                                <div class=\"btn-bot-option\">\n                                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Setting\">\n                                        <mat-icon>more_vert</mat-icon>\n                                    </button>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button mat-menu-item *ngIf=\"item.isActive\">\n                                            <mat-icon>lock</mat-icon>\n                                            <span>Khóa Bot</span>\n                                        </button>\n                                        <button mat-menu-item *ngIf=\"!item.isActive\">\n                                            <mat-icon>lock_open</mat-icon>\n                                            <span>Mở khóa Bot</span>\n                                        </button>\n                                        <button mat-menu-item disabled>\n                                            <mat-icon>file_copy</mat-icon>\n                                            <span>Tạo bản sao</span>\n                                        </button>\n                                        <button mat-menu-item (click)=\"diagRemoveBot(item)\">\n                                            <mat-icon color=\"warn\">delete_sweep</mat-icon>\n                                            <span>Xóa bot</span>\n                                        </button>\n                                    </mat-menu>\n                                </div>\n                                <mat-list>\n                                    <mat-list-item class=\"mat-list-item-name\">\n                                        <mat-icon mat-list-icon>filter_center_focus</mat-icon>\n                                        <span mat-line class=\"item-bot-name\">{{item.name}}</span>\n                                    </mat-list-item>\n\n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> ID: {{item.botId}} </p>\n                                        </mat-list-item>\n                                    </div>\n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> NGÔN NGỮ: {{item.lang== \"vi\"? \"Tiếng Việt\": \"Tiếng Anh\"}} </p>\n                                        </mat-list-item>\n                                    </div>\n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> Mô tả: {{item.desc}} </p>\n                                        </mat-list-item>\n                                    </div>\n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> NGÀY TẠO: {{item.createdAt}} </p>\n                                        </mat-list-item>\n                                    </div>\n\n                                    <mat-divider></mat-divider>\n\n                                </mat-list>\n\n                                <button mat-button [routerLink]=\"['bots',item.botId]\">\n                                    <mat-icon>arrow_forward</mat-icon><span>Đi đến Bot</span>\n                                </button>\n                            </mat-card-content>\n                        </mat-card>\n                    </div>\n                    <div class=\"col col-md-3 item-bot\">\n                        <div class=\"card-add\" (click)=\"diagCreateBot()\">\n                            <mat-icon>add</mat-icon>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n        <div class=\"container-fluid\" *ngIf=\"(bots == undefined ||bots.length == 0)\">\n            <div class=\"list-bot\" *ngIf=\"(bots == undefined ||bots.length == 0)\">\n                <div class=\"row\">\n                    <div class=\"col col-md-3 item-bot\">\n                        <div class=\"card-add\" (click)=\"diagCreateBot()\">\n                            <mat-icon>add</mat-icon>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- end -->\n\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerComponent } from './customer.component';\nimport { BotsComponent } from './bots/bots.component';\n// import { OverviewComponent } from './overview/overview.component';\n// import { ProfilesComponent } from './profiles/profiles.component';\n// import { SupportsComponent } from './supports/supports.component';\n// import { GuidesComponent } from './guides/guides.component';\nimport { AuthGuardService } from '../shared/guards/auth-guard.service';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: CustomerComponent,\n    children: [\n      {\n        path: '', component: BotsComponent\n      },\n      // {\n      //   path: 'profiles', component: ProfilesComponent\n      // },\n\n\n      // {\n      //   path: '', redirectTo: 'overviews', pathMatch: 'full'\n      // },\n      // {\n      //   path: '', redirectTo: 'home', pathMatch: 'full'\n      // },\n\n    ]\n  },\n  { path: 'bots', loadChildren: () => import('../bot/bot.module').then(m => m.BotModule), canActivate: [AuthGuardService] },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Event as RouterEvent, Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\nimport { AuthService } from '../shared/guards/auth.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  screenWidth: number;\n  loading = true;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    ) {\n    // set screenWidth on page load\n    this.screenWidth = window.innerWidth;\n    window.onresize = () => {\n      // set screenWidth on screen size change\n      this.screenWidth = window.innerWidth;\n    };\n\n    router.events.subscribe((event: RouterEvent) => {\n      this.navigationInterceptor(event)\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  logout(){\n    this.authService.logOut();\n  }\n\n\n  // Shows and hides the loading spinner during RouterEvent changes\n  navigationInterceptor(event: RouterEvent): void {\n    if (event instanceof NavigationStart) {\n      this.loading = true\n    }\n    if (event instanceof NavigationEnd) {\n      setTimeout(() => {\n        this.loading = false;\n      }, 500);\n    }\n\n    if (event instanceof NavigationCancel) {\n      this.loading = false\n    }\n    if (event instanceof NavigationError) {\n      this.loading = false\n    }\n  }\n\n\n  \n\n}\n","<!-- Toolbar -->\n<mat-toolbar color=\"primary\">\n    <button  mat-icon-button aria-label=\"menu\">\n        <mat-icon>notes</mat-icon>\n    </button>\n    <span class=\"lb-logo\">AI - CHATCARE</span>\n\n    <div class=\"bar-right\">\n       \n        <button mat-icon-button *ngIf=\"loading\">\n            <mat-icon class=\"sysnc\">autorenew</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <mat-icon>help</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <mat-icon>notifications</mat-icon>\n        </button>\n        <button mat-icon-button [matMenuTriggerFor]=\"notification\">\n            <mat-icon>more_vert</mat-icon>\n        </button>\n\n\n    </div>\n\n    <mat-menu #notification=\"matMenu\">\n        <button mat-menu-item disabled>\n            <mat-icon>account_box</mat-icon>\n            <span>Tài khoản</span>\n          </button>\n          <button mat-menu-item disabled>\n            <mat-icon>supervisor_account</mat-icon>\n            <span>Quản lý người dùng</span>\n          </button>\n          <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>power_settings_new</mat-icon>\n            <span>Đăng xuất</span>\n          </button>\n    </mat-menu>\n\n</mat-toolbar>\n<!-- <mat-progress-bar *ngIf=\"loading\" color=\"warn\" mode=\"indeterminate\"></mat-progress-bar> -->\n\n<mat-sidenav-container class=\"customers-page\">\n    <!-- Sidenav -->\n    <!-- <mat-sidenav #sidenav [opened]=\"screenWidth > 840\" [mode]=\"(screenWidth > 840) ? 'side' : 'over'\">\n        <mat-toolbar><span class=\"title-header\"> <span>\n                    <mat-icon>accessibility</mat-icon>\n                </span>KHÁCH HÀNG</span></mat-toolbar>\n        <mat-nav-list>\n            <a mat-list-item routerLink=\"/customers/bots\" routerLinkActive=\"active\">\n                <mat-icon>content_paste</mat-icon> Quản lý bot\n            </a>\n            <a mat-list-item routerLink=\"/customers/profiles\" routerLinkActive=\"active\">\n                <mat-icon>person</mat-icon> Tài khoản\n            </a>\n\n            <a mat-list-item routerLink=\"/customers/guides\" routerLinkActive=\"active\">\n                <mat-icon>books</mat-icon> Hướng dẫn\n            </a>\n            <a mat-list-item routerLink=\"/customers/supports\" routerLinkActive=\"active\">\n                <mat-icon>help</mat-icon> Trợ giúp\n            </a>\n        </mat-nav-list>\n    </mat-sidenav> -->\n\n    <!-- Main content -->\n    <mat-sidenav-content>\n        <div class=\"loading\"></div>\n        <router-outlet></router-outlet>\n\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CustomerRoutingModule } from './customer-routing.module';\nimport { CustomerComponent } from './customer.component';\nimport { BotsComponent } from './bots/bots.component';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { OverviewComponent } from './overview/overview.component';\nimport { SupportsComponent } from './supports/supports.component';\nimport { ProfilesComponent } from './profiles/profiles.component';\nimport { GuidesComponent } from './guides/guides.component';\nimport { BotCreateComponent } from './dialog/bot-create/bot-create.component';\nimport { BotRemoveComponent } from './dialog/bot-remove/bot-remove.component';\nimport { BotService } from '../shared/services/bots.service';\nimport { MatSelectModule } from '@angular/material/select';\nimport { JwtModule, JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\nimport { AuthInterceptor } from '../shared/guards/auth.interceptor';\n\n\n@NgModule({\n  declarations: [\n    CustomerComponent,\n    BotsComponent,\n    OverviewComponent,\n    SupportsComponent,\n    ProfilesComponent,\n    GuidesComponent,\n    BotCreateComponent,\n    BotRemoveComponent\n  ],\n  imports: [\n    CommonModule,\n    CustomerRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatSelectModule,\n\n  ],\n  providers: [\n    BotService,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  ],\n  entryComponents: [\n    BotCreateComponent,\n    BotRemoveComponent,\n  ]\n})\nexport class CustomerModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { BotsComponent } from '../../bots/bots.component';\nimport { NgForm } from '@angular/forms';\nimport { Bot } from 'src/app/shared/models/bots.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-bot-create',\n  templateUrl: './bot-create.component.html',\n  styleUrls: ['./bot-create.component.css']\n})\nexport class BotCreateComponent implements OnInit {\n\n  langs = [{code: 'en', name:'Tiếng Anh'},{code: 'vi', name:'Tiếng Việt'} ];\n\n  model = new Bot(null, null,null, this.langs[0].code,null, null, true);\n\n  constructor(\n    //private botServer: BotService,\n    //private toastr: ToastrService,\n    public dialogRef: MatDialogRef<BotsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    ) { }\n\n  ngOnInit() {\n  }\n\n  newBot(f:NgForm) {\n    this.dialogRef.close({action: 1, data: f.value});\n  }\n\n}\n","<span class=\"lb-header\" mat-dialog-title>Thêm mới Bot</span>\n<mat-dialog-content class=\"mat-typography\">\n  <form  #botForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"name\">Tên bot</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"model.name\" name=\"name\" #name=\"ngModel\">\n      <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n        Tên bot không được trống\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lang\">Ngôn ngữ</label>\n      <select class=\"form-control\" id=\"lang\" required [(ngModel)]=\"model.lang\" name=\"lang\" #lang=\"ngModel\">\n        <option *ngFor=\"let la of langs\" [value]=\"la.code\">{{la.name}}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"desc\">Mô tả</label>\n      <textarea type=\"text\" class=\"form-control\" id=\"desc\" [(ngModel)]=\"model.desc\" name=\"desc\"\n        #desc=\"ngModel\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Hủy</button>\n  <button mat-button color=\"primary\" [disabled]=\"!botForm.form.valid\" [mat-dialog-close]=\"true\" (click)=\"newBot(botForm); botForm.reset()\">Thêm\n    mới</button>\n</mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { BotsComponent } from '../../bots/bots.component';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-bot-remove',\n  templateUrl: './bot-remove.component.html',\n  styleUrls: ['./bot-remove.component.css']\n})\nexport class BotRemoveComponent implements OnInit {\n\n  //variable\nname: string;\ncurrentBot: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<BotsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) { }\n\n  ngOnInit() {\n    this.currentBot= this.data.name;\n  }\n\n  removeBot(){\n    this.dialogRef.close({action: 1, data: null});\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>Xác nhận xóa Bot</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <form #botForm1=\"ngForm\" autocomplete=\"off\">\n<p>Bạn có chắc muốn xóa bot:  <span style=\"font-weight: 600; font-size: 16px;\">{{currentBot}}</span></p>\n<p>Hãy nhập tên bot để xác nhận XÓA</p>\n\n\n    <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" id=\"names\" required [(ngModel)]=\"name\" name=\"names\" #names=\"ngModel\"\n         placeholder=\"Nhập tên bot hiện tại\">\n      <!-- <div [hidden]=\"names.valid || names.pristine\" class=\"alert alert-danger\">\n        Tên bot không được trống\n      </div> -->\n      <!-- <div [hidden]=\"!(names.valid || names.pristine) && (names == currentBot)\" class=\"alert alert-danger\">\n        Tên bot không hợp lệ\n      </div> -->\n    </div>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Hủy</button>\n  <button mat-button color=\"warn\" [disabled]=\"!botForm1.form.valid || (name != currentBot)\" [mat-dialog-close]=\"true\" (click)=\"removeBot(); botForm1.reset()\">Xóa</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guides',\n  templateUrl: './guides.component.html',\n  styleUrls: ['./guides.component.css']\n})\nexport class GuidesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- Applying the mat-tyography class adds styles for native elements. -->\n<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\"><mat-icon>arrow_back_ios</mat-icon></button>\n    <span class=\"title-header\">HƯỚNG DẪN</span>\n<!-- <div class=\"right-header\">\n    <div class=\"func-header\">\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>refresh</mat-icon>\n                LÀM MỚI\n            </button>\n        </span>\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>add</mat-icon>\n                TẠO MỚI BOT\n            </button>\n        </span>\n    </div>\n</div> -->\n    \n</mat-toolbar>\n<div class=\"page-content\"></div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- Applying the mat-tyography class adds styles for native elements. -->\n<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\">\n        <mat-icon>arrow_back_ios</mat-icon>\n    </button>\n    <span class=\"title-header\">DASHBOARD</span>\n</mat-toolbar>\n<div class=\"page-content\">\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profiles',\n  templateUrl: './profiles.component.html',\n  styleUrls: ['./profiles.component.css']\n})\nexport class ProfilesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\"><mat-icon>arrow_back_ios</mat-icon></button>\n    <span class=\"title-header\">PROFILES</span>\n<!-- <div class=\"right-header\">\n    <div class=\"func-header\">\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>refresh</mat-icon>\n                LÀM MỚI\n            </button>\n        </span>\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>add</mat-icon>\n                TẠO MỚI BOT\n            </button>\n        </span>\n    </div>\n</div> -->\n    \n</mat-toolbar>\n<div class=\"page-content\"></div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-supports',\n  templateUrl: './supports.component.html',\n  styleUrls: ['./supports.component.css']\n})\nexport class SupportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\"><mat-icon>arrow_back_ios</mat-icon></button>\n    <span class=\"title-header\">TRỢ GIÚP</span>\n<!-- <div class=\"right-header\">\n    <div class=\"func-header\">\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>refresh</mat-icon>\n                LÀM MỚI\n            </button>\n        </span>\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>add</mat-icon>\n                TẠO MỚI BOT\n            </button>\n        </span>\n    </div>\n</div> -->\n    \n</mat-toolbar>\n<div class=\"page-content\"></div>","export class Bot {\r\n    constructor(\r\n        public _Id: string,\r\n        public name: string,\r\n        public desc: string,\r\n        public lang: string,\r\n        public appId: string,\r\n        public appToken: string,\r\n        public isActive?: boolean,\r\n    ) { };\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    // 'Authorization': 'my-auth-token'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BotService {\n  \n  baseUrl = environment.apiEndpoint + '/api/';\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  public getAllBots = () => {\n    return this.http.get(this.baseUrl + 'Ai/Bots');\n  }\n  public getById = (botId: any) => {\n    return this.http.get(this.baseUrl + 'Ai/Bots/'+ botId);\n  }\n  public createBots = (data: any) => this.http.post<any>(this.baseUrl + 'Ai/Bots', data,httpOptions);\n  public removeBot = (botId: any) => {\n    return this.http.delete<any>(this.baseUrl + 'Ai/Bots/' + botId);\n  }\n}\n"]}