{"version":3,"sources":["webpack:///src/app/customer/bots/bots.component.ts","webpack:///src/app/customer/bots/bots.component.html","webpack:///src/app/customer/customer-routing.module.ts","webpack:///src/app/customer/customer.component.ts","webpack:///src/app/customer/customer.component.html","webpack:///src/app/customer/customer.module.ts","webpack:///src/app/customer/dialog/bot-create/bot-create.component.ts","webpack:///src/app/customer/dialog/bot-create/bot-create.component.html","webpack:///src/app/customer/dialog/bot-remove/bot-remove.component.ts","webpack:///src/app/customer/dialog/bot-remove/bot-remove.component.html","webpack:///src/app/customer/guides/guides.component.ts","webpack:///src/app/customer/guides/guides.component.html","webpack:///src/app/customer/overview/overview.component.ts","webpack:///src/app/customer/overview/overview.component.html","webpack:///src/app/customer/profiles/profiles.component.ts","webpack:///src/app/customer/profiles/profiles.component.html","webpack:///src/app/customer/supports/supports.component.ts","webpack:///src/app/customer/supports/supports.component.html","webpack:///src/app/shared/models/bots.model.ts"],"names":["BotsComponent","botServer","dialog","_snackBar","loading","bots","getAllBot","createBot","data","removeBot","getAllBots","subscribe","res","localStorage","setItem","JSON","stringify","setTimeout","error","open","duration","dialogRef","width","afterClosed","result","action","createBots","status","bot","botId","refresh","selector","templateUrl","styleUrls","routes","path","component","children","redirectTo","pathMatch","CustomerRoutingModule","forChild","imports","exports","CustomerComponent","router","authService","screenWidth","window","innerWidth","onresize","events","event","navigationInterceptor","logout","navigate","CustomerModule","declarations","providers","entryComponents","BotCreateComponent","langs","code","name","model","f","close","value","newBot","BotRemoveComponent","currentBot","GuidesComponent","OverviewComponent","ProfilesComponent","SupportsComponent","Bot","_Id","desc","lang","appId","appToken","isActive"],"mappings":"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","file":"customer-customer-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BotCreateComponent } from '../dialog/bot-create/bot-create.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BotService } from 'src/app/shared/services/bots.service';\nimport { BotRemoveComponent } from '../dialog/bot-remove/bot-remove.component';\nimport { Bot } from 'src/app/shared/models/bots.model';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-bots',\n  templateUrl: './bots.component.html',\n  styleUrls: ['./bots.component.css']\n})\nexport class BotsComponent implements OnInit {\n\n  loading = true;\n  //variable\n  bots: any = [];\n\n\n\n  constructor(\n    private botServer: BotService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar\n    ) { }\n\n  ngOnInit() {\n    this.getAllBot();\n  }\n\n  // reload data bot\n  refresh() {\n    this.getAllBot();\n  }\n\n  // opne diaglog create bot\n  diagCreateBot() {\n    this.createBot();\n  }\n  // opne diaglog remove bot\n  diagRemoveBot(data: any) {\n    this.removeBot(data);\n  }\n\n\n\n\n\n\n\n\n\n\n  //get all bot\n  getAllBot() {\n    this.botServer.getAllBots()\n      .subscribe(res => {\n\n        //this.connectFail = false;\n        this.bots = res['data'] as Bot[];\n        localStorage.setItem('tpsoftbot_client', JSON.stringify(this.bots));\n        setTimeout(() => {\n          this.loading = false;\n        }, 500);\n\n      },\n        error => {\n          this.loading = false;\n          this._snackBar.open('Đã có lỗi xảy ra', 'OK', {\n            duration: 1000\n          });\n          //this.connectFail = true;\n        }\n      );\n  }\n\n  //save localstorage data info bot\n  saveLocalStorageBot(data: any){\n    localStorage.setItem('tpsoftbot_client', JSON.stringify(data));\n  }\n\n  //create bot\n  createBot() {\n    const dialogRef = this.dialog.open(BotCreateComponent, {\n      data: null,\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.action === 1) {\n        this.botServer.createBots(result.data).subscribe(\n          res => {\n            if (res.status === 200) {\n              this.getAllBot();\n              this._snackBar.open('Thao tác thành công', 'OK', {\n                duration: 1000\n              });\n            } else {\n              this._snackBar.open('Thao tác không thành công', 'OK', {\n                duration: 1000\n              });\n            }\n          },\n          error => {\n            this._snackBar.open('Thao tác không thành công', 'OK', {\n              duration: 1000\n            });\n            //this.connectFail = true;\n          }\n        );\n      }\n    });\n\n  }\n\n  //remove bot\n  removeBot(bot:any) {\n    const dialogRef = this.dialog.open(BotRemoveComponent, {\n      data: bot,\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result && result.action === 1) {\n        this.botServer.removeBot(bot.botId).subscribe(\n          res => {\n            if (res.status === 200) {\n              this.getAllBot();\n              this._snackBar.open('Thao tác thành công', 'OK', {\n                duration: 1000\n              });\n            } else {\n              this._snackBar.open('Thao tác không thành công', 'OK', {\n                duration: 1000\n              });\n            }\n          },\n          error => {\n            this._snackBar.open('Thao tác không thành công', 'OK', {\n              duration: 1000\n            });\n            //this.connectFail = true;\n          }\n        );\n      }\n    });\n  }\n\n}\n","<!-- Applying the mat-tyography class adds styles for native elements. -->\n<mat-toolbar>\n\n    <button mat-icon-button color=\"primary\" class=\"btn-back\">\n        <mat-icon>arrow_back_ios</mat-icon>\n    </button>\n    <span class=\"title-header\">QUẢN LÝ BOT</span>\n\n    <div class=\"right-header\">\n        <div class=\"func-header\">\n            <span class=\"btn-header\">\n                <button mat-button color=\"primary\" (click)=\"refresh()\">\n                    <mat-icon>refresh</mat-icon>\n                    LÀM MỚI\n                </button>\n            </span>\n            <span class=\"btn-header\">\n                <!-- <button mat-button color=\"primary\" (click)=\"diagCreateBot()\">\n                    <mat-icon>add</mat-icon>\n                    TẠO MỚI BOT\n                </button> -->\n            </span>\n        </div>\n    </div>\n\n</mat-toolbar>\n<div class=\"page-content_1\" *ngIf=\"loading else isloading\">\n    <div class=\"loading\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin:auto;background:transparent;display:block;\" width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <rect fill=\"#e91624\" x=\"55\" y=\"15\" width=\"30\" height=\"30\" rx=\"3\" ry=\"3\">\n            <animate attributeName=\"x\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"-1.8333333333333333s\"></animate>\n            <animate attributeName=\"y\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"-1.3333333333333333s\"></animate>\n            </rect><rect fill=\"#f0a65a\" x=\"15\" y=\"50.388\" width=\"30\" height=\"30\" rx=\"3\" ry=\"3\">\n            <animate attributeName=\"x\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"-1.1666666666666667s\"></animate>\n            <animate attributeName=\"y\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"-0.6666666666666666s\"></animate>\n            </rect><rect fill=\"#13d00d\" x=\"55\" y=\"55\" width=\"30\" height=\"30\" rx=\"3\" ry=\"3\">\n            <animate attributeName=\"x\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"-0.5s\"></animate>\n            <animate attributeName=\"y\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0;0.083;0.25;0.333;0.5;0.583;0.75;0.833;1\" values=\"15;55;55;55;55;15;15;15;15\" begin=\"0s\"></animate>\n            </rect>\n            </svg>\n    </div>\n</div>\n\n<ng-template #isloading>\n    \n    <div class=\"page-content_1\" *ngIf =\"(bots == undefined ||bots.length == 0)\">\n        <div class=\"container-fluid\">\n           <span class=\"lb-empty\"> Không có dữ liệu</span>\n        </div>\n        \n    </div>\n    \n    <div class=\"page-content\" *ngIf=\"!(bots == undefined ||bots.length == 0)\">\n        <!-- list-bot -->\n        <div class=\"container-fluid\" > \n            <div class=\"list-bot\">\n                <div class=\"row\">\n                    <div class=\"col col-md-3 item-bot\" *ngFor=\"let item of bots\">\n                        <mat-card class=\"example-card\">\n                            <mat-card-content>\n                                <div class=\"btn-bot-option\">\n                                    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Setting\">\n                                        <mat-icon>more_vert</mat-icon>\n                                    </button>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button mat-menu-item *ngIf=\"item.isActive\">\n                                            <mat-icon>lock</mat-icon>\n                                            <span>Khóa Bot</span>\n                                        </button>\n                                        <button mat-menu-item *ngIf=\"!item.isActive\">\n                                            <mat-icon>lock_open</mat-icon>\n                                            <span>Mở khóa Bot</span>\n                                        </button>\n                                        <button mat-menu-item disabled>\n                                            <mat-icon>file_copy</mat-icon>\n                                            <span>Tạo bản sao</span>\n                                        </button>\n                                        <button mat-menu-item (click)=\"diagRemoveBot(item)\">\n                                            <mat-icon color=\"warn\">delete_sweep</mat-icon>\n                                            <span>Xóa bot</span>\n                                        </button>\n                                    </mat-menu>\n                                </div>\n                                <mat-list>\n                                    <mat-list-item class=\"mat-list-item-name\">\n                                        <mat-icon mat-list-icon>filter_center_focus</mat-icon>\n                                        <span mat-line class=\"item-bot-name\">{{item.name}}</span>\n                                    </mat-list-item>\n    \n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> ID: {{item.botId}} </p>\n                                        </mat-list-item>\n                                    </div>\n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> NGÔN NGỮ: {{item.lang== \"vi\"? \"Tiếng Việt\": \"Tiếng Anh\"}} </p>\n                                        </mat-list-item>\n                                    </div>\n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> Mô tả: {{item.desc}} </p>\n                                        </mat-list-item>\n                                    </div>\n                                    <div class=\"mat-list-item-info\">\n                                        <mat-list-item>\n                                            <!-- <mat-icon mat-list-icon>folder</mat-icon> -->\n                                            <p mat-line> NGÀY TẠO: {{item.createdAt}} </p>\n                                        </mat-list-item>\n                                    </div>\n    \n                                    <mat-divider></mat-divider>\n    \n                                </mat-list>\n    \n                                <button mat-button  [routerLink]=\"['../../bots',item.botId]\">\n                                    <mat-icon>arrow_forward</mat-icon><span>Đi đến Bot</span>\n                                </button>\n                            </mat-card-content>\n                        </mat-card>\n                    </div>\n                    <div class=\"col col-md-3 item-bot\">  \n                        <div class=\"card-add\" (click)=\"diagCreateBot()\">\n                            <mat-icon>add</mat-icon>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- end -->\n    \n    </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerComponent } from './customer.component';\nimport { BotsComponent } from './bots/bots.component';\nimport { OverviewComponent } from './overview/overview.component';\nimport { ProfilesComponent } from './profiles/profiles.component';\nimport { SupportsComponent } from './supports/supports.component';\nimport { GuidesComponent } from './guides/guides.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: CustomerComponent,\n    children: [\n\n  \n      {\n        path: 'bots', component: BotsComponent\n      },\n      // {\n      //   path: 'profiles', component: ProfilesComponent\n      // },\n\n\n      // {\n      //   path: '', redirectTo: 'overviews', pathMatch: 'full'\n      // },\n      {\n        path: '', redirectTo: 'bots', pathMatch: 'full'\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomerRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Event as RouterEvent, Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\nimport { AuthenticationService } from '../shared/services/authentication.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  screenWidth: number;\n  loading = true;\n\n  constructor(\n    private router: Router,\n    private authService: AuthenticationService,\n    ) {\n    // set screenWidth on page load\n    this.screenWidth = window.innerWidth;\n    window.onresize = () => {\n      // set screenWidth on screen size change\n      this.screenWidth = window.innerWidth;\n    };\n\n    router.events.subscribe((event: RouterEvent) => {\n      this.navigationInterceptor(event)\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  logout(){\n    this.authService.logout();\n    this.router.navigate(['login']);\n  }\n\n\n  // Shows and hides the loading spinner during RouterEvent changes\n  navigationInterceptor(event: RouterEvent): void {\n    if (event instanceof NavigationStart) {\n      this.loading = true\n    }\n    if (event instanceof NavigationEnd) {\n      setTimeout(() => {\n        this.loading = false;\n      }, 500);\n    }\n\n    if (event instanceof NavigationCancel) {\n      this.loading = false\n    }\n    if (event instanceof NavigationError) {\n      this.loading = false\n    }\n  }\n\n\n  \n\n}\n","<!-- Toolbar -->\n<mat-toolbar color=\"primary\">\n    <button  mat-icon-button aria-label=\"menu\">\n        <mat-icon>notes</mat-icon>\n    </button>\n    <span class=\"lb-logo\">AI - CHATCARE</span>\n\n    <div class=\"bar-right\">\n       \n        <button mat-icon-button *ngIf=\"loading\">\n            <mat-icon class=\"sysnc\">autorenew</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <mat-icon>help</mat-icon>\n        </button>\n        <button mat-icon-button>\n            <mat-icon>notifications</mat-icon>\n        </button>\n        <button mat-icon-button [matMenuTriggerFor]=\"notification\">\n            <mat-icon>more_vert</mat-icon>\n        </button>\n\n\n    </div>\n\n    <mat-menu #notification=\"matMenu\">\n        <button mat-menu-item disabled>\n            <mat-icon>account_box</mat-icon>\n            <span>Tài khoản</span>\n          </button>\n          <button mat-menu-item disabled>\n            <mat-icon>supervisor_account</mat-icon>\n            <span>Quản lý người dùng</span>\n          </button>\n          <button mat-menu-item (click)=\"logout()\">\n            <mat-icon>power_settings_new</mat-icon>\n            <span>Đăng xuất</span>\n          </button>\n    </mat-menu>\n\n</mat-toolbar>\n<!-- <mat-progress-bar *ngIf=\"loading\" color=\"warn\" mode=\"indeterminate\"></mat-progress-bar> -->\n\n<mat-sidenav-container class=\"customers-page\">\n    <!-- Sidenav -->\n    <!-- <mat-sidenav #sidenav [opened]=\"screenWidth > 840\" [mode]=\"(screenWidth > 840) ? 'side' : 'over'\">\n        <mat-toolbar><span class=\"title-header\"> <span>\n                    <mat-icon>accessibility</mat-icon>\n                </span>KHÁCH HÀNG</span></mat-toolbar>\n        <mat-nav-list>\n            <a mat-list-item routerLink=\"/customers/bots\" routerLinkActive=\"active\">\n                <mat-icon>content_paste</mat-icon> Quản lý bot\n            </a>\n            <a mat-list-item routerLink=\"/customers/profiles\" routerLinkActive=\"active\">\n                <mat-icon>person</mat-icon> Tài khoản\n            </a>\n\n            <a mat-list-item routerLink=\"/customers/guides\" routerLinkActive=\"active\">\n                <mat-icon>books</mat-icon> Hướng dẫn\n            </a>\n            <a mat-list-item routerLink=\"/customers/supports\" routerLinkActive=\"active\">\n                <mat-icon>help</mat-icon> Trợ giúp\n            </a>\n        </mat-nav-list>\n    </mat-sidenav> -->\n\n    <!-- Main content -->\n    <mat-sidenav-content>\n        <div class=\"loading\"></div>\n        <router-outlet></router-outlet>\n\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CustomerRoutingModule } from './customer-routing.module';\nimport { CustomerComponent } from './customer.component';\nimport { BotsComponent } from './bots/bots.component';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { OverviewComponent } from './overview/overview.component';\nimport { SupportsComponent } from './supports/supports.component';\nimport { ProfilesComponent } from './profiles/profiles.component';\nimport { GuidesComponent } from './guides/guides.component';\nimport { BotCreateComponent } from './dialog/bot-create/bot-create.component';\nimport { BotRemoveComponent } from './dialog/bot-remove/bot-remove.component';\nimport { BotService } from '../shared/services/bots.service';\n\n\n@NgModule({\n  declarations: [\n    CustomerComponent,\n    BotsComponent,\n    OverviewComponent,\n    SupportsComponent,\n    ProfilesComponent,\n    GuidesComponent,\n    BotCreateComponent,\n    BotRemoveComponent\n  ],\n  imports: [\n    CommonModule,\n    CustomerRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatCardModule,\n    MatMenuModule,\n    MatSnackBarModule,\n  ],\n  providers: [\n    BotService,\n  ],\n  entryComponents: [\n    BotCreateComponent,\n    BotRemoveComponent,\n  ]\n})\nexport class CustomerModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { BotsComponent } from '../../bots/bots.component';\nimport { NgForm } from '@angular/forms';\nimport { Bot } from 'src/app/shared/models/bots.model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-bot-create',\n  templateUrl: './bot-create.component.html',\n  styleUrls: ['./bot-create.component.css']\n})\nexport class BotCreateComponent implements OnInit {\n\n  langs = [{code: 'en', name:'Tiếng Anh'},{code: 'vi', name:'Tiếng Việt'} ];\n\n  model = new Bot(null, null,null, this.langs[0].code,null, null, true);\n\n  constructor(\n    //private botServer: BotService,\n    //private toastr: ToastrService,\n    public dialogRef: MatDialogRef<BotsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    ) { }\n\n  ngOnInit() {\n  }\n\n  newBot(f:NgForm) {\n    this.dialogRef.close({action: 1, data: f.value});\n  }\n\n}\n","<span class=\"lb-header\" mat-dialog-title>Thêm mới Bot</span>\n<mat-dialog-content class=\"mat-typography\">\n  <form  #botForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"name\">Tên bot</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"model.name\" name=\"name\" #name=\"ngModel\">\n      <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n        Tên bot không được trống\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lang\">Ngôn ngữ</label>\n      <select class=\"form-control\" id=\"lang\" required [(ngModel)]=\"model.lang\" name=\"lang\" #lang=\"ngModel\">\n        <option *ngFor=\"let la of langs\" [value]=\"la.code\">{{la.name}}</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"desc\">Mô tả</label>\n      <textarea type=\"text\" class=\"form-control\" id=\"desc\" [(ngModel)]=\"model.desc\" name=\"desc\"\n        #desc=\"ngModel\"></textarea>\n    </div>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Hủy</button>\n  <button mat-button color=\"primary\" [disabled]=\"!botForm.form.valid\" [mat-dialog-close]=\"true\" (click)=\"newBot(botForm); botForm.reset()\">Thêm\n    mới</button>\n</mat-dialog-actions>","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { BotsComponent } from '../../bots/bots.component';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-bot-remove',\n  templateUrl: './bot-remove.component.html',\n  styleUrls: ['./bot-remove.component.css']\n})\nexport class BotRemoveComponent implements OnInit {\n\n  //variable\nname: string;\ncurrentBot: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<BotsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n    ) { }\n\n  ngOnInit() {\n    this.currentBot= this.data.name;\n  }\n\n  removeBot(){\n    this.dialogRef.close({action: 1, data: null});\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>Xác nhận xóa Bot</h2>\n<mat-dialog-content class=\"mat-typography\">\n  <form #botForm1=\"ngForm\" autocomplete=\"off\">\n<p>Bạn có chắc muốn xóa bot:  <span style=\"font-weight: 600; font-size: 16px;\">{{currentBot}}</span></p>\n<p>Hãy nhập tên bot để xác nhận XÓA</p>\n\n\n    <div class=\"form-group\">\n      <input type=\"text\" class=\"form-control\" id=\"names\" required [(ngModel)]=\"name\" name=\"names\" #names=\"ngModel\"\n         placeholder=\"Nhập tên bot hiện tại\">\n      <!-- <div [hidden]=\"names.valid || names.pristine\" class=\"alert alert-danger\">\n        Tên bot không được trống\n      </div> -->\n      <!-- <div [hidden]=\"!(names.valid || names.pristine) && (names == currentBot)\" class=\"alert alert-danger\">\n        Tên bot không hợp lệ\n      </div> -->\n    </div>\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Hủy</button>\n  <button mat-button color=\"warn\" [disabled]=\"!botForm1.form.valid || (name != currentBot)\" [mat-dialog-close]=\"true\" (click)=\"removeBot(); botForm1.reset()\">Xóa</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guides',\n  templateUrl: './guides.component.html',\n  styleUrls: ['./guides.component.css']\n})\nexport class GuidesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- Applying the mat-tyography class adds styles for native elements. -->\n<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\"><mat-icon>arrow_back_ios</mat-icon></button>\n    <span class=\"title-header\">HƯỚNG DẪN</span>\n<!-- <div class=\"right-header\">\n    <div class=\"func-header\">\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>refresh</mat-icon>\n                LÀM MỚI\n            </button>\n        </span>\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>add</mat-icon>\n                TẠO MỚI BOT\n            </button>\n        </span>\n    </div>\n</div> -->\n    \n</mat-toolbar>\n<div class=\"page-content\"></div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- Applying the mat-tyography class adds styles for native elements. -->\n<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\">\n        <mat-icon>arrow_back_ios</mat-icon>\n    </button>\n    <span class=\"title-header\">DASHBOARD</span>\n</mat-toolbar>\n<div class=\"page-content\">\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profiles',\n  templateUrl: './profiles.component.html',\n  styleUrls: ['./profiles.component.css']\n})\nexport class ProfilesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\"><mat-icon>arrow_back_ios</mat-icon></button>\n    <span class=\"title-header\">PROFILES</span>\n<!-- <div class=\"right-header\">\n    <div class=\"func-header\">\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>refresh</mat-icon>\n                LÀM MỚI\n            </button>\n        </span>\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>add</mat-icon>\n                TẠO MỚI BOT\n            </button>\n        </span>\n    </div>\n</div> -->\n    \n</mat-toolbar>\n<div class=\"page-content\"></div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-supports',\n  templateUrl: './supports.component.html',\n  styleUrls: ['./supports.component.css']\n})\nexport class SupportsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-toolbar>\n    <button mat-icon-button color=\"primary\" class=\"btn-back\"><mat-icon>arrow_back_ios</mat-icon></button>\n    <span class=\"title-header\">TRỢ GIÚP</span>\n<!-- <div class=\"right-header\">\n    <div class=\"func-header\">\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>refresh</mat-icon>\n                LÀM MỚI\n            </button>\n        </span>\n        <span class=\"btn-header\">\n            <button mat-button color=\"primary\">\n                <mat-icon>add</mat-icon>\n                TẠO MỚI BOT\n            </button>\n        </span>\n    </div>\n</div> -->\n    \n</mat-toolbar>\n<div class=\"page-content\"></div>","export class Bot {\r\n    constructor(\r\n        public _Id: string,\r\n        public name: string,\r\n        public desc: string,\r\n        public lang: string,\r\n        public appId: string,\r\n        public appToken: string,\r\n        public isActive?: boolean,\r\n    ) { };\r\n\r\n}"]}